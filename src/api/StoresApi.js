/**
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RestApiErrorResult', 'model/RestApiForbiddenResult', 'model/RestApiPaginationResultStore', 'model/RestApiResultStore', 'model/RestApiUnauthorizedResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/RestApiErrorResult'), require('../model/RestApiForbiddenResult'), require('../model/RestApiPaginationResultStore'), require('../model/RestApiResultStore'), require('../model/RestApiUnauthorizedResult'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.StoresApi = factory(root.Flipdish.ApiClient, root.Flipdish.RestApiErrorResult, root.Flipdish.RestApiForbiddenResult, root.Flipdish.RestApiPaginationResultStore, root.Flipdish.RestApiResultStore, root.Flipdish.RestApiUnauthorizedResult);
  }
}(this, function(ApiClient, RestApiErrorResult, RestApiForbiddenResult, RestApiPaginationResultStore, RestApiResultStore, RestApiUnauthorizedResult) {
  'use strict';

  /**
   * Stores service.
   * @module api/StoresApi
   * @version 1.0.0
   */

  /**
   * Constructs a new StoresApi. 
   * @alias module:api/StoresApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getStoreById operation.
     * @callback module:api/StoresApi~getStoreByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultStore} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get store by identifier
     * @param {Number} storeId Store identifier
     * @param {module:api/StoresApi~getStoreByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultStore}
     */
    this.getStoreById = function(storeId, callback) {
      var postBody = null;

      // verify the required parameter 'storeId' is set
      if (storeId === undefined || storeId === null) {
        throw new Error("Missing the required parameter 'storeId' when calling getStoreById");
      }


      var pathParams = {
        'storeId': storeId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultStore;

      return this.apiClient.callApi(
        '/api/v1.0/stores/{storeId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStores operation.
     * @callback module:api/StoresApi~getStoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiPaginationResultStore} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all stores
     * @param {Object} opts Optional parameters
     * @param {String} opts.searchQuery Search query
     * @param {Number} opts.page Requested page index
     * @param {Number} opts.limit Requested page limit
     * @param {module:api/StoresApi~getStoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiPaginationResultStore}
     */
    this.getStores = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'searchQuery': opts['searchQuery'],
        'page': opts['page'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiPaginationResultStore;

      return this.apiClient.callApi(
        '/api/v1.0/stores', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
