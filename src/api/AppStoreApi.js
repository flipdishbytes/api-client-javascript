/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RestApiErrorResult from '../model/RestApiErrorResult';
import RestApiForbiddenResult from '../model/RestApiForbiddenResult';
import RestApiPaginationResultAppStoreAppSummary from '../model/RestApiPaginationResultAppStoreAppSummary';
import RestApiResultAppStoreApp from '../model/RestApiResultAppStoreApp';
import RestApiUnauthorizedResult from '../model/RestApiUnauthorizedResult';

/**
* AppStore service.
* @module api/AppStoreApi
* @version 1.0.0
*/
export default class AppStoreApi {

    /**
    * Constructs a new AppStoreApi. 
    * @alias module:api/AppStoreApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAppStoreApp operation.
     * @callback module:api/AppStoreApi~getAppStoreAppCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultAppStoreApp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} appStoreAppId 
     * @param {Object} opts Optional parameters
     * @param {String} opts.appId 
     * @param {module:api/AppStoreApi~getAppStoreAppCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultAppStoreApp}
     */
    getAppStoreApp(appStoreAppId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appStoreAppId' is set
      if (appStoreAppId === undefined || appStoreAppId === null) {
        throw new Error("Missing the required parameter 'appStoreAppId' when calling getAppStoreApp");
      }

      let pathParams = {
        'appStoreAppId': appStoreAppId
      };
      let queryParams = {
        'appId': opts['appId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml', 'Data', 'Message', 'ErrorCode', 'StackTrace'];
      let returnType = RestApiResultAppStoreApp;
      return this.apiClient.callApi(
        '/api/v1.0/appstore/apps/{appStoreAppId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAppStoreApps operation.
     * @callback module:api/AppStoreApi~getAppStoreAppsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiPaginationResultAppStoreAppSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} search 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.limit 
     * @param {Boolean} opts.excludeNotOwned 
     * @param {Boolean} opts.showOnlyVerified 
     * @param {module:api/AppStoreApi~getAppStoreAppsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiPaginationResultAppStoreAppSummary}
     */
    getAppStoreApps(search, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'search' is set
      if (search === undefined || search === null) {
        throw new Error("Missing the required parameter 'search' when calling getAppStoreApps");
      }

      let pathParams = {
      };
      let queryParams = {
        'search': search,
        'page': opts['page'],
        'limit': opts['limit'],
        'excludeNotOwned': opts['excludeNotOwned'],
        'showOnlyVerified': opts['showOnlyVerified']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml', 'Data'];
      let returnType = RestApiPaginationResultAppStoreAppSummary;
      return this.apiClient.callApi(
        '/api/v1.0/appstore/apps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
