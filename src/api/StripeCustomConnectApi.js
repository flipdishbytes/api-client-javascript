/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BankAccountCreate', 'model/BankAccountDetailsUpdateRequest', 'model/RestApiErrorResult', 'model/RestApiForbiddenResult', 'model/RestApiResultBankAccountDetail', 'model/RestApiResultStripeConnectedAccount', 'model/RestApiUnauthorizedResult', 'model/StripeAccountLinkRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BankAccountCreate'), require('../model/BankAccountDetailsUpdateRequest'), require('../model/RestApiErrorResult'), require('../model/RestApiForbiddenResult'), require('../model/RestApiResultBankAccountDetail'), require('../model/RestApiResultStripeConnectedAccount'), require('../model/RestApiUnauthorizedResult'), require('../model/StripeAccountLinkRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.StripeCustomConnectApi = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.BankAccountCreate, root.FlipdishOpenApiV10.BankAccountDetailsUpdateRequest, root.FlipdishOpenApiV10.RestApiErrorResult, root.FlipdishOpenApiV10.RestApiForbiddenResult, root.FlipdishOpenApiV10.RestApiResultBankAccountDetail, root.FlipdishOpenApiV10.RestApiResultStripeConnectedAccount, root.FlipdishOpenApiV10.RestApiUnauthorizedResult, root.FlipdishOpenApiV10.StripeAccountLinkRequest);
  }
}(this, function(ApiClient, BankAccountCreate, BankAccountDetailsUpdateRequest, RestApiErrorResult, RestApiForbiddenResult, RestApiResultBankAccountDetail, RestApiResultStripeConnectedAccount, RestApiUnauthorizedResult, StripeAccountLinkRequest) {
  'use strict';

  /**
   * StripeCustomConnect service.
   * @module api/StripeCustomConnectApi
   * @version v1.0
   */

  /**
   * Constructs a new StripeCustomConnectApi. 
   * @alias module:api/StripeCustomConnectApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createBankAccountAndConnectedAccount operation.
     * @callback module:api/StripeCustomConnectApi~createBankAccountAndConnectedAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultBankAccountDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Bank Account and Stripe connected account
     * @param {String} appId App Name
     * @param {module:model/BankAccountCreate} account Account to be created
     * @param {module:api/StripeCustomConnectApi~createBankAccountAndConnectedAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultBankAccountDetail}
     */
    this.createBankAccountAndConnectedAccount = function(appId, account, callback) {
      var postBody = account;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling createBankAccountAndConnectedAccount");
      }

      // verify the required parameter 'account' is set
      if (account === undefined || account === null) {
        throw new Error("Missing the required parameter 'account' when calling createBankAccountAndConnectedAccount");
      }


      var pathParams = {
        'appId': appId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultBankAccountDetail;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/bank-account', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createStripeConnectedAccount operation.
     * @callback module:api/StripeCustomConnectApi~createStripeConnectedAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultStripeConnectedAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update a Stripe connected account associated with the bank account of bankAccountId
     * @param {String} appId App Name Id
     * @param {Number} bankAccountId Bank Account Id
     * @param {module:api/StripeCustomConnectApi~createStripeConnectedAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultStripeConnectedAccount}
     */
    this.createStripeConnectedAccount = function(appId, bankAccountId, callback) {
      var postBody = null;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling createStripeConnectedAccount");
      }

      // verify the required parameter 'bankAccountId' is set
      if (bankAccountId === undefined || bankAccountId === null) {
        throw new Error("Missing the required parameter 'bankAccountId' when calling createStripeConnectedAccount");
      }


      var pathParams = {
        'appId': appId,
        'bankAccountId': bankAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultStripeConnectedAccount;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/{bankAccountId}/create-update-account', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createStripeConnectedAccountLink operation.
     * @callback module:api/StripeCustomConnectApi~createStripeConnectedAccountLinkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultStripeConnectedAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a single-use Stripe URL for the given account
     * @param {String} appId App Name
     * @param {String} stripeConnectedAccountId Stripe Connected Account Id
     * @param {module:model/StripeAccountLinkRequest} stripeAccountLinkRequest 
     * @param {module:api/StripeCustomConnectApi~createStripeConnectedAccountLinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultStripeConnectedAccount}
     */
    this.createStripeConnectedAccountLink = function(appId, stripeConnectedAccountId, stripeAccountLinkRequest, callback) {
      var postBody = stripeAccountLinkRequest;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling createStripeConnectedAccountLink");
      }

      // verify the required parameter 'stripeConnectedAccountId' is set
      if (stripeConnectedAccountId === undefined || stripeConnectedAccountId === null) {
        throw new Error("Missing the required parameter 'stripeConnectedAccountId' when calling createStripeConnectedAccountLink");
      }

      // verify the required parameter 'stripeAccountLinkRequest' is set
      if (stripeAccountLinkRequest === undefined || stripeAccountLinkRequest === null) {
        throw new Error("Missing the required parameter 'stripeAccountLinkRequest' when calling createStripeConnectedAccountLink");
      }


      var pathParams = {
        'appId': appId,
        'stripeConnectedAccountId': stripeConnectedAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultStripeConnectedAccount;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/{stripeConnectedAccountId}/create-account-link', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getVerificationStatus operation.
     * @callback module:api/StripeCustomConnectApi~getVerificationStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultStripeConnectedAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the current verification status of the given connected account
     * @param {String} appId 
     * @param {String} stripeConnectedAccountId 
     * @param {module:api/StripeCustomConnectApi~getVerificationStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultStripeConnectedAccount}
     */
    this.getVerificationStatus = function(appId, stripeConnectedAccountId, callback) {
      var postBody = null;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling getVerificationStatus");
      }

      // verify the required parameter 'stripeConnectedAccountId' is set
      if (stripeConnectedAccountId === undefined || stripeConnectedAccountId === null) {
        throw new Error("Missing the required parameter 'stripeConnectedAccountId' when calling getVerificationStatus");
      }


      var pathParams = {
        'appId': appId
      };
      var queryParams = {
        'stripeConnectedAccountId': stripeConnectedAccountId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultStripeConnectedAccount;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/verification-status', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setBankAccountBusinessType operation.
     * @callback module:api/StripeCustomConnectApi~setBankAccountBusinessTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultBankAccountDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update bank account's BusinessType and create a Stripe Connected Account
     * @param {String} appId App Name
     * @param {Number} bankAccountId Bank Account Id
     * @param {String} businessType Bank Account business type
     * @param {module:api/StripeCustomConnectApi~setBankAccountBusinessTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultBankAccountDetail}
     */
    this.setBankAccountBusinessType = function(appId, bankAccountId, businessType, callback) {
      var postBody = businessType;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling setBankAccountBusinessType");
      }

      // verify the required parameter 'bankAccountId' is set
      if (bankAccountId === undefined || bankAccountId === null) {
        throw new Error("Missing the required parameter 'bankAccountId' when calling setBankAccountBusinessType");
      }

      // verify the required parameter 'businessType' is set
      if (businessType === undefined || businessType === null) {
        throw new Error("Missing the required parameter 'businessType' when calling setBankAccountBusinessType");
      }


      var pathParams = {
        'appId': appId,
        'bankAccountId': bankAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultBankAccountDetail;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/bank-account/{bankAccountId}/businesstype', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the stripeCustomConnectRefresh operation.
     * @callback module:api/StripeCustomConnectApi~stripeCustomConnectRefreshCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} linkRequestId 
     * @param {String} appId 
     * @param {module:api/StripeCustomConnectApi~stripeCustomConnectRefreshCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.stripeCustomConnectRefresh = function(linkRequestId, appId, callback) {
      var postBody = null;

      // verify the required parameter 'linkRequestId' is set
      if (linkRequestId === undefined || linkRequestId === null) {
        throw new Error("Missing the required parameter 'linkRequestId' when calling stripeCustomConnectRefresh");
      }

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling stripeCustomConnectRefresh");
      }


      var pathParams = {
        'appId': appId
      };
      var queryParams = {
        'linkRequestId': linkRequestId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/refresh-link', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBankAccountDetails operation.
     * @callback module:api/StripeCustomConnectApi~updateBankAccountDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestApiResultStripeConnectedAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update bank account details
     * @param {String} appId App Name Id
     * @param {Number} bankAccountId Bank Account Id
     * @param {module:model/BankAccountDetailsUpdateRequest} updateRequest fields to be updated
     * @param {module:api/StripeCustomConnectApi~updateBankAccountDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestApiResultStripeConnectedAccount}
     */
    this.updateBankAccountDetails = function(appId, bankAccountId, updateRequest, callback) {
      var postBody = updateRequest;

      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling updateBankAccountDetails");
      }

      // verify the required parameter 'bankAccountId' is set
      if (bankAccountId === undefined || bankAccountId === null) {
        throw new Error("Missing the required parameter 'bankAccountId' when calling updateBankAccountDetails");
      }

      // verify the required parameter 'updateRequest' is set
      if (updateRequest === undefined || updateRequest === null) {
        throw new Error("Missing the required parameter 'updateRequest' when calling updateBankAccountDetails");
      }


      var pathParams = {
        'appId': appId,
        'bankAccountId': bankAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = RestApiResultStripeConnectedAccount;

      return this.apiClient.callApi(
        '/api/v1.0/{appId}/customconnect/{bankAccountId}/update-bank-account-details', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
