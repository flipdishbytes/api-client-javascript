/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountFieldDefinition from './AccountFieldDefinition';

/**
 * The CountryWithAccountFieldsDefinitions model module.
 * @module model/CountryWithAccountFieldsDefinitions
 * @version 1.0.0
 */
class CountryWithAccountFieldsDefinitions {
    /**
     * Constructs a new <code>CountryWithAccountFieldsDefinitions</code>.
     * List of field definitions per country
     * @alias module:model/CountryWithAccountFieldsDefinitions
     */
    constructor() { 
        
        CountryWithAccountFieldsDefinitions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CountryWithAccountFieldsDefinitions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CountryWithAccountFieldsDefinitions} obj Optional instance to populate.
     * @return {module:model/CountryWithAccountFieldsDefinitions} The populated <code>CountryWithAccountFieldsDefinitions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CountryWithAccountFieldsDefinitions();

            if (data.hasOwnProperty('CountryCode')) {
                obj['CountryCode'] = ApiClient.convertToType(data['CountryCode'], 'String');
            }
            if (data.hasOwnProperty('DisplayName')) {
                obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
            }
            if (data.hasOwnProperty('SupportType')) {
                obj['SupportType'] = ApiClient.convertToType(data['SupportType'], 'String');
            }
            if (data.hasOwnProperty('FieldDefinitions')) {
                obj['FieldDefinitions'] = ApiClient.convertToType(data['FieldDefinitions'], [AccountFieldDefinition]);
            }
        }
        return obj;
    }


}

/**
 * Country 2-letter ISO code
 * @member {String} CountryCode
 */
CountryWithAccountFieldsDefinitions.prototype['CountryCode'] = undefined;

/**
 * Display name of the country
 * @member {String} DisplayName
 */
CountryWithAccountFieldsDefinitions.prototype['DisplayName'] = undefined;

/**
 * Country support type (supported-by-stripe-cc, supported-by-flipdish,not-supported)
 * @member {String} SupportType
 */
CountryWithAccountFieldsDefinitions.prototype['SupportType'] = undefined;

/**
 * Bank Account field definitions
 * @member {Array.<module:model/AccountFieldDefinition>} FieldDefinitions
 */
CountryWithAccountFieldsDefinitions.prototype['FieldDefinitions'] = undefined;






export default CountryWithAccountFieldsDefinitions;

