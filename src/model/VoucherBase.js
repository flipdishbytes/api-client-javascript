/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.VoucherBase = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The VoucherBase model module.
   * @module model/VoucherBase
   * @version v1.0
   */

  /**
   * Constructs a new <code>VoucherBase</code>.
   * Voucher Base
   * @alias module:model/VoucherBase
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>VoucherBase</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VoucherBase} obj Optional instance to populate.
   * @return {module:model/VoucherBase} The populated <code>VoucherBase</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Code'))
        obj.code = ApiClient.convertToType(data['Code'], 'String');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('ValidOnOrdersOver'))
        obj.validOnOrdersOver = ApiClient.convertToType(data['ValidOnOrdersOver'], 'Number');
      if (data.hasOwnProperty('TakesPriority'))
        obj.takesPriority = ApiClient.convertToType(data['TakesPriority'], 'Boolean');
      if (data.hasOwnProperty('IsEnabled'))
        obj.isEnabled = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
      if (data.hasOwnProperty('IsAutomaticallyApplied'))
        obj.isAutomaticallyApplied = ApiClient.convertToType(data['IsAutomaticallyApplied'], 'Boolean');
      if (data.hasOwnProperty('IncludeDeliveryFee'))
        obj.includeDeliveryFee = ApiClient.convertToType(data['IncludeDeliveryFee'], 'Boolean');
      if (data.hasOwnProperty('IsValidForDeliveryOrders'))
        obj.isValidForDeliveryOrders = ApiClient.convertToType(data['IsValidForDeliveryOrders'], 'Boolean');
      if (data.hasOwnProperty('IsValidForPickupOrders'))
        obj.isValidForPickupOrders = ApiClient.convertToType(data['IsValidForPickupOrders'], 'Boolean');
      if (data.hasOwnProperty('IsValidForOrdersPayedOnline'))
        obj.isValidForOrdersPayedOnline = ApiClient.convertToType(data['IsValidForOrdersPayedOnline'], 'Boolean');
      if (data.hasOwnProperty('IsValidForOrdersPayedByCash'))
        obj.isValidForOrdersPayedByCash = ApiClient.convertToType(data['IsValidForOrdersPayedByCash'], 'Boolean');
      if (data.hasOwnProperty('IsValidForFirstOrderOnly'))
        obj.isValidForFirstOrderOnly = ApiClient.convertToType(data['IsValidForFirstOrderOnly'], 'Boolean');
      if (data.hasOwnProperty('IsValidOncePerCustomer'))
        obj.isValidOncePerCustomer = ApiClient.convertToType(data['IsValidOncePerCustomer'], 'Boolean');
      if (data.hasOwnProperty('IsValidOnlyOnce'))
        obj.isValidOnlyOnce = ApiClient.convertToType(data['IsValidOnlyOnce'], 'Boolean');
      if (data.hasOwnProperty('StartDate'))
        obj.startDate = ApiClient.convertToType(data['StartDate'], 'Date');
      if (data.hasOwnProperty('ExpiryDate'))
        obj.expiryDate = ApiClient.convertToType(data['ExpiryDate'], 'Date');
    }
    return obj;
  }

  /**
   * Voucher Code
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * Voucher Description (Visible on printout)
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Valid on orders on or above
   * @member {Number} validOnOrdersOver
   */
  exports.prototype.validOnOrdersOver = undefined;

  /**
   * Takes priority
   * @member {Boolean} takesPriority
   */
  exports.prototype.takesPriority = undefined;

  /**
   * Is voucher enabled
   * @member {Boolean} isEnabled
   */
  exports.prototype.isEnabled = undefined;

  /**
   * Is voucher automatically applied
   * @member {Boolean} isAutomaticallyApplied
   */
  exports.prototype.isAutomaticallyApplied = undefined;

  /**
   * Include delivery fees
   * @member {Boolean} includeDeliveryFee
   */
  exports.prototype.includeDeliveryFee = undefined;

  /**
   * Valid for delivery orders
   * @member {Boolean} isValidForDeliveryOrders
   */
  exports.prototype.isValidForDeliveryOrders = undefined;

  /**
   * Valid for pickup orders
   * @member {Boolean} isValidForPickupOrders
   */
  exports.prototype.isValidForPickupOrders = undefined;

  /**
   * Valid for orders payed online
   * @member {Boolean} isValidForOrdersPayedOnline
   */
  exports.prototype.isValidForOrdersPayedOnline = undefined;

  /**
   * Valid for orders payed in cash
   * @member {Boolean} isValidForOrdersPayedByCash
   */
  exports.prototype.isValidForOrdersPayedByCash = undefined;

  /**
   * Valid only on the first order by the customer
   * @member {Boolean} isValidForFirstOrderOnly
   */
  exports.prototype.isValidForFirstOrderOnly = undefined;

  /**
   * Valid once per customer
   * @member {Boolean} isValidOncePerCustomer
   */
  exports.prototype.isValidOncePerCustomer = undefined;

  /**
   * Valid only once, by any customer (once used cannot be used again by any other customer)
   * @member {Boolean} isValidOnlyOnce
   */
  exports.prototype.isValidOnlyOnce = undefined;

  /**
   * Voucher Starts On (Time in UTC)
   * @member {Date} startDate
   */
  exports.prototype.startDate = undefined;

  /**
   * Voucher Expires On (Time in UTC)
   * @member {Date} expiryDate
   */
  exports.prototype.expiryDate = undefined;


  return exports;

}));
