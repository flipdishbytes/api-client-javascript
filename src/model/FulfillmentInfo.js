/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Location', 'model/Price'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Location'), require('./Price'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.FulfillmentInfo = factory(root.Flipdish.ApiClient, root.Flipdish.Location, root.Flipdish.Price);
  }
}(this, function(ApiClient, Location, Price) {
  'use strict';

  /**
   * The FulfillmentInfo model module.
   * @module model/FulfillmentInfo
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>FulfillmentInfo</code>.
   * Fulfillment information (required for all orders)
   * @alias module:model/FulfillmentInfo
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>FulfillmentInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FulfillmentInfo} obj Optional instance to populate.
   * @return {module:model/FulfillmentInfo} The populated <code>FulfillmentInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('DispatchType'))
        obj.DispatchType = ApiClient.convertToType(data['DispatchType'], 'String');
      if (data.hasOwnProperty('RequestedForUtc'))
        obj.RequestedForUtc = ApiClient.convertToType(data['RequestedForUtc'], 'Date');
      if (data.hasOwnProperty('Location'))
        obj.Location = Location.constructFromObject(data['Location']);
      if (data.hasOwnProperty('DispatchAmount'))
        obj.DispatchAmount = Price.constructFromObject(data['DispatchAmount']);
    }
    return obj;
  }

  /**
   * [Required] Dispatch Type (i.e Pickup / Delivery)
   * @member {module:model/FulfillmentInfo.DispatchTypeEnum} DispatchType
   */
  exports.prototype.DispatchType = undefined;

  /**
   * [Required] Time the order is requested for
   * @member {Date} RequestedForUtc
   */
  exports.prototype.RequestedForUtc = undefined;

  /**
   * Location the order is to be delivered to  [Required] Delivery  [Not Required] Pickup
   * @member {module:model/Location} Location
   */
  exports.prototype.Location = undefined;

  /**
   * Price of the dispatch, normally 0 for collection and a value for delivery  [Required] Delivery  [Not Required] Pickup
   * @member {module:model/Price} DispatchAmount
   */
  exports.prototype.DispatchAmount = undefined;



  /**
   * Allowed values for the <code>DispatchType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DispatchTypeEnum = {
    /**
     * value: "Delivery"
     * @const
     */
    Delivery: "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    Pickup: "Pickup"
  };

  return exports;

}));
