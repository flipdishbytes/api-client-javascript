/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import Price from './Price';

/**
 * The FulfillmentInfo model module.
 * @module model/FulfillmentInfo
 * @version 1.0.0
 */
class FulfillmentInfo {
    /**
     * Constructs a new <code>FulfillmentInfo</code>.
     * Fulfillment information (required for all orders)
     * @alias module:model/FulfillmentInfo
     */
    constructor() { 
        
        FulfillmentInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FulfillmentInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FulfillmentInfo} obj Optional instance to populate.
     * @return {module:model/FulfillmentInfo} The populated <code>FulfillmentInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentInfo();

            if (data.hasOwnProperty('DispatchType')) {
                obj['DispatchType'] = ApiClient.convertToType(data['DispatchType'], 'String');
            }
            if (data.hasOwnProperty('RequestedForUtc')) {
                obj['RequestedForUtc'] = ApiClient.convertToType(data['RequestedForUtc'], 'Date');
            }
            if (data.hasOwnProperty('Location')) {
                obj['Location'] = Location.constructFromObject(data['Location']);
            }
            if (data.hasOwnProperty('DispatchAmount')) {
                obj['DispatchAmount'] = Price.constructFromObject(data['DispatchAmount']);
            }
        }
        return obj;
    }


}

/**
 * [Required] Dispatch Type (i.e Pickup / Delivery)
 * @member {module:model/FulfillmentInfo.DispatchTypeEnum} DispatchType
 */
FulfillmentInfo.prototype['DispatchType'] = undefined;

/**
 * [Required] Time the order is requested for
 * @member {Date} RequestedForUtc
 */
FulfillmentInfo.prototype['RequestedForUtc'] = undefined;

/**
 * @member {module:model/Location} Location
 */
FulfillmentInfo.prototype['Location'] = undefined;

/**
 * @member {module:model/Price} DispatchAmount
 */
FulfillmentInfo.prototype['DispatchAmount'] = undefined;





/**
 * Allowed values for the <code>DispatchType</code> property.
 * @enum {String}
 * @readonly
 */
FulfillmentInfo['DispatchTypeEnum'] = {

    /**
     * value: "Delivery"
     * @const
     */
    "Delivery": "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    "Pickup": "Pickup"
};



export default FulfillmentInfo;

