/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateMetafieldDefinition model module.
 * @module model/CreateMetafieldDefinition
 * @version 1.0.0
 */
class CreateMetafieldDefinition {
    /**
     * Constructs a new <code>CreateMetafieldDefinition</code>.
     * Information to create a {Flipdish.Metafields.PublicModels.V1.MetafieldDefinition}
     * @alias module:model/CreateMetafieldDefinition
     * @param Key {String} Key of the metafield.  The key must have two parts, separated by a dot. The first part acts as a category, for organizational purposes.  The parts can be composed of lowercase letters, numbers, hyphen and underscore
     * @param Name {String} Field Name
     */
    constructor(Key, Name) { 
        
        CreateMetafieldDefinition.initialize(this, Key, Name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, Key, Name) { 
        obj['Key'] = Key;
        obj['Name'] = Name;
    }

    /**
     * Constructs a <code>CreateMetafieldDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMetafieldDefinition} obj Optional instance to populate.
     * @return {module:model/CreateMetafieldDefinition} The populated <code>CreateMetafieldDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMetafieldDefinition();

            if (data.hasOwnProperty('IsReadOnly')) {
                obj['IsReadOnly'] = ApiClient.convertToType(data['IsReadOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('OwnerEntity')) {
                obj['OwnerEntity'] = ApiClient.convertToType(data['OwnerEntity'], 'String');
            }
            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('ValueType')) {
                obj['ValueType'] = ApiClient.convertToType(data['ValueType'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Behaviors')) {
                obj['Behaviors'] = ApiClient.convertToType(data['Behaviors'], ['String']);
            }
            if (data.hasOwnProperty('MetafieldDefinitionRecommendationId')) {
                obj['MetafieldDefinitionRecommendationId'] = ApiClient.convertToType(data['MetafieldDefinitionRecommendationId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Indicates if a definition can be edited or not
 * @member {Boolean} IsReadOnly
 */
CreateMetafieldDefinition.prototype['IsReadOnly'] = undefined;

/**
 * The Metafield will extend the specified {Flipdish.Metafields.PublicModels.V1.MetafieldDefinitionBase.OwnerEntity}
 * @member {module:model/CreateMetafieldDefinition.OwnerEntityEnum} OwnerEntity
 */
CreateMetafieldDefinition.prototype['OwnerEntity'] = undefined;

/**
 * Key of the metafield.  The key must have two parts, separated by a dot. The first part acts as a category, for organizational purposes.  The parts can be composed of lowercase letters, numbers, hyphen and underscore
 * @member {String} Key
 */
CreateMetafieldDefinition.prototype['Key'] = undefined;

/**
 * The excepted type for the Value field
 * @member {module:model/CreateMetafieldDefinition.ValueTypeEnum} ValueType
 */
CreateMetafieldDefinition.prototype['ValueType'] = undefined;

/**
 * Field Name
 * @member {String} Name
 */
CreateMetafieldDefinition.prototype['Name'] = undefined;

/**
 * Field Description
 * @member {String} Description
 */
CreateMetafieldDefinition.prototype['Description'] = undefined;

/**
 * Enable Metafield Behaviors
 * @member {Array.<module:model/CreateMetafieldDefinition.BehaviorsEnum>} Behaviors
 */
CreateMetafieldDefinition.prototype['Behaviors'] = undefined;

/**
 * Metafield Recommendation Id
 * @member {Number} MetafieldDefinitionRecommendationId
 */
CreateMetafieldDefinition.prototype['MetafieldDefinitionRecommendationId'] = undefined;





/**
 * Allowed values for the <code>OwnerEntity</code> property.
 * @enum {String}
 * @readonly
 */
CreateMetafieldDefinition['OwnerEntityEnum'] = {

    /**
     * value: "CatalogItem"
     * @const
     */
    "CatalogItem": "CatalogItem",

    /**
     * value: "CatalogGroup"
     * @const
     */
    "CatalogGroup": "CatalogGroup",

    /**
     * value: "Menu"
     * @const
     */
    "Menu": "Menu"
};


/**
 * Allowed values for the <code>ValueType</code> property.
 * @enum {String}
 * @readonly
 */
CreateMetafieldDefinition['ValueTypeEnum'] = {

    /**
     * value: "Boolean"
     * @const
     */
    "Boolean": "Boolean",

    /**
     * value: "Json"
     * @const
     */
    "Json": "Json",

    /**
     * value: "SingleLineString"
     * @const
     */
    "SingleLineString": "SingleLineString",

    /**
     * value: "MultiLineString"
     * @const
     */
    "MultiLineString": "MultiLineString"
};


/**
 * Allowed values for the <code>Behaviors</code> property.
 * @enum {String}
 * @readonly
 */
CreateMetafieldDefinition['BehaviorsEnum'] = {

    /**
     * value: "SendToOrder"
     * @const
     */
    "SendToOrder": "SendToOrder",

    /**
     * value: "SendToMenu"
     * @const
     */
    "SendToMenu": "SendToMenu"
};



export default CreateMetafieldDefinition;

