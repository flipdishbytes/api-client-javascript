/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StoreOrderCapacityPeriod from './StoreOrderCapacityPeriod';

/**
 * The StoreOrderCapacityConfig model module.
 * @module model/StoreOrderCapacityConfig
 * @version 1.0.0
 */
class StoreOrderCapacityConfig {
    /**
     * Constructs a new <code>StoreOrderCapacityConfig</code>.
     * Represents one store&#39;s order capacity configuration
     * @alias module:model/StoreOrderCapacityConfig
     */
    constructor() { 
        
        StoreOrderCapacityConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoreOrderCapacityConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreOrderCapacityConfig} obj Optional instance to populate.
     * @return {module:model/StoreOrderCapacityConfig} The populated <code>StoreOrderCapacityConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreOrderCapacityConfig();

            if (data.hasOwnProperty('StoreId')) {
                obj['StoreId'] = ApiClient.convertToType(data['StoreId'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryType')) {
                obj['DeliveryType'] = ApiClient.convertToType(data['DeliveryType'], 'String');
            }
            if (data.hasOwnProperty('StoreIntervalInMinutes')) {
                obj['StoreIntervalInMinutes'] = ApiClient.convertToType(data['StoreIntervalInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('OrderCapacityPeriods')) {
                obj['OrderCapacityPeriods'] = ApiClient.convertToType(data['OrderCapacityPeriods'], [StoreOrderCapacityPeriod]);
            }
        }
        return obj;
    }


}

/**
 * Store identifier
 * @member {Number} StoreId
 */
StoreOrderCapacityConfig.prototype['StoreId'] = undefined;

/**
 * Signifies whether the order capacity configuration is for Delivery / Pickup
 * @member {module:model/StoreOrderCapacityConfig.DeliveryTypeEnum} DeliveryType
 */
StoreOrderCapacityConfig.prototype['DeliveryType'] = undefined;

/**
 * Store Interval - time between orders, e.g. 10 minutes between each order time available to customer
 * @member {Number} StoreIntervalInMinutes
 */
StoreOrderCapacityConfig.prototype['StoreIntervalInMinutes'] = undefined;

/**
 * Order capacity periods
 * @member {Array.<module:model/StoreOrderCapacityPeriod>} OrderCapacityPeriods
 */
StoreOrderCapacityConfig.prototype['OrderCapacityPeriods'] = undefined;





/**
 * Allowed values for the <code>DeliveryType</code> property.
 * @enum {String}
 * @readonly
 */
StoreOrderCapacityConfig['DeliveryTypeEnum'] = {

    /**
     * value: "Delivery"
     * @const
     */
    "Delivery": "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    "Pickup": "Pickup"
};



export default StoreOrderCapacityConfig;

