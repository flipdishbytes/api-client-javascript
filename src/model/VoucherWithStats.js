/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddItemDetails', 'model/CreditNoteDetails', 'model/LumpDiscountDetails', 'model/PercentDiscountDetails'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AddItemDetails'), require('./CreditNoteDetails'), require('./LumpDiscountDetails'), require('./PercentDiscountDetails'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.VoucherWithStats = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.AddItemDetails, root.FlipdishOpenApiV10.CreditNoteDetails, root.FlipdishOpenApiV10.LumpDiscountDetails, root.FlipdishOpenApiV10.PercentDiscountDetails);
  }
}(this, function(ApiClient, AddItemDetails, CreditNoteDetails, LumpDiscountDetails, PercentDiscountDetails) {
  'use strict';

  /**
   * The VoucherWithStats model module.
   * @module model/VoucherWithStats
   * @version v1.0
   */

  /**
   * Constructs a new <code>VoucherWithStats</code>.
   * Voucher With Statistics
   * @alias module:model/VoucherWithStats
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>VoucherWithStats</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/VoucherWithStats} obj Optional instance to populate.
   * @return {module:model/VoucherWithStats} The populated <code>VoucherWithStats</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('TotalUsed'))
        obj.totalUsed = ApiClient.convertToType(data['TotalUsed'], 'Number');
      if (data.hasOwnProperty('TotalCustomers'))
        obj.totalCustomers = ApiClient.convertToType(data['TotalCustomers'], 'Number');
      if (data.hasOwnProperty('TotalAmountFromOrders'))
        obj.totalAmountFromOrders = ApiClient.convertToType(data['TotalAmountFromOrders'], 'Number');
      if (data.hasOwnProperty('TotalDiscounted'))
        obj.totalDiscounted = ApiClient.convertToType(data['TotalDiscounted'], 'Number');
      if (data.hasOwnProperty('AverageOrderSize'))
        obj.averageOrderSize = ApiClient.convertToType(data['AverageOrderSize'], 'Number');
      if (data.hasOwnProperty('VoucherId'))
        obj.voucherId = ApiClient.convertToType(data['VoucherId'], 'Number');
      if (data.hasOwnProperty('Status'))
        obj.status = ApiClient.convertToType(data['Status'], 'String');
      if (data.hasOwnProperty('VoucherType'))
        obj.voucherType = ApiClient.convertToType(data['VoucherType'], 'String');
      if (data.hasOwnProperty('VoucherSubType'))
        obj.voucherSubType = ApiClient.convertToType(data['VoucherSubType'], 'String');
      if (data.hasOwnProperty('Currency'))
        obj.currency = ApiClient.convertToType(data['Currency'], 'String');
      if (data.hasOwnProperty('Stores'))
        obj.stores = ApiClient.convertToType(data['Stores'], ['Number']);
      if (data.hasOwnProperty('StoreNames'))
        obj.storeNames = ApiClient.convertToType(data['StoreNames'], ['String']);
      if (data.hasOwnProperty('AddItemDetails'))
        obj.addItemDetails = AddItemDetails.constructFromObject(data['AddItemDetails']);
      if (data.hasOwnProperty('CreditNoteDetails'))
        obj.creditNoteDetails = CreditNoteDetails.constructFromObject(data['CreditNoteDetails']);
      if (data.hasOwnProperty('LumpDiscountDetails'))
        obj.lumpDiscountDetails = LumpDiscountDetails.constructFromObject(data['LumpDiscountDetails']);
      if (data.hasOwnProperty('PercentDiscountDetails'))
        obj.percentDiscountDetails = PercentDiscountDetails.constructFromObject(data['PercentDiscountDetails']);
      if (data.hasOwnProperty('Code'))
        obj.code = ApiClient.convertToType(data['Code'], 'String');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('ValidOnOrdersOver'))
        obj.validOnOrdersOver = ApiClient.convertToType(data['ValidOnOrdersOver'], 'Number');
      if (data.hasOwnProperty('TakesPriority'))
        obj.takesPriority = ApiClient.convertToType(data['TakesPriority'], 'Boolean');
      if (data.hasOwnProperty('IsEnabled'))
        obj.isEnabled = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
      if (data.hasOwnProperty('IsAutomaticallyApplied'))
        obj.isAutomaticallyApplied = ApiClient.convertToType(data['IsAutomaticallyApplied'], 'Boolean');
      if (data.hasOwnProperty('IncludeDeliveryFee'))
        obj.includeDeliveryFee = ApiClient.convertToType(data['IncludeDeliveryFee'], 'Boolean');
      if (data.hasOwnProperty('IsValidForDeliveryOrders'))
        obj.isValidForDeliveryOrders = ApiClient.convertToType(data['IsValidForDeliveryOrders'], 'Boolean');
      if (data.hasOwnProperty('IsValidForPickupOrders'))
        obj.isValidForPickupOrders = ApiClient.convertToType(data['IsValidForPickupOrders'], 'Boolean');
      if (data.hasOwnProperty('IsValidForOrdersPayedOnline'))
        obj.isValidForOrdersPayedOnline = ApiClient.convertToType(data['IsValidForOrdersPayedOnline'], 'Boolean');
      if (data.hasOwnProperty('IsValidForOrdersPayedByCash'))
        obj.isValidForOrdersPayedByCash = ApiClient.convertToType(data['IsValidForOrdersPayedByCash'], 'Boolean');
      if (data.hasOwnProperty('IsValidForFirstOrderOnly'))
        obj.isValidForFirstOrderOnly = ApiClient.convertToType(data['IsValidForFirstOrderOnly'], 'Boolean');
      if (data.hasOwnProperty('IsValidOncePerCustomer'))
        obj.isValidOncePerCustomer = ApiClient.convertToType(data['IsValidOncePerCustomer'], 'Boolean');
      if (data.hasOwnProperty('IsValidOnlyOnce'))
        obj.isValidOnlyOnce = ApiClient.convertToType(data['IsValidOnlyOnce'], 'Boolean');
      if (data.hasOwnProperty('StartDate'))
        obj.startDate = ApiClient.convertToType(data['StartDate'], 'Date');
      if (data.hasOwnProperty('ExpiryDate'))
        obj.expiryDate = ApiClient.convertToType(data['ExpiryDate'], 'Date');
    }
    return obj;
  }

  /**
   * Total times the voucher was used
   * @member {Number} totalUsed
   */
  exports.prototype.totalUsed = undefined;

  /**
   * Total amount of customers who used this voucher
   * @member {Number} totalCustomers
   */
  exports.prototype.totalCustomers = undefined;

  /**
   * Total amount of money from orders
   * @member {Number} totalAmountFromOrders
   */
  exports.prototype.totalAmountFromOrders = undefined;

  /**
   * Total amount of money given away
   * @member {Number} totalDiscounted
   */
  exports.prototype.totalDiscounted = undefined;

  /**
   * Average Order Size
   * @member {Number} averageOrderSize
   */
  exports.prototype.averageOrderSize = undefined;

  /**
   * Voucher Id
   * @member {Number} voucherId
   */
  exports.prototype.voucherId = undefined;

  /**
   * Voucher Status
   * @member {module:model/VoucherWithStats.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * Voucher Type
   * @member {module:model/VoucherWithStats.VoucherTypeEnum} voucherType
   */
  exports.prototype.voucherType = undefined;

  /**
   * Voucher Sub Type
   * @member {module:model/VoucherWithStats.VoucherSubTypeEnum} voucherSubType
   */
  exports.prototype.voucherSubType = undefined;

  /**
   * Currency of the voucher
   * @member {module:model/VoucherWithStats.CurrencyEnum} currency
   */
  exports.prototype.currency = undefined;

  /**
   * Stores that this voucher applies to
   * @member {Array.<Number>} stores
   */
  exports.prototype.stores = undefined;

  /**
   * Stores that this voucher applies to
   * @member {Array.<String>} storeNames
   */
  exports.prototype.storeNames = undefined;

  /**
   * Add item details
   * @member {module:model/AddItemDetails} addItemDetails
   */
  exports.prototype.addItemDetails = undefined;

  /**
   * Credit note details
   * @member {module:model/CreditNoteDetails} creditNoteDetails
   */
  exports.prototype.creditNoteDetails = undefined;

  /**
   * Lump discount details
   * @member {module:model/LumpDiscountDetails} lumpDiscountDetails
   */
  exports.prototype.lumpDiscountDetails = undefined;

  /**
   * Percent discount details
   * @member {module:model/PercentDiscountDetails} percentDiscountDetails
   */
  exports.prototype.percentDiscountDetails = undefined;

  /**
   * Voucher Code
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * Voucher Description (Visible on printout)
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Valid on orders on or above
   * @member {Number} validOnOrdersOver
   */
  exports.prototype.validOnOrdersOver = undefined;

  /**
   * Takes priority
   * @member {Boolean} takesPriority
   */
  exports.prototype.takesPriority = undefined;

  /**
   * Is voucher enabled
   * @member {Boolean} isEnabled
   */
  exports.prototype.isEnabled = undefined;

  /**
   * Is voucher automatically applied
   * @member {Boolean} isAutomaticallyApplied
   */
  exports.prototype.isAutomaticallyApplied = undefined;

  /**
   * Include delivery fees
   * @member {Boolean} includeDeliveryFee
   */
  exports.prototype.includeDeliveryFee = undefined;

  /**
   * Valid for delivery orders
   * @member {Boolean} isValidForDeliveryOrders
   */
  exports.prototype.isValidForDeliveryOrders = undefined;

  /**
   * Valid for pickup orders
   * @member {Boolean} isValidForPickupOrders
   */
  exports.prototype.isValidForPickupOrders = undefined;

  /**
   * Valid for orders payed online
   * @member {Boolean} isValidForOrdersPayedOnline
   */
  exports.prototype.isValidForOrdersPayedOnline = undefined;

  /**
   * Valid for orders payed in cash
   * @member {Boolean} isValidForOrdersPayedByCash
   */
  exports.prototype.isValidForOrdersPayedByCash = undefined;

  /**
   * Valid only on the first order by the customer
   * @member {Boolean} isValidForFirstOrderOnly
   */
  exports.prototype.isValidForFirstOrderOnly = undefined;

  /**
   * Valid once per customer
   * @member {Boolean} isValidOncePerCustomer
   */
  exports.prototype.isValidOncePerCustomer = undefined;

  /**
   * Valid only once, by any customer (once used cannot be used again by any other customer)
   * @member {Boolean} isValidOnlyOnce
   */
  exports.prototype.isValidOnlyOnce = undefined;

  /**
   * Voucher Starts On (Time in UTC)
   * @member {Date} startDate
   */
  exports.prototype.startDate = undefined;

  /**
   * Voucher Expires On (Time in UTC)
   * @member {Date} expiryDate
   */
  exports.prototype.expiryDate = undefined;



  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Valid"
     * @const
     */
    valid: "Valid",

    /**
     * value: "NotYetValid"
     * @const
     */
    notYetValid: "NotYetValid",

    /**
     * value: "Expired"
     * @const
     */
    expired: "Expired",

    /**
     * value: "Used"
     * @const
     */
    used: "Used",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled"
  };


  /**
   * Allowed values for the <code>voucherType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.VoucherTypeEnum = {
    /**
     * value: "PercentageDiscount"
     * @const
     */
    percentageDiscount: "PercentageDiscount",

    /**
     * value: "LumpDiscount"
     * @const
     */
    lumpDiscount: "LumpDiscount",

    /**
     * value: "AddItem"
     * @const
     */
    addItem: "AddItem",

    /**
     * value: "CreditNote"
     * @const
     */
    creditNote: "CreditNote"
  };


  /**
   * Allowed values for the <code>voucherSubType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.VoucherSubTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "SignUp"
     * @const
     */
    signUp: "SignUp",

    /**
     * value: "Loyalty"
     * @const
     */
    loyalty: "Loyalty",

    /**
     * value: "Loyalty25"
     * @const
     */
    loyalty25: "Loyalty25",

    /**
     * value: "Retention"
     * @const
     */
    retention: "Retention",

    /**
     * value: "SecondaryRetention"
     * @const
     */
    secondaryRetention: "SecondaryRetention",

    /**
     * value: "Custom"
     * @const
     */
    custom: "Custom"
  };


  /**
   * Allowed values for the <code>currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "EUR"
     * @const
     */
    EUR: "EUR",

    /**
     * value: "USD"
     * @const
     */
    USD: "USD",

    /**
     * value: "GBP"
     * @const
     */
    GBP: "GBP",

    /**
     * value: "CAD"
     * @const
     */
    CAD: "CAD",

    /**
     * value: "AUD"
     * @const
     */
    AUD: "AUD",

    /**
     * value: "DJF"
     * @const
     */
    DJF: "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    ZAR: "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    ETB: "ETB",

    /**
     * value: "AED"
     * @const
     */
    AED: "AED",

    /**
     * value: "BHD"
     * @const
     */
    BHD: "BHD",

    /**
     * value: "DZD"
     * @const
     */
    DZD: "DZD",

    /**
     * value: "EGP"
     * @const
     */
    EGP: "EGP",

    /**
     * value: "IQD"
     * @const
     */
    IQD: "IQD",

    /**
     * value: "JOD"
     * @const
     */
    JOD: "JOD",

    /**
     * value: "KWD"
     * @const
     */
    KWD: "KWD",

    /**
     * value: "LBP"
     * @const
     */
    LBP: "LBP",

    /**
     * value: "LYD"
     * @const
     */
    LYD: "LYD",

    /**
     * value: "MAD"
     * @const
     */
    MAD: "MAD",

    /**
     * value: "OMR"
     * @const
     */
    OMR: "OMR",

    /**
     * value: "QAR"
     * @const
     */
    QAR: "QAR",

    /**
     * value: "SAR"
     * @const
     */
    SAR: "SAR",

    /**
     * value: "SYP"
     * @const
     */
    SYP: "SYP",

    /**
     * value: "TND"
     * @const
     */
    TND: "TND",

    /**
     * value: "YER"
     * @const
     */
    YER: "YER",

    /**
     * value: "CLP"
     * @const
     */
    CLP: "CLP",

    /**
     * value: "INR"
     * @const
     */
    INR: "INR",

    /**
     * value: "AZN"
     * @const
     */
    AZN: "AZN",

    /**
     * value: "RUB"
     * @const
     */
    RUB: "RUB",

    /**
     * value: "BYN"
     * @const
     */
    BYN: "BYN",

    /**
     * value: "BGN"
     * @const
     */
    BGN: "BGN",

    /**
     * value: "NGN"
     * @const
     */
    NGN: "NGN",

    /**
     * value: "BDT"
     * @const
     */
    BDT: "BDT",

    /**
     * value: "CNY"
     * @const
     */
    CNY: "CNY",

    /**
     * value: "BAM"
     * @const
     */
    BAM: "BAM",

    /**
     * value: "CZK"
     * @const
     */
    CZK: "CZK",

    /**
     * value: "DKK"
     * @const
     */
    DKK: "DKK",

    /**
     * value: "CHF"
     * @const
     */
    CHF: "CHF",

    /**
     * value: "MVR"
     * @const
     */
    MVR: "MVR",

    /**
     * value: "BTN"
     * @const
     */
    BTN: "BTN",

    /**
     * value: "XCD"
     * @const
     */
    XCD: "XCD",

    /**
     * value: "BZD"
     * @const
     */
    BZD: "BZD",

    /**
     * value: "HKD"
     * @const
     */
    HKD: "HKD",

    /**
     * value: "IDR"
     * @const
     */
    IDR: "IDR",

    /**
     * value: "JMD"
     * @const
     */
    JMD: "JMD",

    /**
     * value: "MYR"
     * @const
     */
    MYR: "MYR",

    /**
     * value: "NZD"
     * @const
     */
    NZD: "NZD",

    /**
     * value: "PHP"
     * @const
     */
    PHP: "PHP",

    /**
     * value: "SGD"
     * @const
     */
    SGD: "SGD",

    /**
     * value: "TTD"
     * @const
     */
    TTD: "TTD",

    /**
     * value: "XDR"
     * @const
     */
    XDR: "XDR",

    /**
     * value: "ARS"
     * @const
     */
    ARS: "ARS",

    /**
     * value: "BOB"
     * @const
     */
    BOB: "BOB",

    /**
     * value: "COP"
     * @const
     */
    COP: "COP",

    /**
     * value: "CRC"
     * @const
     */
    CRC: "CRC",

    /**
     * value: "CUP"
     * @const
     */
    CUP: "CUP",

    /**
     * value: "DOP"
     * @const
     */
    DOP: "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    GTQ: "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    HNL: "HNL",

    /**
     * value: "MXN"
     * @const
     */
    MXN: "MXN",

    /**
     * value: "NIO"
     * @const
     */
    NIO: "NIO",

    /**
     * value: "PAB"
     * @const
     */
    PAB: "PAB",

    /**
     * value: "PEN"
     * @const
     */
    PEN: "PEN",

    /**
     * value: "PYG"
     * @const
     */
    PYG: "PYG",

    /**
     * value: "UYU"
     * @const
     */
    UYU: "UYU",

    /**
     * value: "VEF"
     * @const
     */
    VEF: "VEF",

    /**
     * value: "IRR"
     * @const
     */
    IRR: "IRR",

    /**
     * value: "XOF"
     * @const
     */
    XOF: "XOF",

    /**
     * value: "CDF"
     * @const
     */
    CDF: "CDF",

    /**
     * value: "XAF"
     * @const
     */
    XAF: "XAF",

    /**
     * value: "HTG"
     * @const
     */
    HTG: "HTG",

    /**
     * value: "ILS"
     * @const
     */
    ILS: "ILS",

    /**
     * value: "HRK"
     * @const
     */
    HRK: "HRK",

    /**
     * value: "HUF"
     * @const
     */
    HUF: "HUF",

    /**
     * value: "AMD"
     * @const
     */
    AMD: "AMD",

    /**
     * value: "ISK"
     * @const
     */
    ISK: "ISK",

    /**
     * value: "JPY"
     * @const
     */
    JPY: "JPY",

    /**
     * value: "GEL"
     * @const
     */
    GEL: "GEL",

    /**
     * value: "KZT"
     * @const
     */
    KZT: "KZT",

    /**
     * value: "KHR"
     * @const
     */
    KHR: "KHR",

    /**
     * value: "KRW"
     * @const
     */
    KRW: "KRW",

    /**
     * value: "KGS"
     * @const
     */
    KGS: "KGS",

    /**
     * value: "LAK"
     * @const
     */
    LAK: "LAK",

    /**
     * value: "MKD"
     * @const
     */
    MKD: "MKD",

    /**
     * value: "MNT"
     * @const
     */
    MNT: "MNT",

    /**
     * value: "BND"
     * @const
     */
    BND: "BND",

    /**
     * value: "MMK"
     * @const
     */
    MMK: "MMK",

    /**
     * value: "NOK"
     * @const
     */
    NOK: "NOK",

    /**
     * value: "NPR"
     * @const
     */
    NPR: "NPR",

    /**
     * value: "PKR"
     * @const
     */
    PKR: "PKR",

    /**
     * value: "PLN"
     * @const
     */
    PLN: "PLN",

    /**
     * value: "AFN"
     * @const
     */
    AFN: "AFN",

    /**
     * value: "BRL"
     * @const
     */
    BRL: "BRL",

    /**
     * value: "MDL"
     * @const
     */
    MDL: "MDL",

    /**
     * value: "RON"
     * @const
     */
    RON: "RON",

    /**
     * value: "RWF"
     * @const
     */
    RWF: "RWF",

    /**
     * value: "SEK"
     * @const
     */
    SEK: "SEK",

    /**
     * value: "LKR"
     * @const
     */
    LKR: "LKR",

    /**
     * value: "SOS"
     * @const
     */
    SOS: "SOS",

    /**
     * value: "ALL"
     * @const
     */
    ALL: "ALL",

    /**
     * value: "RSD"
     * @const
     */
    RSD: "RSD",

    /**
     * value: "KES"
     * @const
     */
    KES: "KES",

    /**
     * value: "TJS"
     * @const
     */
    TJS: "TJS",

    /**
     * value: "THB"
     * @const
     */
    THB: "THB",

    /**
     * value: "ERN"
     * @const
     */
    ERN: "ERN",

    /**
     * value: "TMT"
     * @const
     */
    TMT: "TMT",

    /**
     * value: "BWP"
     * @const
     */
    BWP: "BWP",

    /**
     * value: "TRY"
     * @const
     */
    TRY: "TRY",

    /**
     * value: "UAH"
     * @const
     */
    UAH: "UAH",

    /**
     * value: "UZS"
     * @const
     */
    UZS: "UZS",

    /**
     * value: "VND"
     * @const
     */
    VND: "VND",

    /**
     * value: "MOP"
     * @const
     */
    MOP: "MOP",

    /**
     * value: "TWD"
     * @const
     */
    TWD: "TWD",

    /**
     * value: "BMD"
     * @const
     */
    BMD: "BMD"
  };

  return exports;

}));
