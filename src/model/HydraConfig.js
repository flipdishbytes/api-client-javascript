/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeviceSettings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DeviceSettings'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.HydraConfig = factory(root.Flipdish.ApiClient, root.Flipdish.DeviceSettings);
  }
}(this, function(ApiClient, DeviceSettings) {
  'use strict';

  /**
   * The HydraConfig model module.
   * @module model/HydraConfig
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>HydraConfig</code>.
   * Hydra configuration
   * @alias module:model/HydraConfig
   * @class
   * @param MinimumVersion {String} Minimum version
   * @param PaymentOptions {Array.<module:model/HydraConfig.PaymentOptionsEnum>} Payment options
   * @param DeviceSettings {module:model/DeviceSettings} Device settings
   */
  var exports = function(MinimumVersion, PaymentOptions, DeviceSettings) {
    this.MinimumVersion = MinimumVersion;
    this.PaymentOptions = PaymentOptions;
    this.DeviceSettings = DeviceSettings;
  };

  /**
   * Constructs a <code>HydraConfig</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HydraConfig} obj Optional instance to populate.
   * @return {module:model/HydraConfig} The populated <code>HydraConfig</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('MinimumVersion'))
        obj.MinimumVersion = ApiClient.convertToType(data['MinimumVersion'], 'String');
      if (data.hasOwnProperty('PaymentOptions'))
        obj.PaymentOptions = ApiClient.convertToType(data['PaymentOptions'], ['String']);
      if (data.hasOwnProperty('DeviceSettings'))
        obj.DeviceSettings = DeviceSettings.constructFromObject(data['DeviceSettings']);
      if (data.hasOwnProperty('Version'))
        obj.Version = ApiClient.convertToType(data['Version'], 'String');
      if (data.hasOwnProperty('BuildNumber'))
        obj.BuildNumber = ApiClient.convertToType(data['BuildNumber'], 'String');
      if (data.hasOwnProperty('GitSha'))
        obj.GitSha = ApiClient.convertToType(data['GitSha'], 'String');
      if (data.hasOwnProperty('GitBranch'))
        obj.GitBranch = ApiClient.convertToType(data['GitBranch'], 'String');
    }
    return obj;
  }

  /**
   * Minimum version
   * @member {String} MinimumVersion
   */
  exports.prototype.MinimumVersion = undefined;

  /**
   * Payment options
   * @member {Array.<module:model/HydraConfig.PaymentOptionsEnum>} PaymentOptions
   */
  exports.prototype.PaymentOptions = undefined;

  /**
   * Device settings
   * @member {module:model/DeviceSettings} DeviceSettings
   */
  exports.prototype.DeviceSettings = undefined;

  /**
   * Version of the device
   * @member {String} Version
   */
  exports.prototype.Version = undefined;

  /**
   * Build number of the device
   * @member {String} BuildNumber
   */
  exports.prototype.BuildNumber = undefined;

  /**
   * SHA of the commit
   * @member {String} GitSha
   */
  exports.prototype.GitSha = undefined;

  /**
   * Build branch
   * @member {String} GitBranch
   */
  exports.prototype.GitBranch = undefined;



  /**
   * Allowed values for the <code>PaymentOptions</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PaymentOptionsEnum = {
    /**
     * value: "Online"
     * @const
     */
    Online: "Online",

    /**
     * value: "Emv"
     * @const
     */
    Emv: "Emv",

    /**
     * value: "Counter"
     * @const
     */
    Counter: "Counter"
  };

  return exports;

}));
