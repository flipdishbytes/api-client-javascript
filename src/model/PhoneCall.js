/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.PhoneCall = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The PhoneCall model module.
   * @module model/PhoneCall
   * @version v1.0
   */

  /**
   * Constructs a new <code>PhoneCall</code>.
   * Phone call
   * @alias module:model/PhoneCall
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PhoneCall</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PhoneCall} obj Optional instance to populate.
   * @return {module:model/PhoneCall} The populated <code>PhoneCall</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('PhoneCallId'))
        obj.phoneCallId = ApiClient.convertToType(data['PhoneCallId'], 'Number');
      if (data.hasOwnProperty('TimeOfCall'))
        obj.timeOfCall = ApiClient.convertToType(data['TimeOfCall'], 'Date');
      if (data.hasOwnProperty('TimeOfCallLocal'))
        obj.timeOfCallLocal = ApiClient.convertToType(data['TimeOfCallLocal'], 'Date');
      if (data.hasOwnProperty('StoreId'))
        obj.storeId = ApiClient.convertToType(data['StoreId'], 'Number');
      if (data.hasOwnProperty('StoreName'))
        obj.storeName = ApiClient.convertToType(data['StoreName'], 'String');
      if (data.hasOwnProperty('CallerName'))
        obj.callerName = ApiClient.convertToType(data['CallerName'], 'String');
      if (data.hasOwnProperty('CallerUserId'))
        obj.callerUserId = ApiClient.convertToType(data['CallerUserId'], 'Number');
      if (data.hasOwnProperty('CallerNumber'))
        obj.callerNumber = ApiClient.convertToType(data['CallerNumber'], 'String');
      if (data.hasOwnProperty('CallLengthInSeconds'))
        obj.callLengthInSeconds = ApiClient.convertToType(data['CallLengthInSeconds'], 'Number');
      if (data.hasOwnProperty('CallStatus'))
        obj.callStatus = ApiClient.convertToType(data['CallStatus'], 'String');
    }
    return obj;
  }

  /**
   * Phone call id
   * @member {Number} phoneCallId
   */
  exports.prototype.phoneCallId = undefined;

  /**
   * Time of the call
   * @member {Date} timeOfCall
   */
  exports.prototype.timeOfCall = undefined;

  /**
   * Time of the call, local to the store to which the call was made
   * @member {Date} timeOfCallLocal
   */
  exports.prototype.timeOfCallLocal = undefined;

  /**
   * ID of the store that the call was TO
   * @member {Number} storeId
   */
  exports.prototype.storeId = undefined;

  /**
   * Name of the store that the call was TO
   * @member {String} storeName
   */
  exports.prototype.storeName = undefined;

  /**
   * Name of the caller
   * @member {String} callerName
   */
  exports.prototype.callerName = undefined;

  /**
   * UserID of the caller
   * @member {Number} callerUserId
   */
  exports.prototype.callerUserId = undefined;

  /**
   * Phone number of the caller
   * @member {String} callerNumber
   */
  exports.prototype.callerNumber = undefined;

  /**
   * The amount of time the call took
   * @member {Number} callLengthInSeconds
   */
  exports.prototype.callLengthInSeconds = undefined;

  /**
   * The status of the call
   * @member {module:model/PhoneCall.CallStatusEnum} callStatus
   */
  exports.prototype.callStatus = undefined;



  /**
   * Allowed values for the <code>callStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CallStatusEnum = {
    /**
     * value: "Queued"
     * @const
     */
    queued: "Queued",

    /**
     * value: "Ringing"
     * @const
     */
    ringing: "Ringing",

    /**
     * value: "InProgress"
     * @const
     */
    inProgress: "InProgress",

    /**
     * value: "Completed"
     * @const
     */
    completed: "Completed",

    /**
     * value: "Failed"
     * @const
     */
    failed: "Failed",

    /**
     * value: "Busy"
     * @const
     */
    busy: "Busy",

    /**
     * value: "NoAnswer"
     * @const
     */
    noAnswer: "NoAnswer",

    /**
     * value: "Unknown"
     * @const
     */
    unknown: "Unknown",

    /**
     * value: "Canceled"
     * @const
     */
    canceled: "Canceled"
  };

  return exports;

}));
