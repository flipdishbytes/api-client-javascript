/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HydraStatus model module.
 * @module model/HydraStatus
 * @version 1.0.0
 */
class HydraStatus {
    /**
     * Constructs a new <code>HydraStatus</code>.
     * Hydra status
     * @alias module:model/HydraStatus
     * @param AppId {String} 
     * @param IsRegistered {Boolean} The device has been already registered
     */
    constructor(AppId, IsRegistered) { 
        
        HydraStatus.initialize(this, AppId, IsRegistered);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, AppId, IsRegistered) { 
        obj['AppId'] = AppId;
        obj['IsRegistered'] = IsRegistered;
    }

    /**
     * Constructs a <code>HydraStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HydraStatus} obj Optional instance to populate.
     * @return {module:model/HydraStatus} The populated <code>HydraStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HydraStatus();

            if (data.hasOwnProperty('AppId')) {
                obj['AppId'] = ApiClient.convertToType(data['AppId'], 'String');
            }
            if (data.hasOwnProperty('StoreIds')) {
                obj['StoreIds'] = ApiClient.convertToType(data['StoreIds'], ['Number']);
            }
            if (data.hasOwnProperty('IsRegistered')) {
                obj['IsRegistered'] = ApiClient.convertToType(data['IsRegistered'], 'Boolean');
            }
            if (data.hasOwnProperty('PinCode')) {
                obj['PinCode'] = ApiClient.convertToType(data['PinCode'], 'Number');
            }
            if (data.hasOwnProperty('Images')) {
                obj['Images'] = ApiClient.convertToType(data['Images'], ['String']);
            }
            if (data.hasOwnProperty('UserType')) {
                obj['UserType'] = ApiClient.convertToType(data['UserType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * 
 * @member {String} AppId
 */
HydraStatus.prototype['AppId'] = undefined;

/**
 * Store to assign the hydra
 * @member {Array.<Number>} StoreIds
 */
HydraStatus.prototype['StoreIds'] = undefined;

/**
 * The device has been already registered
 * @member {Boolean} IsRegistered
 */
HydraStatus.prototype['IsRegistered'] = undefined;

/**
 * 6 digit PIN code (not starting with zero).
 * @member {Number} PinCode
 */
HydraStatus.prototype['PinCode'] = undefined;

/**
 * Hydra images (covers)
 * @member {Array.<String>} Images
 */
HydraStatus.prototype['Images'] = undefined;

/**
 * Hydra User Type
 * @member {module:model/HydraStatus.UserTypeEnum} UserType
 */
HydraStatus.prototype['UserType'] = undefined;





/**
 * Allowed values for the <code>UserType</code> property.
 * @enum {String}
 * @readonly
 */
HydraStatus['UserTypeEnum'] = {

    /**
     * value: "Kiosk"
     * @const
     */
    "Kiosk": "Kiosk",

    /**
     * value: "Terminal"
     * @const
     */
    "Terminal": "Terminal",

    /**
     * value: "LegacyPrinter"
     * @const
     */
    "LegacyPrinter": "LegacyPrinter"
};



export default HydraStatus;

