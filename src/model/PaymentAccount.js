/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentAccount model module.
 * @module model/PaymentAccount
 * @version 1.0.0
 */
class PaymentAccount {
    /**
     * Constructs a new <code>PaymentAccount</code>.
     * Payment Account information
     * @alias module:model/PaymentAccount
     */
    constructor() { 
        
        PaymentAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentAccount} obj Optional instance to populate.
     * @return {module:model/PaymentAccount} The populated <code>PaymentAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentAccount();

            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'Number');
            }
            if (data.hasOwnProperty('PaymentAccountId')) {
                obj['PaymentAccountId'] = ApiClient.convertToType(data['PaymentAccountId'], 'Number');
            }
            if (data.hasOwnProperty('CanRemoveFromCustomerView')) {
                obj['CanRemoveFromCustomerView'] = ApiClient.convertToType(data['CanRemoveFromCustomerView'], 'Boolean');
            }
            if (data.hasOwnProperty('Bin')) {
                obj['Bin'] = ApiClient.convertToType(data['Bin'], 'String');
            }
            if (data.hasOwnProperty('IsDefaultPaymentMethod')) {
                obj['IsDefaultPaymentMethod'] = ApiClient.convertToType(data['IsDefaultPaymentMethod'], 'Boolean');
            }
            if (data.hasOwnProperty('IsVisibleToCustomer')) {
                obj['IsVisibleToCustomer'] = ApiClient.convertToType(data['IsVisibleToCustomer'], 'Boolean');
            }
            if (data.hasOwnProperty('PaymentAccountType')) {
                obj['PaymentAccountType'] = ApiClient.convertToType(data['PaymentAccountType'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('CustomerId')) {
                obj['CustomerId'] = ApiClient.convertToType(data['CustomerId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The user ID associated with the payment account.
 * @member {Number} UserId
 */
PaymentAccount.prototype['UserId'] = undefined;

/**
 * Unique identifier for the payment account.
 * @member {Number} PaymentAccountId
 */
PaymentAccount.prototype['PaymentAccountId'] = undefined;

/**
 * Indicates if the payment account can be removed from the customer view.
 * @member {Boolean} CanRemoveFromCustomerView
 */
PaymentAccount.prototype['CanRemoveFromCustomerView'] = undefined;

/**
 * Bank Identification Number (BIN) of the payment method.
 * @member {String} Bin
 */
PaymentAccount.prototype['Bin'] = undefined;

/**
 * Indicates if this is the default payment method.
 * @member {Boolean} IsDefaultPaymentMethod
 */
PaymentAccount.prototype['IsDefaultPaymentMethod'] = undefined;

/**
 * Indicates if the payment account is visible to the customer.
 * @member {Boolean} IsVisibleToCustomer
 */
PaymentAccount.prototype['IsVisibleToCustomer'] = undefined;

/**
 * The type of payment account (e.g., card, PayPal).
 * @member {String} PaymentAccountType
 */
PaymentAccount.prototype['PaymentAccountType'] = undefined;

/**
 * Description of the payment account.
 * @member {String} Description
 */
PaymentAccount.prototype['Description'] = undefined;

/**
 * The customer ID associated with the payment account.
 * @member {String} CustomerId
 */
PaymentAccount.prototype['CustomerId'] = undefined;






export default PaymentAccount;

