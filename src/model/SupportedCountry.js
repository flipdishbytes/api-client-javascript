/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.SupportedCountry = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SupportedCountry model module.
   * @module model/SupportedCountry
   * @version v1.0
   */

  /**
   * Constructs a new <code>SupportedCountry</code>.
   * Describes a supported country
   * @alias module:model/SupportedCountry
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SupportedCountry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SupportedCountry} obj Optional instance to populate.
   * @return {module:model/SupportedCountry} The populated <code>SupportedCountry</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('CountryCode'))
        obj.countryCode = ApiClient.convertToType(data['CountryCode'], 'String');
      if (data.hasOwnProperty('Name'))
        obj.name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('PhoneCode'))
        obj.phoneCode = ApiClient.convertToType(data['PhoneCode'], 'Number');
      if (data.hasOwnProperty('LanguageCode'))
        obj.languageCode = ApiClient.convertToType(data['LanguageCode'], 'String');
      if (data.hasOwnProperty('LanguageName'))
        obj.languageName = ApiClient.convertToType(data['LanguageName'], 'String');
      if (data.hasOwnProperty('OtpNumber'))
        obj.otpNumber = ApiClient.convertToType(data['OtpNumber'], 'String');
      if (data.hasOwnProperty('SupportNumber'))
        obj.supportNumber = ApiClient.convertToType(data['SupportNumber'], 'String');
      if (data.hasOwnProperty('AddressLayout'))
        obj.addressLayout = ApiClient.convertToType(data['AddressLayout'], 'String');
      if (data.hasOwnProperty('PostCodeType'))
        obj.postCodeType = ApiClient.convertToType(data['PostCodeType'], 'String');
      if (data.hasOwnProperty('SupportRegion'))
        obj.supportRegion = ApiClient.convertToType(data['SupportRegion'], 'String');
    }
    return obj;
  }

  /**
   * Country code
   * @member {String} countryCode
   */
  exports.prototype.countryCode = undefined;

  /**
   * Nice display name for a country
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Country internatinoal phone code prefix
   * @member {Number} phoneCode
   */
  exports.prototype.phoneCode = undefined;

  /**
   * Language code
   * @member {String} languageCode
   */
  exports.prototype.languageCode = undefined;

  /**
   * Language name
   * @member {String} languageName
   */
  exports.prototype.languageName = undefined;

  /**
   * The phone number provided to Store staff which, in conjunction with a one-time-code, will connect them to the customer.
   * @member {String} otpNumber
   */
  exports.prototype.otpNumber = undefined;

  /**
   * The store's support phone number, displayed to customers.
   * @member {String} supportNumber
   */
  exports.prototype.supportNumber = undefined;

  /**
   * Address layout format. This changes the layout of address entry forms on the web app, iOS and Android app and should be set based on local custom.
   * @member {module:model/SupportedCountry.AddressLayoutEnum} addressLayout
   */
  exports.prototype.addressLayout = undefined;

  /**
   * Post code type
   * @member {module:model/SupportedCountry.PostCodeTypeEnum} postCodeType
   */
  exports.prototype.postCodeType = undefined;

  /**
   * Supported region. This is not used.
   * @member {module:model/SupportedCountry.SupportRegionEnum} supportRegion
   */
  exports.prototype.supportRegion = undefined;



  /**
   * Allowed values for the <code>addressLayout</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AddressLayoutEnum = {
    /**
     * value: "BuildingFirst"
     * @const
     */
    buildingFirst: "BuildingFirst",

    /**
     * value: "AddressFirst"
     * @const
     */
    addressFirst: "AddressFirst",

    /**
     * value: "FullStreetAddressFirst"
     * @const
     */
    fullStreetAddressFirst: "FullStreetAddressFirst"
  };


  /**
   * Allowed values for the <code>postCodeType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PostCodeTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "PostCode"
     * @const
     */
    postCode: "PostCode",

    /**
     * value: "Zip"
     * @const
     */
    zip: "Zip"
  };


  /**
   * Allowed values for the <code>supportRegion</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SupportRegionEnum = {
    /**
     * value: "Default"
     * @const
     */
    _default: "Default",

    /**
     * value: "Spain"
     * @const
     */
    spain: "Spain",

    /**
     * value: "Benelux"
     * @const
     */
    benelux: "Benelux"
  };

  return exports;

}));
