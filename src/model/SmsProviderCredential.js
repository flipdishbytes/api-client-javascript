/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SmsProviderCredential model module.
 * @module model/SmsProviderCredential
 * @version 1.0.0
 */
class SmsProviderCredential {
    /**
     * Constructs a new <code>SmsProviderCredential</code>.
     * @alias module:model/SmsProviderCredential
     */
    constructor() { 
        
        SmsProviderCredential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SmsProviderCredential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SmsProviderCredential} obj Optional instance to populate.
     * @return {module:model/SmsProviderCredential} The populated <code>SmsProviderCredential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SmsProviderCredential();

            if (data.hasOwnProperty('OrgId')) {
                obj['OrgId'] = ApiClient.convertToType(data['OrgId'], 'String');
            }
            if (data.hasOwnProperty('BrandId')) {
                obj['BrandId'] = ApiClient.convertToType(data['BrandId'], 'String');
            }
            if (data.hasOwnProperty('SmsServiceType')) {
                obj['SmsServiceType'] = ApiClient.convertToType(data['SmsServiceType'], 'String');
            }
            if (data.hasOwnProperty('SenderId')) {
                obj['SenderId'] = ApiClient.convertToType(data['SenderId'], 'String');
            }
            if (data.hasOwnProperty('Username')) {
                obj['Username'] = ApiClient.convertToType(data['Username'], 'String');
            }
            if (data.hasOwnProperty('AuthToken')) {
                obj['AuthToken'] = ApiClient.convertToType(data['AuthToken'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} OrgId
 */
SmsProviderCredential.prototype['OrgId'] = undefined;

/**
 * @member {String} BrandId
 */
SmsProviderCredential.prototype['BrandId'] = undefined;

/**
 * @member {module:model/SmsProviderCredential.SmsServiceTypeEnum} SmsServiceType
 */
SmsProviderCredential.prototype['SmsServiceType'] = undefined;

/**
 * @member {String} SenderId
 */
SmsProviderCredential.prototype['SenderId'] = undefined;

/**
 * @member {String} Username
 */
SmsProviderCredential.prototype['Username'] = undefined;

/**
 * @member {String} AuthToken
 */
SmsProviderCredential.prototype['AuthToken'] = undefined;





/**
 * Allowed values for the <code>SmsServiceType</code> property.
 * @enum {String}
 * @readonly
 */
SmsProviderCredential['SmsServiceTypeEnum'] = {

    /**
     * value: "Nexmo"
     * @const
     */
    "Nexmo": "Nexmo",

    /**
     * value: "Twilio"
     * @const
     */
    "Twilio": "Twilio",

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "MessageBird"
     * @const
     */
    "MessageBird": "MessageBird"
};



export default SmsProviderCredential;

