/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StoreCreateBase model module.
 * @module model/StoreCreateBase
 * @version 1.0.0
 */
class StoreCreateBase {
    /**
     * Constructs a new <code>StoreCreateBase</code>.
     * Store Create Base
     * @alias module:model/StoreCreateBase
     */
    constructor() { 
        
        StoreCreateBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoreCreateBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreCreateBase} obj Optional instance to populate.
     * @return {module:model/StoreCreateBase} The populated <code>StoreCreateBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreCreateBase();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('EmailAddress')) {
                obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
            }
            if (data.hasOwnProperty('StaffLanguage')) {
                obj['StaffLanguage'] = ApiClient.convertToType(data['StaffLanguage'], 'String');
            }
            if (data.hasOwnProperty('SalesChannelType')) {
                obj['SalesChannelType'] = ApiClient.convertToType(data['SalesChannelType'], 'String');
            }
            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name
 * @member {String} Name
 */
StoreCreateBase.prototype['Name'] = undefined;

/**
 * Email address (visible to customers)
 * @member {String} EmailAddress
 */
StoreCreateBase.prototype['EmailAddress'] = undefined;

/**
 * Staff Language (used for communication with the staff)  Emails, Printouts etc
 * @member {String} StaffLanguage
 */
StoreCreateBase.prototype['StaffLanguage'] = undefined;

/**
 * Sales Channel Type
 * @member {module:model/StoreCreateBase.SalesChannelTypeEnum} SalesChannelType
 */
StoreCreateBase.prototype['SalesChannelType'] = undefined;

/**
 * Phone Number
 * @member {String} PhoneNumber
 */
StoreCreateBase.prototype['PhoneNumber'] = undefined;





/**
 * Allowed values for the <code>SalesChannelType</code> property.
 * @enum {String}
 * @readonly
 */
StoreCreateBase['SalesChannelTypeEnum'] = {

    /**
     * value: "Web"
     * @const
     */
    "Web": "Web",

    /**
     * value: "App"
     * @const
     */
    "App": "App",

    /**
     * value: "Kiosk"
     * @const
     */
    "Kiosk": "Kiosk",

    /**
     * value: "Pos"
     * @const
     */
    "Pos": "Pos",

    /**
     * value: "None"
     * @const
     */
    "None": "None"
};



export default StoreCreateBase;

