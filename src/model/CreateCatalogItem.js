/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateCatalogGroupReference from './CreateCatalogGroupReference';
import Metafield from './Metafield';

/**
 * The CreateCatalogItem model module.
 * @module model/CreateCatalogItem
 * @version 1.0.0
 */
class CreateCatalogItem {
    /**
     * Constructs a new <code>CreateCatalogItem</code>.
     * Create a Catalog Item
     * @alias module:model/CreateCatalogItem
     * @param ItemType {module:model/CreateCatalogItem.ItemTypeEnum} Type of item (Product, Modifier, etc)
     * @param Sku {String} Stock Keeping Unit (SKU)
     * @param Name {String} Item name
     * @param Price {Number} Item price
     */
    constructor(ItemType, Sku, Name, Price) { 
        
        CreateCatalogItem.initialize(this, ItemType, Sku, Name, Price);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ItemType, Sku, Name, Price) { 
        obj['ItemType'] = ItemType;
        obj['Sku'] = Sku;
        obj['Name'] = Name;
        obj['Price'] = Price;
    }

    /**
     * Constructs a <code>CreateCatalogItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCatalogItem} obj Optional instance to populate.
     * @return {module:model/CreateCatalogItem} The populated <code>CreateCatalogItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCatalogItem();

            if (data.hasOwnProperty('Groups')) {
                obj['Groups'] = ApiClient.convertToType(data['Groups'], [CreateCatalogGroupReference]);
            }
            if (data.hasOwnProperty('Metafields')) {
                obj['Metafields'] = ApiClient.convertToType(data['Metafields'], [Metafield]);
            }
            if (data.hasOwnProperty('ItemType')) {
                obj['ItemType'] = ApiClient.convertToType(data['ItemType'], 'String');
            }
            if (data.hasOwnProperty('Sku')) {
                obj['Sku'] = ApiClient.convertToType(data['Sku'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Price')) {
                obj['Price'] = ApiClient.convertToType(data['Price'], 'Number');
            }
            if (data.hasOwnProperty('ImageFileName')) {
                obj['ImageFileName'] = ApiClient.convertToType(data['ImageFileName'], 'String');
            }
            if (data.hasOwnProperty('Alcohol')) {
                obj['Alcohol'] = ApiClient.convertToType(data['Alcohol'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Collection of groups associated with this item
 * @member {Array.<module:model/CreateCatalogGroupReference>} Groups
 */
CreateCatalogItem.prototype['Groups'] = undefined;

/**
 * Collection of metafields
 * @member {Array.<module:model/Metafield>} Metafields
 */
CreateCatalogItem.prototype['Metafields'] = undefined;

/**
 * Type of item (Product, Modifier, etc)
 * @member {module:model/CreateCatalogItem.ItemTypeEnum} ItemType
 */
CreateCatalogItem.prototype['ItemType'] = undefined;

/**
 * Stock Keeping Unit (SKU)
 * @member {String} Sku
 */
CreateCatalogItem.prototype['Sku'] = undefined;

/**
 * Item name
 * @member {String} Name
 */
CreateCatalogItem.prototype['Name'] = undefined;

/**
 * Item description
 * @member {String} Description
 */
CreateCatalogItem.prototype['Description'] = undefined;

/**
 * Item price
 * @member {Number} Price
 */
CreateCatalogItem.prototype['Price'] = undefined;

/**
 * Image File Name
 * @member {String} ImageFileName
 */
CreateCatalogItem.prototype['ImageFileName'] = undefined;

/**
 * item contains alcohol
 * @member {Boolean} Alcohol
 */
CreateCatalogItem.prototype['Alcohol'] = undefined;





/**
 * Allowed values for the <code>ItemType</code> property.
 * @enum {String}
 * @readonly
 */
CreateCatalogItem['ItemTypeEnum'] = {

    /**
     * value: "Product"
     * @const
     */
    "Product": "Product",

    /**
     * value: "Modifier"
     * @const
     */
    "Modifier": "Modifier"
};



export default CreateCatalogItem;

