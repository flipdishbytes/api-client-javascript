/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PredefinedAnswer from './PredefinedAnswer';

/**
 * The SignupStep model module.
 * @module model/SignupStep
 * @version 1.0.0
 */
class SignupStep {
    /**
     * Constructs a new <code>SignupStep</code>.
     * 
     * @alias module:model/SignupStep
     */
    constructor() { 
        
        SignupStep.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SignupStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignupStep} obj Optional instance to populate.
     * @return {module:model/SignupStep} The populated <code>SignupStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignupStep();

            if (data.hasOwnProperty('Action')) {
                obj['Action'] = ApiClient.convertToType(data['Action'], 'String');
            }
            if (data.hasOwnProperty('Question')) {
                obj['Question'] = ApiClient.convertToType(data['Question'], 'String');
            }
            if (data.hasOwnProperty('PredefinedAnswers')) {
                obj['PredefinedAnswers'] = ApiClient.convertToType(data['PredefinedAnswers'], [PredefinedAnswer]);
            }
        }
        return obj;
    }


}

/**
 * Action needs to take
 * @member {module:model/SignupStep.ActionEnum} Action
 */
SignupStep.prototype['Action'] = undefined;

/**
 * Question in case Action == Question
 * @member {String} Question
 */
SignupStep.prototype['Question'] = undefined;

/**
 * Predefined answer in case Action == Question
 * @member {Array.<module:model/PredefinedAnswer>} PredefinedAnswers
 */
SignupStep.prototype['PredefinedAnswers'] = undefined;





/**
 * Allowed values for the <code>Action</code> property.
 * @enum {String}
 * @readonly
 */
SignupStep['ActionEnum'] = {

    /**
     * value: "Question"
     * @const
     */
    "Question": "Question",

    /**
     * value: "StoreLocation"
     * @const
     */
    "StoreLocation": "StoreLocation",

    /**
     * value: "PaymentSubscription"
     * @const
     */
    "PaymentSubscription": "PaymentSubscription",

    /**
     * value: "StoreName"
     * @const
     */
    "StoreName": "StoreName"
};



export default SignupStep;

