/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PayoutOrder model module.
 * @module model/PayoutOrder
 * @version 1.0.0
 */
class PayoutOrder {
    /**
     * Constructs a new <code>PayoutOrder</code>.
     * Holds the information for an order related to a payout
     * @alias module:model/PayoutOrder
     */
    constructor() { 
        
        PayoutOrder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PayoutOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayoutOrder} obj Optional instance to populate.
     * @return {module:model/PayoutOrder} The populated <code>PayoutOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayoutOrder();

            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'Number');
            }
            if (data.hasOwnProperty('PayoutId')) {
                obj['PayoutId'] = ApiClient.convertToType(data['PayoutId'], 'Number');
            }
            if (data.hasOwnProperty('OrderDate')) {
                obj['OrderDate'] = ApiClient.convertToType(data['OrderDate'], 'Date');
            }
            if (data.hasOwnProperty('OrderType')) {
                obj['OrderType'] = ApiClient.convertToType(data['OrderType'], 'String');
            }
            if (data.hasOwnProperty('OrderCurrency')) {
                obj['OrderCurrency'] = ApiClient.convertToType(data['OrderCurrency'], 'String');
            }
            if (data.hasOwnProperty('Sales')) {
                obj['Sales'] = ApiClient.convertToType(data['Sales'], 'Number');
            }
            if (data.hasOwnProperty('SalesTax')) {
                obj['SalesTax'] = ApiClient.convertToType(data['SalesTax'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryCharges')) {
                obj['DeliveryCharges'] = ApiClient.convertToType(data['DeliveryCharges'], 'Number');
            }
            if (data.hasOwnProperty('Tips')) {
                obj['Tips'] = ApiClient.convertToType(data['Tips'], 'Number');
            }
            if (data.hasOwnProperty('Voucher')) {
                obj['Voucher'] = ApiClient.convertToType(data['Voucher'], 'Number');
            }
            if (data.hasOwnProperty('FlatFeeExcludingVat')) {
                obj['FlatFeeExcludingVat'] = ApiClient.convertToType(data['FlatFeeExcludingVat'], 'Number');
            }
            if (data.hasOwnProperty('FlatFeeExcludingVAT')) {
                obj['FlatFeeExcludingVAT'] = ApiClient.convertToType(data['FlatFeeExcludingVAT'], 'Number');
            }
            if (data.hasOwnProperty('FlatFeeIncludingVat')) {
                obj['FlatFeeIncludingVat'] = ApiClient.convertToType(data['FlatFeeIncludingVat'], 'Number');
            }
            if (data.hasOwnProperty('PercentageFeeExcludingVat')) {
                obj['PercentageFeeExcludingVat'] = ApiClient.convertToType(data['PercentageFeeExcludingVat'], 'Number');
            }
            if (data.hasOwnProperty('PercentageFeeExcludingVAT')) {
                obj['PercentageFeeExcludingVAT'] = ApiClient.convertToType(data['PercentageFeeExcludingVAT'], 'Number');
            }
            if (data.hasOwnProperty('Vat')) {
                obj['Vat'] = ApiClient.convertToType(data['Vat'], 'Number');
            }
            if (data.hasOwnProperty('TotalFees')) {
                obj['TotalFees'] = ApiClient.convertToType(data['TotalFees'], 'Number');
            }
            if (data.hasOwnProperty('CashFeeChargedToCustomer')) {
                obj['CashFeeChargedToCustomer'] = ApiClient.convertToType(data['CashFeeChargedToCustomer'], 'Number');
            }
            if (data.hasOwnProperty('NetSales')) {
                obj['NetSales'] = ApiClient.convertToType(data['NetSales'], 'Number');
            }
            if (data.hasOwnProperty('StoreId')) {
                obj['StoreId'] = ApiClient.convertToType(data['StoreId'], 'Number');
            }
            if (data.hasOwnProperty('ServiceChargeAmount')) {
                obj['ServiceChargeAmount'] = ApiClient.convertToType(data['ServiceChargeAmount'], 'Number');
            }
            if (data.hasOwnProperty('ServiceChargePercentage')) {
                obj['ServiceChargePercentage'] = ApiClient.convertToType(data['ServiceChargePercentage'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The id of the order
 * @member {Number} OrderId
 */
PayoutOrder.prototype['OrderId'] = undefined;

/**
 * The id of the payout the order is related to
 * @member {Number} PayoutId
 */
PayoutOrder.prototype['PayoutId'] = undefined;

/**
 * The date the order was placed
 * @member {Date} OrderDate
 */
PayoutOrder.prototype['OrderDate'] = undefined;

/**
 * Order type (online or cash)
 * @member {module:model/PayoutOrder.OrderTypeEnum} OrderType
 */
PayoutOrder.prototype['OrderType'] = undefined;

/**
 * Order currency
 * @member {module:model/PayoutOrder.OrderCurrencyEnum} OrderCurrency
 */
PayoutOrder.prototype['OrderCurrency'] = undefined;

/**
 * Order sales amount
 * @member {Number} Sales
 */
PayoutOrder.prototype['Sales'] = undefined;

/**
 * Order sales tax amount
 * @member {Number} SalesTax
 */
PayoutOrder.prototype['SalesTax'] = undefined;

/**
 * Order delivery charges
 * @member {Number} DeliveryCharges
 */
PayoutOrder.prototype['DeliveryCharges'] = undefined;

/**
 * Order tips amount
 * @member {Number} Tips
 */
PayoutOrder.prototype['Tips'] = undefined;

/**
 * Order voucher amount
 * @member {Number} Voucher
 */
PayoutOrder.prototype['Voucher'] = undefined;

/**
 * Order flat fee amount excluding VAT
 * @member {Number} FlatFeeExcludingVat
 */
PayoutOrder.prototype['FlatFeeExcludingVat'] = undefined;

/**
 * Order flat fee amount excluding VAT
 * @member {Number} FlatFeeExcludingVAT
 */
PayoutOrder.prototype['FlatFeeExcludingVAT'] = undefined;

/**
 * Order flat fee amount including VAT
 * @member {Number} FlatFeeIncludingVat
 */
PayoutOrder.prototype['FlatFeeIncludingVat'] = undefined;

/**
 * Order percentage fee excluding VAT
 * @member {Number} PercentageFeeExcludingVat
 */
PayoutOrder.prototype['PercentageFeeExcludingVat'] = undefined;

/**
 * Order percentage fee excluding VAT
 * @member {Number} PercentageFeeExcludingVAT
 */
PayoutOrder.prototype['PercentageFeeExcludingVAT'] = undefined;

/**
 * Order VAT amount
 * @member {Number} Vat
 */
PayoutOrder.prototype['Vat'] = undefined;

/**
 * Total order fees amount
 * @member {Number} TotalFees
 */
PayoutOrder.prototype['TotalFees'] = undefined;

/**
 * Cash fee charged to customer
 * @member {Number} CashFeeChargedToCustomer
 */
PayoutOrder.prototype['CashFeeChargedToCustomer'] = undefined;

/**
 * Order net sales amount
 * @member {Number} NetSales
 */
PayoutOrder.prototype['NetSales'] = undefined;

/**
 * Store id
 * @member {Number} StoreId
 */
PayoutOrder.prototype['StoreId'] = undefined;

/**
 * Order ServiceChargeAmount amount
 * @member {Number} ServiceChargeAmount
 */
PayoutOrder.prototype['ServiceChargeAmount'] = undefined;

/**
 * Order ServiceChargePercentage amount
 * @member {Number} ServiceChargePercentage
 */
PayoutOrder.prototype['ServiceChargePercentage'] = undefined;





/**
 * Allowed values for the <code>OrderType</code> property.
 * @enum {String}
 * @readonly
 */
PayoutOrder['OrderTypeEnum'] = {

    /**
     * value: "Cash"
     * @const
     */
    "Cash": "Cash",

    /**
     * value: "Online"
     * @const
     */
    "Online": "Online"
};


/**
 * Allowed values for the <code>OrderCurrency</code> property.
 * @enum {String}
 * @readonly
 */
PayoutOrder['OrderCurrencyEnum'] = {

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "DJF"
     * @const
     */
    "DJF": "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    "ETB": "ETB",

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "DZD"
     * @const
     */
    "DZD": "DZD",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "IQD"
     * @const
     */
    "IQD": "IQD",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "LBP"
     * @const
     */
    "LBP": "LBP",

    /**
     * value: "LYD"
     * @const
     */
    "LYD": "LYD",

    /**
     * value: "MAD"
     * @const
     */
    "MAD": "MAD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SYP"
     * @const
     */
    "SYP": "SYP",

    /**
     * value: "TND"
     * @const
     */
    "TND": "TND",

    /**
     * value: "YER"
     * @const
     */
    "YER": "YER",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "BYN"
     * @const
     */
    "BYN": "BYN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "NGN"
     * @const
     */
    "NGN": "NGN",

    /**
     * value: "BDT"
     * @const
     */
    "BDT": "BDT",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "BAM"
     * @const
     */
    "BAM": "BAM",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "MVR"
     * @const
     */
    "MVR": "MVR",

    /**
     * value: "BTN"
     * @const
     */
    "BTN": "BTN",

    /**
     * value: "XCD"
     * @const
     */
    "XCD": "XCD",

    /**
     * value: "BZD"
     * @const
     */
    "BZD": "BZD",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "JMD"
     * @const
     */
    "JMD": "JMD",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "PHP"
     * @const
     */
    "PHP": "PHP",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "TTD"
     * @const
     */
    "TTD": "TTD",

    /**
     * value: "XDR"
     * @const
     */
    "XDR": "XDR",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "BOB"
     * @const
     */
    "BOB": "BOB",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CRC"
     * @const
     */
    "CRC": "CRC",

    /**
     * value: "CUP"
     * @const
     */
    "CUP": "CUP",

    /**
     * value: "DOP"
     * @const
     */
    "DOP": "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    "GTQ": "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    "HNL": "HNL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "NIO"
     * @const
     */
    "NIO": "NIO",

    /**
     * value: "PAB"
     * @const
     */
    "PAB": "PAB",

    /**
     * value: "PEN"
     * @const
     */
    "PEN": "PEN",

    /**
     * value: "PYG"
     * @const
     */
    "PYG": "PYG",

    /**
     * value: "UYU"
     * @const
     */
    "UYU": "UYU",

    /**
     * value: "VEF"
     * @const
     */
    "VEF": "VEF",

    /**
     * value: "IRR"
     * @const
     */
    "IRR": "IRR",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "CDF"
     * @const
     */
    "CDF": "CDF",

    /**
     * value: "XAF"
     * @const
     */
    "XAF": "XAF",

    /**
     * value: "HTG"
     * @const
     */
    "HTG": "HTG",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "HRK"
     * @const
     */
    "HRK": "HRK",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "AMD"
     * @const
     */
    "AMD": "AMD",

    /**
     * value: "ISK"
     * @const
     */
    "ISK": "ISK",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "KHR"
     * @const
     */
    "KHR": "KHR",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KGS"
     * @const
     */
    "KGS": "KGS",

    /**
     * value: "LAK"
     * @const
     */
    "LAK": "LAK",

    /**
     * value: "MKD"
     * @const
     */
    "MKD": "MKD",

    /**
     * value: "MNT"
     * @const
     */
    "MNT": "MNT",

    /**
     * value: "BND"
     * @const
     */
    "BND": "BND",

    /**
     * value: "MMK"
     * @const
     */
    "MMK": "MMK",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NPR"
     * @const
     */
    "NPR": "NPR",

    /**
     * value: "PKR"
     * @const
     */
    "PKR": "PKR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "AFN"
     * @const
     */
    "AFN": "AFN",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RWF"
     * @const
     */
    "RWF": "RWF",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "LKR"
     * @const
     */
    "LKR": "LKR",

    /**
     * value: "SOS"
     * @const
     */
    "SOS": "SOS",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "RSD"
     * @const
     */
    "RSD": "RSD",

    /**
     * value: "KES"
     * @const
     */
    "KES": "KES",

    /**
     * value: "TJS"
     * @const
     */
    "TJS": "TJS",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "ERN"
     * @const
     */
    "ERN": "ERN",

    /**
     * value: "TMT"
     * @const
     */
    "TMT": "TMT",

    /**
     * value: "BWP"
     * @const
     */
    "BWP": "BWP",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "UZS"
     * @const
     */
    "UZS": "UZS",

    /**
     * value: "VND"
     * @const
     */
    "VND": "VND",

    /**
     * value: "MOP"
     * @const
     */
    "MOP": "MOP",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "BMD"
     * @const
     */
    "BMD": "BMD"
};



export default PayoutOrder;

