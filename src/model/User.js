/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserWhiteLabelConfig from './UserWhiteLabelConfig';

/**
 * The User model module.
 * @module model/User
 * @version 1.0.0
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * User
     * @alias module:model/User
     */
    constructor() { 
        
        User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('CustomerName')) {
                obj['CustomerName'] = ApiClient.convertToType(data['CustomerName'], 'String');
            }
            if (data.hasOwnProperty('HasLoggedIn')) {
                obj['HasLoggedIn'] = ApiClient.convertToType(data['HasLoggedIn'], 'Boolean');
            }
            if (data.hasOwnProperty('UserDiscriminator')) {
                obj['UserDiscriminator'] = ApiClient.convertToType(data['UserDiscriminator'], 'String');
            }
            if (data.hasOwnProperty('TsCreate')) {
                obj['TsCreate'] = ApiClient.convertToType(data['TsCreate'], 'Date');
            }
            if (data.hasOwnProperty('WhiteLabelConfigs')) {
                obj['WhiteLabelConfigs'] = ApiClient.convertToType(data['WhiteLabelConfigs'], [UserWhiteLabelConfig]);
            }
            if (data.hasOwnProperty('UserType')) {
                obj['UserType'] = ApiClient.convertToType(data['UserType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * User Id
 * @member {Number} Id
 */
User.prototype['Id'] = undefined;

/**
 * Phone Number
 * @member {String} PhoneNumber
 */
User.prototype['PhoneNumber'] = undefined;

/**
 * Email
 * @member {String} Email
 */
User.prototype['Email'] = undefined;

/**
 * Customer Name
 * @member {String} CustomerName
 */
User.prototype['CustomerName'] = undefined;

/**
 * Has Logged In
 * @member {Boolean} HasLoggedIn
 */
User.prototype['HasLoggedIn'] = undefined;

/**
 * User Discriminator
 * @member {module:model/User.UserDiscriminatorEnum} UserDiscriminator
 */
User.prototype['UserDiscriminator'] = undefined;

/**
 * Timestamp Created
 * @member {Date} TsCreate
 */
User.prototype['TsCreate'] = undefined;

/**
 * WhiteLabel Configs
 * @member {Array.<module:model/UserWhiteLabelConfig>} WhiteLabelConfigs
 */
User.prototype['WhiteLabelConfigs'] = undefined;

/**
 * User Type
 * @member {String} UserType
 */
User.prototype['UserType'] = undefined;





/**
 * Allowed values for the <code>UserDiscriminator</code> property.
 * @enum {String}
 * @readonly
 */
User['UserDiscriminatorEnum'] = {

    /**
     * value: "All"
     * @const
     */
    "All": "All",

    /**
     * value: "ApplicationUsers"
     * @const
     */
    "ApplicationUsers": "ApplicationUsers",

    /**
     * value: "RestaurantUsers"
     * @const
     */
    "RestaurantUsers": "RestaurantUsers",

    /**
     * value: "HydraUsers"
     * @const
     */
    "HydraUsers": "HydraUsers"
};



export default User;

