/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.StoreKioskSetting = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The StoreKioskSetting model module.
   * @module model/StoreKioskSetting
   * @version v1.0
   */

  /**
   * Constructs a new <code>StoreKioskSetting</code>.
   * Store Kiosk Settings
   * @alias module:model/StoreKioskSetting
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>StoreKioskSetting</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreKioskSetting} obj Optional instance to populate.
   * @return {module:model/StoreKioskSetting} The populated <code>StoreKioskSetting</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('KioskSettingId'))
        obj.kioskSettingId = ApiClient.convertToType(data['KioskSettingId'], 'Number');
      if (data.hasOwnProperty('KioskName'))
        obj.kioskName = ApiClient.convertToType(data['KioskName'], 'String');
      if (data.hasOwnProperty('RequireCustomerName'))
        obj.requireCustomerName = ApiClient.convertToType(data['RequireCustomerName'], 'Boolean');
      if (data.hasOwnProperty('RequestTableNumber'))
        obj.requestTableNumber = ApiClient.convertToType(data['RequestTableNumber'], 'Boolean');
      if (data.hasOwnProperty('OfferDineInOrTakeawayOption'))
        obj.offerDineInOrTakeawayOption = ApiClient.convertToType(data['OfferDineInOrTakeawayOption'], 'Boolean');
      if (data.hasOwnProperty('PhysicalRestaurantId'))
        obj.physicalRestaurantId = ApiClient.convertToType(data['PhysicalRestaurantId'], 'Number');
      if (data.hasOwnProperty('HydraConfigId'))
        obj.hydraConfigId = ApiClient.convertToType(data['HydraConfigId'], 'Number');
    }
    return obj;
  }

  /**
   * Kiosk setting id
   * @member {Number} kioskSettingId
   */
  exports.prototype.kioskSettingId = undefined;

  /**
   * Store kiosk name
   * @member {String} kioskName
   */
  exports.prototype.kioskName = undefined;

  /**
   * Require customer name flag
   * @member {Boolean} requireCustomerName
   */
  exports.prototype.requireCustomerName = undefined;

  /**
   * Request table number flag
   * @member {Boolean} requestTableNumber
   */
  exports.prototype.requestTableNumber = undefined;

  /**
   * Offer Dine-In/Takeaway option flag
   * @member {Boolean} offerDineInOrTakeawayOption
   */
  exports.prototype.offerDineInOrTakeawayOption = undefined;

  /**
   * Physical restaurant id
   * @member {Number} physicalRestaurantId
   */
  exports.prototype.physicalRestaurantId = undefined;

  /**
   * Hydra config id
   * @member {Number} hydraConfigId
   */
  exports.prototype.hydraConfigId = undefined;


  return exports;

}));
