/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WhiteLabelConfig model module.
 * @module model/WhiteLabelConfig
 * @version 1.0.0
 */
class WhiteLabelConfig {
    /**
     * Constructs a new <code>WhiteLabelConfig</code>.
     * White label configuration details
     * @alias module:model/WhiteLabelConfig
     */
    constructor() { 
        
        WhiteLabelConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WhiteLabelConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WhiteLabelConfig} obj Optional instance to populate.
     * @return {module:model/WhiteLabelConfig} The populated <code>WhiteLabelConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WhiteLabelConfig();

            if (data.hasOwnProperty('WhiteLabelId')) {
                obj['WhiteLabelId'] = ApiClient.convertToType(data['WhiteLabelId'], 'Number');
            }
            if (data.hasOwnProperty('WhiteLabelName')) {
                obj['WhiteLabelName'] = ApiClient.convertToType(data['WhiteLabelName'], 'String');
            }
            if (data.hasOwnProperty('CountryId')) {
                obj['CountryId'] = ApiClient.convertToType(data['CountryId'], 'String');
            }
            if (data.hasOwnProperty('AppNameId')) {
                obj['AppNameId'] = ApiClient.convertToType(data['AppNameId'], 'String');
            }
            if (data.hasOwnProperty('Website')) {
                obj['Website'] = ApiClient.convertToType(data['Website'], 'String');
            }
            if (data.hasOwnProperty('PanaceaVanityUrl')) {
                obj['PanaceaVanityUrl'] = ApiClient.convertToType(data['PanaceaVanityUrl'], 'String');
            }
        }
        return obj;
    }


}

/**
 * White label identifier
 * @member {Number} WhiteLabelId
 */
WhiteLabelConfig.prototype['WhiteLabelId'] = undefined;

/**
 * White label name
 * @member {String} WhiteLabelName
 */
WhiteLabelConfig.prototype['WhiteLabelName'] = undefined;

/**
 * Country identifier
 * @member {String} CountryId
 */
WhiteLabelConfig.prototype['CountryId'] = undefined;

/**
 * App id
 * @member {String} AppNameId
 */
WhiteLabelConfig.prototype['AppNameId'] = undefined;

/**
 * Website URL
 * @member {String} Website
 */
WhiteLabelConfig.prototype['Website'] = undefined;

/**
 * Panacea vanity URL
 * @member {String} PanaceaVanityUrl
 */
WhiteLabelConfig.prototype['PanaceaVanityUrl'] = undefined;






export default WhiteLabelConfig;

