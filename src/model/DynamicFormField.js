/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamicFormRules from './DynamicFormRules';

/**
 * The DynamicFormField model module.
 * @module model/DynamicFormField
 * @version 1.0.0
 */
class DynamicFormField {
    /**
     * Constructs a new <code>DynamicFormField</code>.
     * @alias module:model/DynamicFormField
     */
    constructor() { 
        
        DynamicFormField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DynamicFormField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DynamicFormField} obj Optional instance to populate.
     * @return {module:model/DynamicFormField} The populated <code>DynamicFormField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DynamicFormField();

            if (data.hasOwnProperty('Identifier')) {
                obj['Identifier'] = ApiClient.convertToType(data['Identifier'], 'String');
            }
            if (data.hasOwnProperty('Label')) {
                obj['Label'] = ApiClient.convertToType(data['Label'], 'String');
            }
            if (data.hasOwnProperty('Placeholder')) {
                obj['Placeholder'] = ApiClient.convertToType(data['Placeholder'], 'String');
            }
            if (data.hasOwnProperty('Rules')) {
                obj['Rules'] = DynamicFormRules.constructFromObject(data['Rules']);
            }
            if (data.hasOwnProperty('Mapping')) {
                obj['Mapping'] = ApiClient.convertToType(data['Mapping'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Modifiers')) {
                obj['Modifiers'] = ApiClient.convertToType(data['Modifiers'], ['String']);
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], Object);
            }
            if (data.hasOwnProperty('Scopes')) {
                obj['Scopes'] = ApiClient.convertToType(data['Scopes'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Identifier
 */
DynamicFormField.prototype['Identifier'] = undefined;

/**
 * @member {String} Label
 */
DynamicFormField.prototype['Label'] = undefined;

/**
 * @member {String} Placeholder
 */
DynamicFormField.prototype['Placeholder'] = undefined;

/**
 * @member {module:model/DynamicFormRules} Rules
 */
DynamicFormField.prototype['Rules'] = undefined;

/**
 * @member {Object.<String, String>} Mapping
 */
DynamicFormField.prototype['Mapping'] = undefined;

/**
 * @member {Array.<String>} Modifiers
 */
DynamicFormField.prototype['Modifiers'] = undefined;

/**
 * @member {Object} Value
 */
DynamicFormField.prototype['Value'] = undefined;

/**
 * @member {String} Scopes
 */
DynamicFormField.prototype['Scopes'] = undefined;






export default DynamicFormField;

