/**
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BusinessHoursPeriod', 'model/DeliveryFeeArea', 'model/StoreAddress', 'model/StoreNote'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BusinessHoursPeriod'), require('./DeliveryFeeArea'), require('./StoreAddress'), require('./StoreNote'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.Store = factory(root.Flipdish.ApiClient, root.Flipdish.BusinessHoursPeriod, root.Flipdish.DeliveryFeeArea, root.Flipdish.StoreAddress, root.Flipdish.StoreNote);
  }
}(this, function(ApiClient, BusinessHoursPeriod, DeliveryFeeArea, StoreAddress, StoreNote) {
  'use strict';




  /**
   * The Store model module.
   * @module model/Store
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Store</code>.
   * Store
   * @alias module:model/Store
   * @class
   */
  var exports = function() {
    var _this = this;



































  };

  /**
   * Constructs a <code>Store</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Store} obj Optional instance to populate.
   * @return {module:model/Store} The populated <code>Store</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('StoreId')) {
        obj['StoreId'] = ApiClient.convertToType(data['StoreId'], 'Number');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('ApmPhoneNumber')) {
        obj['ApmPhoneNumber'] = ApiClient.convertToType(data['ApmPhoneNumber'], 'String');
      }
      if (data.hasOwnProperty('PhoneNumber')) {
        obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
      }
      if (data.hasOwnProperty('EmailAddress')) {
        obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
      }
      if (data.hasOwnProperty('Address')) {
        obj['Address'] = StoreAddress.constructFromObject(data['Address']);
      }
      if (data.hasOwnProperty('PreOrderEnabled')) {
        obj['PreOrderEnabled'] = ApiClient.convertToType(data['PreOrderEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('TakeOutEnabled')) {
        obj['TakeOutEnabled'] = ApiClient.convertToType(data['TakeOutEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('TableServiceEnabled')) {
        obj['TableServiceEnabled'] = ApiClient.convertToType(data['TableServiceEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('DineInEnabled')) {
        obj['DineInEnabled'] = ApiClient.convertToType(data['DineInEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('AllowPreOrdersAndTableService')) {
        obj['AllowPreOrdersAndTableService'] = ApiClient.convertToType(data['AllowPreOrdersAndTableService'], 'Boolean');
      }
      if (data.hasOwnProperty('PickupEnabled')) {
        obj['PickupEnabled'] = ApiClient.convertToType(data['PickupEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('DeliveryEnabled')) {
        obj['DeliveryEnabled'] = ApiClient.convertToType(data['DeliveryEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('CardOrderDeliveryEnabled')) {
        obj['CardOrderDeliveryEnabled'] = ApiClient.convertToType(data['CardOrderDeliveryEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('CashOrdersDeliveryEnabled')) {
        obj['CashOrdersDeliveryEnabled'] = ApiClient.convertToType(data['CashOrdersDeliveryEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('CardOrdersPickupEnabled')) {
        obj['CardOrdersPickupEnabled'] = ApiClient.convertToType(data['CardOrdersPickupEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('CashOrdersPickupEnabled')) {
        obj['CashOrdersPickupEnabled'] = ApiClient.convertToType(data['CashOrdersPickupEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('TipsEnabled')) {
        obj['TipsEnabled'] = ApiClient.convertToType(data['TipsEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('AutomaticallyAcceptOrders')) {
        obj['AutomaticallyAcceptOrders'] = ApiClient.convertToType(data['AutomaticallyAcceptOrders'], 'Boolean');
      }
      if (data.hasOwnProperty('OpenForDelivery')) {
        obj['OpenForDelivery'] = ApiClient.convertToType(data['OpenForDelivery'], 'Boolean');
      }
      if (data.hasOwnProperty('OpenForPickup')) {
        obj['OpenForPickup'] = ApiClient.convertToType(data['OpenForPickup'], 'Boolean');
      }
      if (data.hasOwnProperty('MinimumPickupOrderAmount')) {
        obj['MinimumPickupOrderAmount'] = ApiClient.convertToType(data['MinimumPickupOrderAmount'], 'Number');
      }
      if (data.hasOwnProperty('DeliveryFeeAreas')) {
        obj['DeliveryFeeAreas'] = ApiClient.convertToType(data['DeliveryFeeAreas'], [DeliveryFeeArea]);
      }
      if (data.hasOwnProperty('RequireCustomerNameForPickup')) {
        obj['RequireCustomerNameForPickup'] = ApiClient.convertToType(data['RequireCustomerNameForPickup'], 'Boolean');
      }
      if (data.hasOwnProperty('RequireCustomerNameForDelivery')) {
        obj['RequireCustomerNameForDelivery'] = ApiClient.convertToType(data['RequireCustomerNameForDelivery'], 'Boolean');
      }
      if (data.hasOwnProperty('PickupHours')) {
        obj['PickupHours'] = ApiClient.convertToType(data['PickupHours'], [BusinessHoursPeriod]);
      }
      if (data.hasOwnProperty('DeliveryHours')) {
        obj['DeliveryHours'] = ApiClient.convertToType(data['DeliveryHours'], [BusinessHoursPeriod]);
      }
      if (data.hasOwnProperty('MicrosoftTimeZone')) {
        obj['MicrosoftTimeZone'] = ApiClient.convertToType(data['MicrosoftTimeZone'], 'String');
      }
      if (data.hasOwnProperty('IanaTimeZone')) {
        obj['IanaTimeZone'] = ApiClient.convertToType(data['IanaTimeZone'], 'String');
      }
      if (data.hasOwnProperty('MenuId')) {
        obj['MenuId'] = ApiClient.convertToType(data['MenuId'], 'Number');
      }
      if (data.hasOwnProperty('OrderConfirmationMessageOverrideDelivery')) {
        obj['OrderConfirmationMessageOverrideDelivery'] = ApiClient.convertToType(data['OrderConfirmationMessageOverrideDelivery'], 'String');
      }
      if (data.hasOwnProperty('OrderConfirmationMessageOverridePickup')) {
        obj['OrderConfirmationMessageOverridePickup'] = ApiClient.convertToType(data['OrderConfirmationMessageOverridePickup'], 'String');
      }
      if (data.hasOwnProperty('PrintoutLayoutType')) {
        obj['PrintoutLayoutType'] = ApiClient.convertToType(data['PrintoutLayoutType'], 'String');
      }
      if (data.hasOwnProperty('StoreNotes')) {
        obj['StoreNotes'] = ApiClient.convertToType(data['StoreNotes'], [StoreNote]);
      }
    }
    return obj;
  }

  /**
   * Store identifier
   * @member {Number} StoreId
   */
  exports.prototype['StoreId'] = undefined;
  /**
   * Name
   * @member {String} Name
   */
  exports.prototype['Name'] = undefined;
  /**
   * Automated Phone Marketing number
   * @member {String} ApmPhoneNumber
   */
  exports.prototype['ApmPhoneNumber'] = undefined;
  /**
   * Phone number
   * @member {String} PhoneNumber
   */
  exports.prototype['PhoneNumber'] = undefined;
  /**
   * Email address (visible to customers)
   * @member {String} EmailAddress
   */
  exports.prototype['EmailAddress'] = undefined;
  /**
   * Store address
   * @member {module:model/StoreAddress} Address
   */
  exports.prototype['Address'] = undefined;
  /**
   * True if the store accepts pre-orders
   * @member {Boolean} PreOrderEnabled
   */
  exports.prototype['PreOrderEnabled'] = undefined;
  /**
   * True if the store accepts take-out orders
   * @member {Boolean} TakeOutEnabled
   */
  exports.prototype['TakeOutEnabled'] = undefined;
  /**
   * True if the store has table service
   * @member {Boolean} TableServiceEnabled
   */
  exports.prototype['TableServiceEnabled'] = undefined;
  /**
   * True if the store accepts dine-in orders
   * @member {Boolean} DineInEnabled
   */
  exports.prototype['DineInEnabled'] = undefined;
  /**
   * True if both pre-orders and talbe service can be enabled
   * @member {Boolean} AllowPreOrdersAndTableService
   */
  exports.prototype['AllowPreOrdersAndTableService'] = undefined;
  /**
   * True if the store accepts pickup orders
   * @member {Boolean} PickupEnabled
   */
  exports.prototype['PickupEnabled'] = undefined;
  /**
   * True if the store accepts delivery orders
   * @member {Boolean} DeliveryEnabled
   */
  exports.prototype['DeliveryEnabled'] = undefined;
  /**
   * True if the store accepts card payment for delivery orders
   * @member {Boolean} CardOrderDeliveryEnabled
   */
  exports.prototype['CardOrderDeliveryEnabled'] = undefined;
  /**
   * True if the store accepts cash payment for delivery orders
   * @member {Boolean} CashOrdersDeliveryEnabled
   */
  exports.prototype['CashOrdersDeliveryEnabled'] = undefined;
  /**
   * True if the store accepts card payment for pickup orders
   * @member {Boolean} CardOrdersPickupEnabled
   */
  exports.prototype['CardOrdersPickupEnabled'] = undefined;
  /**
   * True if the store accepts cash payment for pickup orders
   * @member {Boolean} CashOrdersPickupEnabled
   */
  exports.prototype['CashOrdersPickupEnabled'] = undefined;
  /**
   * True if the store accepts tips
   * @member {Boolean} TipsEnabled
   */
  exports.prototype['TipsEnabled'] = undefined;
  /**
   * True if the stores orders are automatically accepted in Flipdish
   * @member {Boolean} AutomaticallyAcceptOrders
   */
  exports.prototype['AutomaticallyAcceptOrders'] = undefined;
  /**
   * True if the store is open for delivery
   * @member {Boolean} OpenForDelivery
   */
  exports.prototype['OpenForDelivery'] = undefined;
  /**
   * True if the store is open for pickup
   * @member {Boolean} OpenForPickup
   */
  exports.prototype['OpenForPickup'] = undefined;
  /**
   * Minimum pickup order amount
   * @member {Number} MinimumPickupOrderAmount
   */
  exports.prototype['MinimumPickupOrderAmount'] = undefined;
  /**
   * Delivery fee areas
   * @member {Array.<module:model/DeliveryFeeArea>} DeliveryFeeAreas
   */
  exports.prototype['DeliveryFeeAreas'] = undefined;
  /**
   * True if customer name required for pickup orders
   * @member {Boolean} RequireCustomerNameForPickup
   */
  exports.prototype['RequireCustomerNameForPickup'] = undefined;
  /**
   * True if customer name required for delivery orders
   * @member {Boolean} RequireCustomerNameForDelivery
   */
  exports.prototype['RequireCustomerNameForDelivery'] = undefined;
  /**
   * Pickup hours
   * @member {Array.<module:model/BusinessHoursPeriod>} PickupHours
   */
  exports.prototype['PickupHours'] = undefined;
  /**
   * Delivery hours
   * @member {Array.<module:model/BusinessHoursPeriod>} DeliveryHours
   */
  exports.prototype['DeliveryHours'] = undefined;
  /**
   * Microsoft Time Zone Index Values (https://msdn.microsoft.com/en-us/library/ms912391)
   * @member {String} MicrosoftTimeZone
   */
  exports.prototype['MicrosoftTimeZone'] = undefined;
  /**
   * IANA Time Zone (https://www.iana.org/time-zones)
   * @member {String} IanaTimeZone
   */
  exports.prototype['IanaTimeZone'] = undefined;
  /**
   * Menu identifier
   * @member {Number} MenuId
   */
  exports.prototype['MenuId'] = undefined;
  /**
   * Overridden confirmation message for delivery orders
   * @member {String} OrderConfirmationMessageOverrideDelivery
   */
  exports.prototype['OrderConfirmationMessageOverrideDelivery'] = undefined;
  /**
   * Overridden confirmation message for pickup orders
   * @member {String} OrderConfirmationMessageOverridePickup
   */
  exports.prototype['OrderConfirmationMessageOverridePickup'] = undefined;
  /**
   * Printout layout
   * @member {module:model/Store.PrintoutLayoutTypeEnum} PrintoutLayoutType
   */
  exports.prototype['PrintoutLayoutType'] = undefined;
  /**
   * Store notes
   * @member {Array.<module:model/StoreNote>} StoreNotes
   */
  exports.prototype['StoreNotes'] = undefined;


  /**
   * Allowed values for the <code>PrintoutLayoutType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PrintoutLayoutTypeEnum = {
    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",
    /**
     * value: "Centra"
     * @const
     */
    "Centra": "Centra"  };


  return exports;
}));


