/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BusinessHoursPeriod', 'model/DeliveryZone', 'model/StoreAddress', 'model/StoreNote'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BusinessHoursPeriod'), require('./DeliveryZone'), require('./StoreAddress'), require('./StoreNote'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.Store = factory(root.Flipdish.ApiClient, root.Flipdish.BusinessHoursPeriod, root.Flipdish.DeliveryZone, root.Flipdish.StoreAddress, root.Flipdish.StoreNote);
  }
}(this, function(ApiClient, BusinessHoursPeriod, DeliveryZone, StoreAddress, StoreNote) {
  'use strict';

  /**
   * The Store model module.
   * @module model/Store
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Store</code>.
   * Store
   * @alias module:model/Store
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Store</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Store} obj Optional instance to populate.
   * @return {module:model/Store} The populated <code>Store</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('StoreId'))
        obj.StoreId = ApiClient.convertToType(data['StoreId'], 'Number');
      if (data.hasOwnProperty('StoreGroupId'))
        obj.StoreGroupId = ApiClient.convertToType(data['StoreGroupId'], 'Number');
      if (data.hasOwnProperty('Address'))
        obj.Address = StoreAddress.constructFromObject(data['Address']);
      if (data.hasOwnProperty('DeliveryZones'))
        obj.DeliveryZones = ApiClient.convertToType(data['DeliveryZones'], [DeliveryZone]);
      if (data.hasOwnProperty('ApmPhoneNumber'))
        obj.ApmPhoneNumber = ApiClient.convertToType(data['ApmPhoneNumber'], 'String');
      if (data.hasOwnProperty('PickupHours'))
        obj.PickupHours = ApiClient.convertToType(data['PickupHours'], [BusinessHoursPeriod]);
      if (data.hasOwnProperty('DeliveryHours'))
        obj.DeliveryHours = ApiClient.convertToType(data['DeliveryHours'], [BusinessHoursPeriod]);
      if (data.hasOwnProperty('MenuId'))
        obj.MenuId = ApiClient.convertToType(data['MenuId'], 'Number');
      if (data.hasOwnProperty('OrderConfirmationMessageOverrideDelivery'))
        obj.OrderConfirmationMessageOverrideDelivery = ApiClient.convertToType(data['OrderConfirmationMessageOverrideDelivery'], 'String');
      if (data.hasOwnProperty('OrderConfirmationMessageOverridePickup'))
        obj.OrderConfirmationMessageOverridePickup = ApiClient.convertToType(data['OrderConfirmationMessageOverridePickup'], 'String');
      if (data.hasOwnProperty('PrintoutLayoutType'))
        obj.PrintoutLayoutType = ApiClient.convertToType(data['PrintoutLayoutType'], 'String');
      if (data.hasOwnProperty('StoreNotes'))
        obj.StoreNotes = ApiClient.convertToType(data['StoreNotes'], [StoreNote]);
      if (data.hasOwnProperty('MicrosoftTimeZone'))
        obj.MicrosoftTimeZone = ApiClient.convertToType(data['MicrosoftTimeZone'], 'String');
      if (data.hasOwnProperty('IanaTimeZone'))
        obj.IanaTimeZone = ApiClient.convertToType(data['IanaTimeZone'], 'String');
      if (data.hasOwnProperty('Currency'))
        obj.Currency = ApiClient.convertToType(data['Currency'], 'String');
      if (data.hasOwnProperty('PreOrderDeliveryEnabled'))
        obj.PreOrderDeliveryEnabled = ApiClient.convertToType(data['PreOrderDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('PreOrderPickupEnabled'))
        obj.PreOrderPickupEnabled = ApiClient.convertToType(data['PreOrderPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('LogoUrl'))
        obj.LogoUrl = ApiClient.convertToType(data['LogoUrl'], 'String');
      if (data.hasOwnProperty('FraudPreventionStrategy'))
        obj.FraudPreventionStrategy = ApiClient.convertToType(data['FraudPreventionStrategy'], 'String');
      if (data.hasOwnProperty('PhoneNumber'))
        obj.PhoneNumber = ApiClient.convertToType(data['PhoneNumber'], 'String');
      if (data.hasOwnProperty('AlwaysAppearOpen'))
        obj.AlwaysAppearOpen = ApiClient.convertToType(data['AlwaysAppearOpen'], 'Boolean');
      if (data.hasOwnProperty('PreOrderEnabled'))
        obj.PreOrderEnabled = ApiClient.convertToType(data['PreOrderEnabled'], 'Boolean');
      if (data.hasOwnProperty('TakeOutEnabled'))
        obj.TakeOutEnabled = ApiClient.convertToType(data['TakeOutEnabled'], 'Boolean');
      if (data.hasOwnProperty('TableServiceEnabled'))
        obj.TableServiceEnabled = ApiClient.convertToType(data['TableServiceEnabled'], 'Boolean');
      if (data.hasOwnProperty('DineInEnabled'))
        obj.DineInEnabled = ApiClient.convertToType(data['DineInEnabled'], 'Boolean');
      if (data.hasOwnProperty('AllowPreOrdersAndTableService'))
        obj.AllowPreOrdersAndTableService = ApiClient.convertToType(data['AllowPreOrdersAndTableService'], 'Boolean');
      if (data.hasOwnProperty('PickupEnabled'))
        obj.PickupEnabled = ApiClient.convertToType(data['PickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('DeliveryEnabled'))
        obj.DeliveryEnabled = ApiClient.convertToType(data['DeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrderDeliveryEnabled'))
        obj.CardOrderDeliveryEnabled = ApiClient.convertToType(data['CardOrderDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersDeliveryEnabled'))
        obj.CashOrdersDeliveryEnabled = ApiClient.convertToType(data['CashOrdersDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrdersPickupEnabled'))
        obj.CardOrdersPickupEnabled = ApiClient.convertToType(data['CardOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersPickupEnabled'))
        obj.CashOrdersPickupEnabled = ApiClient.convertToType(data['CashOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('TipsEnabled'))
        obj.TipsEnabled = ApiClient.convertToType(data['TipsEnabled'], 'Boolean');
      if (data.hasOwnProperty('AutomaticallyAcceptOrders'))
        obj.AutomaticallyAcceptOrders = ApiClient.convertToType(data['AutomaticallyAcceptOrders'], 'Boolean');
      if (data.hasOwnProperty('OpenForDelivery'))
        obj.OpenForDelivery = ApiClient.convertToType(data['OpenForDelivery'], 'Boolean');
      if (data.hasOwnProperty('OpenForPickup'))
        obj.OpenForPickup = ApiClient.convertToType(data['OpenForPickup'], 'Boolean');
      if (data.hasOwnProperty('MinimumPickupOrderAmount'))
        obj.MinimumPickupOrderAmount = ApiClient.convertToType(data['MinimumPickupOrderAmount'], 'Number');
      if (data.hasOwnProperty('RequireCustomerNameForPickup'))
        obj.RequireCustomerNameForPickup = ApiClient.convertToType(data['RequireCustomerNameForPickup'], 'Boolean');
      if (data.hasOwnProperty('GdprCustomerPhoneNumbers'))
        obj.GdprCustomerPhoneNumbers = ApiClient.convertToType(data['GdprCustomerPhoneNumbers'], 'Boolean');
      if (data.hasOwnProperty('RequireCustomerNameForDelivery'))
        obj.RequireCustomerNameForDelivery = ApiClient.convertToType(data['RequireCustomerNameForDelivery'], 'Boolean');
      if (data.hasOwnProperty('AllowChefNotes'))
        obj.AllowChefNotes = ApiClient.convertToType(data['AllowChefNotes'], 'Boolean');
      if (data.hasOwnProperty('EtaInPickupConfirmationSmsEnabled'))
        obj.EtaInPickupConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInPickupConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('EtaInDeliveryConfirmationSmsEnabled'))
        obj.EtaInDeliveryConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInDeliveryConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('IsArchived'))
        obj.IsArchived = ApiClient.convertToType(data['IsArchived'], 'Boolean');
      if (data.hasOwnProperty('IsPublished'))
        obj.IsPublished = ApiClient.convertToType(data['IsPublished'], 'Boolean');
      if (data.hasOwnProperty('Name'))
        obj.Name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('EmailAddress'))
        obj.EmailAddress = ApiClient.convertToType(data['EmailAddress'], 'String');
      if (data.hasOwnProperty('StaffLanguage'))
        obj.StaffLanguage = ApiClient.convertToType(data['StaffLanguage'], 'String');
    }
    return obj;
  }

  /**
   * Store identifier
   * @member {Number} StoreId
   */
  exports.prototype.StoreId = undefined;

  /**
   * Store group id to which this store belongs
   * @member {Number} StoreGroupId
   */
  exports.prototype.StoreGroupId = undefined;

  /**
   * Store address
   * @member {module:model/StoreAddress} Address
   */
  exports.prototype.Address = undefined;

  /**
   * Delivery zones
   * @member {Array.<module:model/DeliveryZone>} DeliveryZones
   */
  exports.prototype.DeliveryZones = undefined;

  /**
   * Automated Phone Marketing number
   * @member {String} ApmPhoneNumber
   */
  exports.prototype.ApmPhoneNumber = undefined;

  /**
   * Pickup hours
   * @member {Array.<module:model/BusinessHoursPeriod>} PickupHours
   */
  exports.prototype.PickupHours = undefined;

  /**
   * Delivery hours
   * @member {Array.<module:model/BusinessHoursPeriod>} DeliveryHours
   */
  exports.prototype.DeliveryHours = undefined;

  /**
   * Menu identifier
   * @member {Number} MenuId
   */
  exports.prototype.MenuId = undefined;

  /**
   * Overridden confirmation message for delivery orders
   * @member {String} OrderConfirmationMessageOverrideDelivery
   */
  exports.prototype.OrderConfirmationMessageOverrideDelivery = undefined;

  /**
   * Overridden confirmation message for pickup orders
   * @member {String} OrderConfirmationMessageOverridePickup
   */
  exports.prototype.OrderConfirmationMessageOverridePickup = undefined;

  /**
   * Printout layout
   * @member {module:model/Store.PrintoutLayoutTypeEnum} PrintoutLayoutType
   */
  exports.prototype.PrintoutLayoutType = undefined;

  /**
   * Store notes
   * @member {Array.<module:model/StoreNote>} StoreNotes
   */
  exports.prototype.StoreNotes = undefined;

  /**
   * Microsoft Time Zone Index Values (https://msdn.microsoft.com/en-us/library/ms912391)  (Editable through store coordinate change)
   * @member {String} MicrosoftTimeZone
   */
  exports.prototype.MicrosoftTimeZone = undefined;

  /**
   * IANA Time Zone (https://www.iana.org/time-zones)  (Editable through store coordinate change)
   * @member {String} IanaTimeZone
   */
  exports.prototype.IanaTimeZone = undefined;

  /**
   * Currency (derived from Store Group)
   * @member {module:model/Store.CurrencyEnum} Currency
   */
  exports.prototype.Currency = undefined;

  /**
   * Is PerOrder Enabled for Delivery
   * @member {Boolean} PreOrderDeliveryEnabled
   */
  exports.prototype.PreOrderDeliveryEnabled = undefined;

  /**
   * Is PerOrder Enabled for Pickup
   * @member {Boolean} PreOrderPickupEnabled
   */
  exports.prototype.PreOrderPickupEnabled = undefined;

  /**
   * Url for logo image
   * @member {String} LogoUrl
   */
  exports.prototype.LogoUrl = undefined;

  /**
   * Fraud Prevention Strategy
   * @member {String} FraudPreventionStrategy
   */
  exports.prototype.FraudPreventionStrategy = undefined;

  /**
   * Phone number
   * @member {String} PhoneNumber
   */
  exports.prototype.PhoneNumber = undefined;

  /**
   * True if the store always appears open
   * @member {Boolean} AlwaysAppearOpen
   */
  exports.prototype.AlwaysAppearOpen = undefined;

  /**
   * True if the store accepts pre-orders
   * @member {Boolean} PreOrderEnabled
   */
  exports.prototype.PreOrderEnabled = undefined;

  /**
   * True if the store accepts take-out orders
   * @member {Boolean} TakeOutEnabled
   */
  exports.prototype.TakeOutEnabled = undefined;

  /**
   * True if the store has table service
   * @member {Boolean} TableServiceEnabled
   */
  exports.prototype.TableServiceEnabled = undefined;

  /**
   * True if the store accepts dine-in orders
   * @member {Boolean} DineInEnabled
   */
  exports.prototype.DineInEnabled = undefined;

  /**
   * True if both pre-orders and talbe service can be enabled
   * @member {Boolean} AllowPreOrdersAndTableService
   */
  exports.prototype.AllowPreOrdersAndTableService = undefined;

  /**
   * True if the store accepts pickup orders
   * @member {Boolean} PickupEnabled
   */
  exports.prototype.PickupEnabled = undefined;

  /**
   * True if the store accepts delivery orders
   * @member {Boolean} DeliveryEnabled
   */
  exports.prototype.DeliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for delivery orders
   * @member {Boolean} CardOrderDeliveryEnabled
   */
  exports.prototype.CardOrderDeliveryEnabled = undefined;

  /**
   * True if the store accepts cash payment for delivery orders
   * @member {Boolean} CashOrdersDeliveryEnabled
   */
  exports.prototype.CashOrdersDeliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for pickup orders
   * @member {Boolean} CardOrdersPickupEnabled
   */
  exports.prototype.CardOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts cash payment for pickup orders
   * @member {Boolean} CashOrdersPickupEnabled
   */
  exports.prototype.CashOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts tips
   * @member {Boolean} TipsEnabled
   */
  exports.prototype.TipsEnabled = undefined;

  /**
   * True if the stores orders are automatically accepted in Flipdish
   * @member {Boolean} AutomaticallyAcceptOrders
   */
  exports.prototype.AutomaticallyAcceptOrders = undefined;

  /**
   * True if the store is open for delivery
   * @member {Boolean} OpenForDelivery
   */
  exports.prototype.OpenForDelivery = undefined;

  /**
   * True if the store is open for pickup
   * @member {Boolean} OpenForPickup
   */
  exports.prototype.OpenForPickup = undefined;

  /**
   * Minimum pickup order amount
   * @member {Number} MinimumPickupOrderAmount
   */
  exports.prototype.MinimumPickupOrderAmount = undefined;

  /**
   * True if customer name required for pickup orders
   * @member {Boolean} RequireCustomerNameForPickup
   */
  exports.prototype.RequireCustomerNameForPickup = undefined;

  /**
   * Mask your customers phone numbers printed on receipts and reduce the amout of personally identifiable customer information that is exposed.
   * @member {Boolean} GdprCustomerPhoneNumbers
   */
  exports.prototype.GdprCustomerPhoneNumbers = undefined;

  /**
   * True if customer name required for delivery orders
   * @member {Boolean} RequireCustomerNameForDelivery
   */
  exports.prototype.RequireCustomerNameForDelivery = undefined;

  /**
   * True if the customer is allowed enter custom notes with their orders
   * @member {Boolean} AllowChefNotes
   */
  exports.prototype.AllowChefNotes = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will be ready for collection
   * @member {Boolean} EtaInPickupConfirmationSmsEnabled
   */
  exports.prototype.EtaInPickupConfirmationSmsEnabled = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will delivered
   * @member {Boolean} EtaInDeliveryConfirmationSmsEnabled
   */
  exports.prototype.EtaInDeliveryConfirmationSmsEnabled = undefined;

  /**
   * Is the Store Archived
   * @member {Boolean} IsArchived
   */
  exports.prototype.IsArchived = undefined;

  /**
   * Is the Store Published
   * @member {Boolean} IsPublished
   */
  exports.prototype.IsPublished = undefined;

  /**
   * Name
   * @member {String} Name
   */
  exports.prototype.Name = undefined;

  /**
   * Email address (visible to customers)
   * @member {String} EmailAddress
   */
  exports.prototype.EmailAddress = undefined;

  /**
   * Staff Language (used for communication with the staff)  Emails, Printouts etc
   * @member {String} StaffLanguage
   */
  exports.prototype.StaffLanguage = undefined;



  /**
   * Allowed values for the <code>PrintoutLayoutType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PrintoutLayoutTypeEnum = {
    /**
     * value: "Default"
     * @const
     */
    _Default: "Default",

    /**
     * value: "Centra"
     * @const
     */
    Centra: "Centra",

    /**
     * value: "SmallChefNotes"
     * @const
     */
    SmallChefNotes: "SmallChefNotes",

    /**
     * value: "SmallChefNotesAndCentra"
     * @const
     */
    SmallChefNotesAndCentra: "SmallChefNotesAndCentra"
  };


  /**
   * Allowed values for the <code>Currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "EUR"
     * @const
     */
    EUR: "EUR",

    /**
     * value: "USD"
     * @const
     */
    USD: "USD",

    /**
     * value: "GBP"
     * @const
     */
    GBP: "GBP",

    /**
     * value: "CAD"
     * @const
     */
    CAD: "CAD",

    /**
     * value: "AUD"
     * @const
     */
    AUD: "AUD",

    /**
     * value: "DJF"
     * @const
     */
    DJF: "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    ZAR: "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    ETB: "ETB",

    /**
     * value: "AED"
     * @const
     */
    AED: "AED",

    /**
     * value: "BHD"
     * @const
     */
    BHD: "BHD",

    /**
     * value: "DZD"
     * @const
     */
    DZD: "DZD",

    /**
     * value: "EGP"
     * @const
     */
    EGP: "EGP",

    /**
     * value: "IQD"
     * @const
     */
    IQD: "IQD",

    /**
     * value: "JOD"
     * @const
     */
    JOD: "JOD",

    /**
     * value: "KWD"
     * @const
     */
    KWD: "KWD",

    /**
     * value: "LBP"
     * @const
     */
    LBP: "LBP",

    /**
     * value: "LYD"
     * @const
     */
    LYD: "LYD",

    /**
     * value: "MAD"
     * @const
     */
    MAD: "MAD",

    /**
     * value: "OMR"
     * @const
     */
    OMR: "OMR",

    /**
     * value: "QAR"
     * @const
     */
    QAR: "QAR",

    /**
     * value: "SAR"
     * @const
     */
    SAR: "SAR",

    /**
     * value: "SYP"
     * @const
     */
    SYP: "SYP",

    /**
     * value: "TND"
     * @const
     */
    TND: "TND",

    /**
     * value: "YER"
     * @const
     */
    YER: "YER",

    /**
     * value: "CLP"
     * @const
     */
    CLP: "CLP",

    /**
     * value: "INR"
     * @const
     */
    INR: "INR",

    /**
     * value: "AZN"
     * @const
     */
    AZN: "AZN",

    /**
     * value: "RUB"
     * @const
     */
    RUB: "RUB",

    /**
     * value: "BYN"
     * @const
     */
    BYN: "BYN",

    /**
     * value: "BGN"
     * @const
     */
    BGN: "BGN",

    /**
     * value: "NGN"
     * @const
     */
    NGN: "NGN",

    /**
     * value: "BDT"
     * @const
     */
    BDT: "BDT",

    /**
     * value: "CNY"
     * @const
     */
    CNY: "CNY",

    /**
     * value: "BAM"
     * @const
     */
    BAM: "BAM",

    /**
     * value: "CZK"
     * @const
     */
    CZK: "CZK",

    /**
     * value: "DKK"
     * @const
     */
    DKK: "DKK",

    /**
     * value: "CHF"
     * @const
     */
    CHF: "CHF",

    /**
     * value: "MVR"
     * @const
     */
    MVR: "MVR",

    /**
     * value: "BTN"
     * @const
     */
    BTN: "BTN",

    /**
     * value: "XCD"
     * @const
     */
    XCD: "XCD",

    /**
     * value: "BZD"
     * @const
     */
    BZD: "BZD",

    /**
     * value: "HKD"
     * @const
     */
    HKD: "HKD",

    /**
     * value: "IDR"
     * @const
     */
    IDR: "IDR",

    /**
     * value: "JMD"
     * @const
     */
    JMD: "JMD",

    /**
     * value: "MYR"
     * @const
     */
    MYR: "MYR",

    /**
     * value: "NZD"
     * @const
     */
    NZD: "NZD",

    /**
     * value: "PHP"
     * @const
     */
    PHP: "PHP",

    /**
     * value: "SGD"
     * @const
     */
    SGD: "SGD",

    /**
     * value: "TTD"
     * @const
     */
    TTD: "TTD",

    /**
     * value: "XDR"
     * @const
     */
    XDR: "XDR",

    /**
     * value: "ARS"
     * @const
     */
    ARS: "ARS",

    /**
     * value: "BOB"
     * @const
     */
    BOB: "BOB",

    /**
     * value: "COP"
     * @const
     */
    COP: "COP",

    /**
     * value: "CRC"
     * @const
     */
    CRC: "CRC",

    /**
     * value: "CUP"
     * @const
     */
    CUP: "CUP",

    /**
     * value: "DOP"
     * @const
     */
    DOP: "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    GTQ: "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    HNL: "HNL",

    /**
     * value: "MXN"
     * @const
     */
    MXN: "MXN",

    /**
     * value: "NIO"
     * @const
     */
    NIO: "NIO",

    /**
     * value: "PAB"
     * @const
     */
    PAB: "PAB",

    /**
     * value: "PEN"
     * @const
     */
    PEN: "PEN",

    /**
     * value: "PYG"
     * @const
     */
    PYG: "PYG",

    /**
     * value: "UYU"
     * @const
     */
    UYU: "UYU",

    /**
     * value: "VEF"
     * @const
     */
    VEF: "VEF",

    /**
     * value: "IRR"
     * @const
     */
    IRR: "IRR",

    /**
     * value: "XOF"
     * @const
     */
    XOF: "XOF",

    /**
     * value: "CDF"
     * @const
     */
    CDF: "CDF",

    /**
     * value: "XAF"
     * @const
     */
    XAF: "XAF",

    /**
     * value: "HTG"
     * @const
     */
    HTG: "HTG",

    /**
     * value: "ILS"
     * @const
     */
    ILS: "ILS",

    /**
     * value: "HRK"
     * @const
     */
    HRK: "HRK",

    /**
     * value: "HUF"
     * @const
     */
    HUF: "HUF",

    /**
     * value: "AMD"
     * @const
     */
    AMD: "AMD",

    /**
     * value: "ISK"
     * @const
     */
    ISK: "ISK",

    /**
     * value: "JPY"
     * @const
     */
    JPY: "JPY",

    /**
     * value: "GEL"
     * @const
     */
    GEL: "GEL",

    /**
     * value: "KZT"
     * @const
     */
    KZT: "KZT",

    /**
     * value: "KHR"
     * @const
     */
    KHR: "KHR",

    /**
     * value: "KRW"
     * @const
     */
    KRW: "KRW",

    /**
     * value: "KGS"
     * @const
     */
    KGS: "KGS",

    /**
     * value: "LAK"
     * @const
     */
    LAK: "LAK",

    /**
     * value: "MKD"
     * @const
     */
    MKD: "MKD",

    /**
     * value: "MNT"
     * @const
     */
    MNT: "MNT",

    /**
     * value: "BND"
     * @const
     */
    BND: "BND",

    /**
     * value: "MMK"
     * @const
     */
    MMK: "MMK",

    /**
     * value: "NOK"
     * @const
     */
    NOK: "NOK",

    /**
     * value: "NPR"
     * @const
     */
    NPR: "NPR",

    /**
     * value: "PKR"
     * @const
     */
    PKR: "PKR",

    /**
     * value: "PLN"
     * @const
     */
    PLN: "PLN",

    /**
     * value: "AFN"
     * @const
     */
    AFN: "AFN",

    /**
     * value: "BRL"
     * @const
     */
    BRL: "BRL",

    /**
     * value: "MDL"
     * @const
     */
    MDL: "MDL",

    /**
     * value: "RON"
     * @const
     */
    RON: "RON",

    /**
     * value: "RWF"
     * @const
     */
    RWF: "RWF",

    /**
     * value: "SEK"
     * @const
     */
    SEK: "SEK",

    /**
     * value: "LKR"
     * @const
     */
    LKR: "LKR",

    /**
     * value: "SOS"
     * @const
     */
    SOS: "SOS",

    /**
     * value: "ALL"
     * @const
     */
    ALL: "ALL",

    /**
     * value: "RSD"
     * @const
     */
    RSD: "RSD",

    /**
     * value: "KES"
     * @const
     */
    KES: "KES",

    /**
     * value: "TJS"
     * @const
     */
    TJS: "TJS",

    /**
     * value: "THB"
     * @const
     */
    THB: "THB",

    /**
     * value: "ERN"
     * @const
     */
    ERN: "ERN",

    /**
     * value: "TMT"
     * @const
     */
    TMT: "TMT",

    /**
     * value: "BWP"
     * @const
     */
    BWP: "BWP",

    /**
     * value: "TRY"
     * @const
     */
    TRY: "TRY",

    /**
     * value: "UAH"
     * @const
     */
    UAH: "UAH",

    /**
     * value: "UZS"
     * @const
     */
    UZS: "UZS",

    /**
     * value: "VND"
     * @const
     */
    VND: "VND",

    /**
     * value: "MOP"
     * @const
     */
    MOP: "MOP",

    /**
     * value: "TWD"
     * @const
     */
    TWD: "TWD",

    /**
     * value: "BMD"
     * @const
     */
    BMD: "BMD"
  };

  return exports;

}));
