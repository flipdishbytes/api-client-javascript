/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceDiscount from './InvoiceDiscount';
import InvoiceItem from './InvoiceItem';

/**
 * The UpcomingInvoice model module.
 * @module model/UpcomingInvoice
 * @version 1.0.0
 */
class UpcomingInvoice {
    /**
     * Constructs a new <code>UpcomingInvoice</code>.
     * @alias module:model/UpcomingInvoice
     * @param Subtotal {Number} Subtotal
     * @param AmountDue {Number} Amount due
     * @param Tax {Number} Tax
     */
    constructor(Subtotal, AmountDue, Tax) { 
        
        UpcomingInvoice.initialize(this, Subtotal, AmountDue, Tax);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, Subtotal, AmountDue, Tax) { 
        obj['Subtotal'] = Subtotal;
        obj['AmountDue'] = AmountDue;
        obj['Tax'] = Tax;
    }

    /**
     * Constructs a <code>UpcomingInvoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpcomingInvoice} obj Optional instance to populate.
     * @return {module:model/UpcomingInvoice} The populated <code>UpcomingInvoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpcomingInvoice();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('NextBillingDate')) {
                obj['NextBillingDate'] = ApiClient.convertToType(data['NextBillingDate'], 'Date');
            }
            if (data.hasOwnProperty('Subtotal')) {
                obj['Subtotal'] = ApiClient.convertToType(data['Subtotal'], 'Number');
            }
            if (data.hasOwnProperty('TotalExcludingTax')) {
                obj['TotalExcludingTax'] = ApiClient.convertToType(data['TotalExcludingTax'], 'Number');
            }
            if (data.hasOwnProperty('AmountDue')) {
                obj['AmountDue'] = ApiClient.convertToType(data['AmountDue'], 'Number');
            }
            if (data.hasOwnProperty('Tax')) {
                obj['Tax'] = ApiClient.convertToType(data['Tax'], 'Number');
            }
            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [InvoiceItem]);
            }
            if (data.hasOwnProperty('Discounts')) {
                obj['Discounts'] = ApiClient.convertToType(data['Discounts'], [InvoiceDiscount]);
            }
        }
        return obj;
    }


}

/**
 * Amount
 * @member {Number} Amount
 */
UpcomingInvoice.prototype['Amount'] = undefined;

/**
 * Next billing date
 * @member {Date} NextBillingDate
 */
UpcomingInvoice.prototype['NextBillingDate'] = undefined;

/**
 * Subtotal
 * @member {Number} Subtotal
 */
UpcomingInvoice.prototype['Subtotal'] = undefined;

/**
 * Total excluding tax
 * @member {Number} TotalExcludingTax
 */
UpcomingInvoice.prototype['TotalExcludingTax'] = undefined;

/**
 * Amount due
 * @member {Number} AmountDue
 */
UpcomingInvoice.prototype['AmountDue'] = undefined;

/**
 * Tax
 * @member {Number} Tax
 */
UpcomingInvoice.prototype['Tax'] = undefined;

/**
 * Items
 * @member {Array.<module:model/InvoiceItem>} Items
 */
UpcomingInvoice.prototype['Items'] = undefined;

/**
 * Discounts
 * @member {Array.<module:model/InvoiceDiscount>} Discounts
 */
UpcomingInvoice.prototype['Discounts'] = undefined;






export default UpcomingInvoice;

