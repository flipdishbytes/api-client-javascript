/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppInstall from './AppInstall';
import DeliveryLocation from './DeliveryLocation';
import Language from './Language';
import PaymentAccount from './PaymentAccount';
import UserMonthlyCommission from './UserMonthlyCommission';
import UserWhiteLabelInfo from './UserWhiteLabelInfo';

/**
 * The UserInfo model module.
 * @module model/UserInfo
 * @version 1.0.0
 */
class UserInfo {
    /**
     * Constructs a new <code>UserInfo</code>.
     * User information
     * @alias module:model/UserInfo
     */
    constructor() { 
        
        UserInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserInfo} obj Optional instance to populate.
     * @return {module:model/UserInfo} The populated <code>UserInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserInfo();

            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('EmailConfirmed')) {
                obj['EmailConfirmed'] = ApiClient.convertToType(data['EmailConfirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('PreventFromUsingCards')) {
                obj['PreventFromUsingCards'] = ApiClient.convertToType(data['PreventFromUsingCards'], 'Boolean');
            }
            if (data.hasOwnProperty('IsUserPhoneNumberBlocked')) {
                obj['IsUserPhoneNumberBlocked'] = ApiClient.convertToType(data['IsUserPhoneNumberBlocked'], 'Boolean');
            }
            if (data.hasOwnProperty('UserWhiteLabels')) {
                obj['UserWhiteLabels'] = ApiClient.convertToType(data['UserWhiteLabels'], [UserWhiteLabelInfo]);
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'Number');
            }
            if (data.hasOwnProperty('UserName')) {
                obj['UserName'] = ApiClient.convertToType(data['UserName'], 'String');
            }
            if (data.hasOwnProperty('CustomerName')) {
                obj['CustomerName'] = ApiClient.convertToType(data['CustomerName'], 'String');
            }
            if (data.hasOwnProperty('HasLoggedIn')) {
                obj['HasLoggedIn'] = ApiClient.convertToType(data['HasLoggedIn'], 'Boolean');
            }
            if (data.hasOwnProperty('DisableAppRatingControl')) {
                obj['DisableAppRatingControl'] = ApiClient.convertToType(data['DisableAppRatingControl'], 'Boolean');
            }
            if (data.hasOwnProperty('GloballyOptedOut')) {
                obj['GloballyOptedOut'] = ApiClient.convertToType(data['GloballyOptedOut'], 'Boolean');
            }
            if (data.hasOwnProperty('CompletedOrderCount')) {
                obj['CompletedOrderCount'] = ApiClient.convertToType(data['CompletedOrderCount'], 'Number');
            }
            if (data.hasOwnProperty('CancelledOrderCount')) {
                obj['CancelledOrderCount'] = ApiClient.convertToType(data['CancelledOrderCount'], 'Number');
            }
            if (data.hasOwnProperty('OrderTotalValue')) {
                obj['OrderTotalValue'] = ApiClient.convertToType(data['OrderTotalValue'], 'Number');
            }
            if (data.hasOwnProperty('TsMostRecentOrder')) {
                obj['TsMostRecentOrder'] = ApiClient.convertToType(data['TsMostRecentOrder'], 'Date');
            }
            if (data.hasOwnProperty('TsFirstOrder')) {
                obj['TsFirstOrder'] = ApiClient.convertToType(data['TsFirstOrder'], 'Date');
            }
            if (data.hasOwnProperty('IsRestaurantUser')) {
                obj['IsRestaurantUser'] = ApiClient.convertToType(data['IsRestaurantUser'], 'Boolean');
            }
            if (data.hasOwnProperty('Installs')) {
                obj['Installs'] = ApiClient.convertToType(data['Installs'], [AppInstall]);
            }
            if (data.hasOwnProperty('DeliveryLocations')) {
                obj['DeliveryLocations'] = ApiClient.convertToType(data['DeliveryLocations'], [DeliveryLocation]);
            }
            if (data.hasOwnProperty('PaymentAccounts')) {
                obj['PaymentAccounts'] = ApiClient.convertToType(data['PaymentAccounts'], [PaymentAccount]);
            }
            if (data.hasOwnProperty('LanguageId')) {
                obj['LanguageId'] = ApiClient.convertToType(data['LanguageId'], 'String');
            }
            if (data.hasOwnProperty('CurrentLanguageName')) {
                obj['CurrentLanguageName'] = ApiClient.convertToType(data['CurrentLanguageName'], 'String');
            }
            if (data.hasOwnProperty('Languages')) {
                obj['Languages'] = ApiClient.convertToType(data['Languages'], [Language]);
            }
            if (data.hasOwnProperty('SalesForceContactId')) {
                obj['SalesForceContactId'] = ApiClient.convertToType(data['SalesForceContactId'], 'String');
            }
            if (data.hasOwnProperty('StripeCustomerId')) {
                obj['StripeCustomerId'] = ApiClient.convertToType(data['StripeCustomerId'], 'String');
            }
            if (data.hasOwnProperty('UserMonthlyCommissions')) {
                obj['UserMonthlyCommissions'] = ApiClient.convertToType(data['UserMonthlyCommissions'], [UserMonthlyCommission]);
            }
        }
        return obj;
    }


}

/**
 * The user's phone number.
 * @member {String} PhoneNumber
 */
UserInfo.prototype['PhoneNumber'] = undefined;

/**
 * The user's email address.
 * @member {String} Email
 */
UserInfo.prototype['Email'] = undefined;

/**
 * Indicates if the user's email address has been confirmed.
 * @member {Boolean} EmailConfirmed
 */
UserInfo.prototype['EmailConfirmed'] = undefined;

/**
 * Indicates if the user is prevented from using cards.
 * @member {Boolean} PreventFromUsingCards
 */
UserInfo.prototype['PreventFromUsingCards'] = undefined;

/**
 * Indicates if the user's phone number is blocked.
 * @member {Boolean} IsUserPhoneNumberBlocked
 */
UserInfo.prototype['IsUserPhoneNumberBlocked'] = undefined;

/**
 * List of white label information associated with the user.
 * @member {Array.<module:model/UserWhiteLabelInfo>} UserWhiteLabels
 */
UserInfo.prototype['UserWhiteLabels'] = undefined;

/**
 * The unique identifier for the user.
 * @member {Number} UserId
 */
UserInfo.prototype['UserId'] = undefined;

/**
 * The user's username.
 * @member {String} UserName
 */
UserInfo.prototype['UserName'] = undefined;

/**
 * The customer's name.
 * @member {String} CustomerName
 */
UserInfo.prototype['CustomerName'] = undefined;

/**
 * Indicates if the user has logged in.
 * @member {Boolean} HasLoggedIn
 */
UserInfo.prototype['HasLoggedIn'] = undefined;

/**
 * Indicates if the app rating control is disabled for the user.
 * @member {Boolean} DisableAppRatingControl
 */
UserInfo.prototype['DisableAppRatingControl'] = undefined;

/**
 * Indicates if the user has globally opted out.
 * @member {Boolean} GloballyOptedOut
 */
UserInfo.prototype['GloballyOptedOut'] = undefined;

/**
 * The number of completed orders by the user.
 * @member {Number} CompletedOrderCount
 */
UserInfo.prototype['CompletedOrderCount'] = undefined;

/**
 * The number of cancelled orders by the user.
 * @member {Number} CancelledOrderCount
 */
UserInfo.prototype['CancelledOrderCount'] = undefined;

/**
 * The total value of orders placed by the user.
 * @member {Number} OrderTotalValue
 */
UserInfo.prototype['OrderTotalValue'] = undefined;

/**
 * The timestamp of the user's most recent order.
 * @member {Date} TsMostRecentOrder
 */
UserInfo.prototype['TsMostRecentOrder'] = undefined;

/**
 * The timestamp of the user's first order.
 * @member {Date} TsFirstOrder
 */
UserInfo.prototype['TsFirstOrder'] = undefined;

/**
 * Indicates if the user is a restaurant user.
 * @member {Boolean} IsRestaurantUser
 */
UserInfo.prototype['IsRestaurantUser'] = undefined;

/**
 * List of app installs associated with the user.
 * @member {Array.<module:model/AppInstall>} Installs
 */
UserInfo.prototype['Installs'] = undefined;

/**
 * List of delivery locations associated with the user.
 * @member {Array.<module:model/DeliveryLocation>} DeliveryLocations
 */
UserInfo.prototype['DeliveryLocations'] = undefined;

/**
 * List of payment accounts associated with the user.
 * @member {Array.<module:model/PaymentAccount>} PaymentAccounts
 */
UserInfo.prototype['PaymentAccounts'] = undefined;

/**
 * The language identifier for the user.
 * @member {String} LanguageId
 */
UserInfo.prototype['LanguageId'] = undefined;

/**
 * Current language name for the user.
 * @member {String} CurrentLanguageName
 */
UserInfo.prototype['CurrentLanguageName'] = undefined;

/**
 * Available languages that the user can choose from.
 * @member {Array.<module:model/Language>} Languages
 */
UserInfo.prototype['Languages'] = undefined;

/**
 * The Salesforce contact ID for the user.
 * @member {String} SalesForceContactId
 */
UserInfo.prototype['SalesForceContactId'] = undefined;

/**
 * The Stripe customer ID for the user.
 * @member {String} StripeCustomerId
 */
UserInfo.prototype['StripeCustomerId'] = undefined;

/**
 * User's monthly commissions.
 * @member {Array.<module:model/UserMonthlyCommission>} UserMonthlyCommissions
 */
UserInfo.prototype['UserMonthlyCommissions'] = undefined;






export default UserInfo;

