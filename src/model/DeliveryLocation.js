/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Coordinates from './Coordinates';

/**
 * The DeliveryLocation model module.
 * @module model/DeliveryLocation
 * @version 1.0.0
 */
class DeliveryLocation {
    /**
     * Constructs a new <code>DeliveryLocation</code>.
     * Delivery location
     * @alias module:model/DeliveryLocation
     */
    constructor() { 
        
        DeliveryLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryLocation} obj Optional instance to populate.
     * @return {module:model/DeliveryLocation} The populated <code>DeliveryLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryLocation();

            if (data.hasOwnProperty('Coordinates')) {
                obj['Coordinates'] = Coordinates.constructFromObject(data['Coordinates']);
            }
            if (data.hasOwnProperty('Building')) {
                obj['Building'] = ApiClient.convertToType(data['Building'], 'String');
            }
            if (data.hasOwnProperty('Street')) {
                obj['Street'] = ApiClient.convertToType(data['Street'], 'String');
            }
            if (data.hasOwnProperty('Town')) {
                obj['Town'] = ApiClient.convertToType(data['Town'], 'String');
            }
            if (data.hasOwnProperty('PostCode')) {
                obj['PostCode'] = ApiClient.convertToType(data['PostCode'], 'String');
            }
            if (data.hasOwnProperty('DeliveryInstructions')) {
                obj['DeliveryInstructions'] = ApiClient.convertToType(data['DeliveryInstructions'], 'String');
            }
            if (data.hasOwnProperty('PrettyAddressString')) {
                obj['PrettyAddressString'] = ApiClient.convertToType(data['PrettyAddressString'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Coordinates} Coordinates
 */
DeliveryLocation.prototype['Coordinates'] = undefined;

/**
 * Building
 * @member {String} Building
 */
DeliveryLocation.prototype['Building'] = undefined;

/**
 * Street
 * @member {String} Street
 */
DeliveryLocation.prototype['Street'] = undefined;

/**
 * Town
 * @member {String} Town
 */
DeliveryLocation.prototype['Town'] = undefined;

/**
 * Post code
 * @member {String} PostCode
 */
DeliveryLocation.prototype['PostCode'] = undefined;

/**
 * Delivery instructions
 * @member {String} DeliveryInstructions
 */
DeliveryLocation.prototype['DeliveryInstructions'] = undefined;

/**
 * Formatted, pretty address string
 * @member {String} PrettyAddressString
 */
DeliveryLocation.prototype['PrettyAddressString'] = undefined;






export default DeliveryLocation;

