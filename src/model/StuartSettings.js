/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/StuartSettingsTransportPrices'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./StuartSettingsTransportPrices'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.StuartSettings = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.StuartSettingsTransportPrices);
  }
}(this, function(ApiClient, StuartSettingsTransportPrices) {
  'use strict';

  /**
   * The StuartSettings model module.
   * @module model/StuartSettings
   * @version v1.0
   */

  /**
   * Constructs a new <code>StuartSettings</code>.
   * Stuart settings
   * @alias module:model/StuartSettings
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>StuartSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StuartSettings} obj Optional instance to populate.
   * @return {module:model/StuartSettings} The populated <code>StuartSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('ClientId'))
        obj.clientId = ApiClient.convertToType(data['ClientId'], 'String');
      if (data.hasOwnProperty('ClientSecret'))
        obj.clientSecret = ApiClient.convertToType(data['ClientSecret'], 'String');
      if (data.hasOwnProperty('Enabled'))
        obj.enabled = ApiClient.convertToType(data['Enabled'], 'Boolean');
      if (data.hasOwnProperty('WebhookUrlBasicAuthentication'))
        obj.webhookUrlBasicAuthentication = ApiClient.convertToType(data['WebhookUrlBasicAuthentication'], 'String');
      if (data.hasOwnProperty('MinutesToPickupBeforeThanDeliveryTime'))
        obj.minutesToPickupBeforeThanDeliveryTime = ApiClient.convertToType(data['MinutesToPickupBeforeThanDeliveryTime'], 'Number');
      if (data.hasOwnProperty('PackageType'))
        obj.packageType = ApiClient.convertToType(data['PackageType'], 'String');
      if (data.hasOwnProperty('TransportType'))
        obj.transportType = ApiClient.convertToType(data['TransportType'], 'String');
      if (data.hasOwnProperty('CancelOrderIfStuartCancelDelivery'))
        obj.cancelOrderIfStuartCancelDelivery = ApiClient.convertToType(data['CancelOrderIfStuartCancelDelivery'], 'Boolean');
      if (data.hasOwnProperty('TransportPrices'))
        obj.transportPrices = StuartSettingsTransportPrices.constructFromObject(data['TransportPrices']);
    }
    return obj;
  }

  /**
   * Client Id
   * @member {String} clientId
   */
  exports.prototype.clientId = undefined;

  /**
   * Client Secret
   * @member {String} clientSecret
   */
  exports.prototype.clientSecret = undefined;

  /**
   * Enabled
   * @member {Boolean} enabled
   */
  exports.prototype.enabled = undefined;

  /**
   * Webhook url to settle in the Stuart portal
   * @member {String} webhookUrlBasicAuthentication
   */
  exports.prototype.webhookUrlBasicAuthentication = undefined;

  /**
   * MinutesToPickupBeforeThanDeliveryTime
   * @member {Number} minutesToPickupBeforeThanDeliveryTime
   */
  exports.prototype.minutesToPickupBeforeThanDeliveryTime = undefined;

  /**
   * Package type
   * @member {module:model/StuartSettings.PackageTypeEnum} packageType
   */
  exports.prototype.packageType = undefined;

  /**
   * Transport type
   * @member {module:model/StuartSettings.TransportTypeEnum} transportType
   */
  exports.prototype.transportType = undefined;

  /**
   * Determines if Flipdish order should be cancel when Stuart cancels delivery
   * @member {Boolean} cancelOrderIfStuartCancelDelivery
   */
  exports.prototype.cancelOrderIfStuartCancelDelivery = undefined;

  /**
   * @member {module:model/StuartSettingsTransportPrices} transportPrices
   */
  exports.prototype.transportPrices = undefined;



  /**
   * Allowed values for the <code>packageType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PackageTypeEnum = {
    /**
     * value: "Xsmall"
     * @const
     */
    xsmall: "Xsmall",

    /**
     * value: "Small"
     * @const
     */
    small: "Small",

    /**
     * value: "Medium"
     * @const
     */
    medium: "Medium",

    /**
     * value: "Large"
     * @const
     */
    large: "Large",

    /**
     * value: "Xlarge"
     * @const
     */
    xlarge: "Xlarge"
  };


  /**
   * Allowed values for the <code>transportType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TransportTypeEnum = {
    /**
     * value: "Bike"
     * @const
     */
    bike: "Bike",

    /**
     * value: "Cargobike"
     * @const
     */
    cargobike: "Cargobike",

    /**
     * value: "Cargobikexl"
     * @const
     */
    cargobikexl: "Cargobikexl",

    /**
     * value: "Motorbike"
     * @const
     */
    motorbike: "Motorbike",

    /**
     * value: "Motorbikexl"
     * @const
     */
    motorbikexl: "Motorbikexl",

    /**
     * value: "Car"
     * @const
     */
    car: "Car",

    /**
     * value: "Van"
     * @const
     */
    van: "Van"
  };

  return exports;

}));
