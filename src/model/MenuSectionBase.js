/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MenuSectionBase model module.
 * @module model/MenuSectionBase
 * @version 1.0.0
 */
class MenuSectionBase {
    /**
     * Constructs a new <code>MenuSectionBase</code>.
     * Menu section
     * @alias module:model/MenuSectionBase
     */
    constructor() { 
        
        MenuSectionBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MenuSectionBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MenuSectionBase} obj Optional instance to populate.
     * @return {module:model/MenuSectionBase} The populated <code>MenuSectionBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MenuSectionBase();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DisplayOrder')) {
                obj['DisplayOrder'] = ApiClient.convertToType(data['DisplayOrder'], 'Number');
            }
            if (data.hasOwnProperty('IsAvailable')) {
                obj['IsAvailable'] = ApiClient.convertToType(data['IsAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('IsHiddenFromCustomers')) {
                obj['IsHiddenFromCustomers'] = ApiClient.convertToType(data['IsHiddenFromCustomers'], 'Boolean');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('MenuSectionId')) {
                obj['MenuSectionId'] = ApiClient.convertToType(data['MenuSectionId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Name
 * @member {String} Name
 */
MenuSectionBase.prototype['Name'] = undefined;

/**
 * Description
 * @member {String} Description
 */
MenuSectionBase.prototype['Description'] = undefined;

/**
 * Display order
 * @member {Number} DisplayOrder
 */
MenuSectionBase.prototype['DisplayOrder'] = undefined;

/**
 * Is available
 * @member {Boolean} IsAvailable
 */
MenuSectionBase.prototype['IsAvailable'] = undefined;

/**
 * Is hidden from customer. Perhaps when the item is out of stock.
 * @member {Boolean} IsHiddenFromCustomers
 */
MenuSectionBase.prototype['IsHiddenFromCustomers'] = undefined;

/**
 * Image url
 * @member {String} ImageUrl
 */
MenuSectionBase.prototype['ImageUrl'] = undefined;

/**
 * Menu Section Id
 * @member {Number} MenuSectionId
 */
MenuSectionBase.prototype['MenuSectionId'] = undefined;






export default MenuSectionBase;

