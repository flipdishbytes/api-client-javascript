/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.KioskTerminalActionStateChangedEvent = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The KioskTerminalActionStateChangedEvent model module.
   * @module model/KioskTerminalActionStateChangedEvent
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>KioskTerminalActionStateChangedEvent</code>.
   * Kiosk Terminal action state changed
   * @alias module:model/KioskTerminalActionStateChangedEvent
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>KioskTerminalActionStateChangedEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/KioskTerminalActionStateChangedEvent} obj Optional instance to populate.
   * @return {module:model/KioskTerminalActionStateChangedEvent} The populated <code>KioskTerminalActionStateChangedEvent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('ReaderId'))
        obj.ReaderId = ApiClient.convertToType(data['ReaderId'], 'String');
      if (data.hasOwnProperty('BluetoothTerminalType'))
        obj.BluetoothTerminalType = ApiClient.convertToType(data['BluetoothTerminalType'], 'String');
      if (data.hasOwnProperty('ActionState'))
        obj.ActionState = ApiClient.convertToType(data['ActionState'], 'String');
      if (data.hasOwnProperty('FailureCode'))
        obj.FailureCode = ApiClient.convertToType(data['FailureCode'], 'String');
      if (data.hasOwnProperty('EventName'))
        obj.EventName = ApiClient.convertToType(data['EventName'], 'String');
      if (data.hasOwnProperty('FlipdishEventId'))
        obj.FlipdishEventId = ApiClient.convertToType(data['FlipdishEventId'], 'String');
      if (data.hasOwnProperty('CreateTime'))
        obj.CreateTime = ApiClient.convertToType(data['CreateTime'], 'Date');
      if (data.hasOwnProperty('Position'))
        obj.Position = ApiClient.convertToType(data['Position'], 'Number');
      if (data.hasOwnProperty('AppId'))
        obj.AppId = ApiClient.convertToType(data['AppId'], 'String');
      if (data.hasOwnProperty('IpAddress'))
        obj.IpAddress = ApiClient.convertToType(data['IpAddress'], 'String');
    }
    return obj;
  }

  /**
   * Card reader id
   * @member {String} ReaderId
   */
  exports.prototype.ReaderId = undefined;

  /**
   * Terminal type
   * @member {module:model/KioskTerminalActionStateChangedEvent.BluetoothTerminalTypeEnum} BluetoothTerminalType
   */
  exports.prototype.BluetoothTerminalType = undefined;

  /**
   * Action state. success or fail
   * @member {String} ActionState
   */
  exports.prototype.ActionState = undefined;

  /**
   * Failure code if processing is failed
   * @member {String} FailureCode
   */
  exports.prototype.FailureCode = undefined;

  /**
   * The event name
   * @member {String} EventName
   */
  exports.prototype.EventName = undefined;

  /**
   * The identitfier of the event
   * @member {String} FlipdishEventId
   */
  exports.prototype.FlipdishEventId = undefined;

  /**
   * The time of creation of the event
   * @member {Date} CreateTime
   */
  exports.prototype.CreateTime = undefined;

  /**
   * Position
   * @member {Number} Position
   */
  exports.prototype.Position = undefined;

  /**
   * App id
   * @member {String} AppId
   */
  exports.prototype.AppId = undefined;

  /**
   * Ip Address
   * @member {String} IpAddress
   */
  exports.prototype.IpAddress = undefined;



  /**
   * Allowed values for the <code>BluetoothTerminalType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BluetoothTerminalTypeEnum = {
    /**
     * value: "CHIPPER_2X"
     * @const
     */
    CHIPPER_2X: "CHIPPER_2X",

    /**
     * value: "COTS_DEVICE"
     * @const
     */
    COTS_DEVICE: "COTS_DEVICE",

    /**
     * value: "VERIFONE_P400"
     * @const
     */
    VERIFONE_P400: "VERIFONE_P400",

    /**
     * value: "WISEPAD_3"
     * @const
     */
    WISEPAD_3: "WISEPAD_3",

    /**
     * value: "WISEPOS_E"
     * @const
     */
    WISEPOS_E: "WISEPOS_E"
  };

  return exports;

}));
