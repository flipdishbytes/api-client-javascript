/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogItem from './CatalogItem';
import UserEventInfo from './UserEventInfo';

/**
 * The CatalogItemUpdatedEvent model module.
 * @module model/CatalogItemUpdatedEvent
 * @version 1.0.0
 */
class CatalogItemUpdatedEvent {
    /**
     * Constructs a new <code>CatalogItemUpdatedEvent</code>.
     * 
     * @alias module:model/CatalogItemUpdatedEvent
     */
    constructor() { 
        
        CatalogItemUpdatedEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogItemUpdatedEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogItemUpdatedEvent} obj Optional instance to populate.
     * @return {module:model/CatalogItemUpdatedEvent} The populated <code>CatalogItemUpdatedEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogItemUpdatedEvent();

            if (data.hasOwnProperty('EventName')) {
                obj['EventName'] = ApiClient.convertToType(data['EventName'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('User')) {
                obj['User'] = UserEventInfo.constructFromObject(data['User']);
            }
            if (data.hasOwnProperty('CatalogItem')) {
                obj['CatalogItem'] = CatalogItem.constructFromObject(data['CatalogItem']);
            }
            if (data.hasOwnProperty('FlipdishEventId')) {
                obj['FlipdishEventId'] = ApiClient.convertToType(data['FlipdishEventId'], 'String');
            }
            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Date');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'Number');
            }
            if (data.hasOwnProperty('AppId')) {
                obj['AppId'] = ApiClient.convertToType(data['AppId'], 'String');
            }
            if (data.hasOwnProperty('OrgId')) {
                obj['OrgId'] = ApiClient.convertToType(data['OrgId'], 'String');
            }
            if (data.hasOwnProperty('IpAddress')) {
                obj['IpAddress'] = ApiClient.convertToType(data['IpAddress'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The event name
 * @member {String} EventName
 */
CatalogItemUpdatedEvent.prototype['EventName'] = undefined;

/**
 * Description
 * @member {String} Description
 */
CatalogItemUpdatedEvent.prototype['Description'] = undefined;

/**
 * @member {module:model/UserEventInfo} User
 */
CatalogItemUpdatedEvent.prototype['User'] = undefined;

/**
 * @member {module:model/CatalogItem} CatalogItem
 */
CatalogItemUpdatedEvent.prototype['CatalogItem'] = undefined;

/**
 * The identitfier of the event
 * @member {String} FlipdishEventId
 */
CatalogItemUpdatedEvent.prototype['FlipdishEventId'] = undefined;

/**
 * The time of creation of the event
 * @member {Date} CreateTime
 */
CatalogItemUpdatedEvent.prototype['CreateTime'] = undefined;

/**
 * Position
 * @member {Number} Position
 */
CatalogItemUpdatedEvent.prototype['Position'] = undefined;

/**
 * App id
 * @member {String} AppId
 */
CatalogItemUpdatedEvent.prototype['AppId'] = undefined;

/**
 * Org id
 * @member {String} OrgId
 */
CatalogItemUpdatedEvent.prototype['OrgId'] = undefined;

/**
 * Ip Address
 * @member {String} IpAddress
 */
CatalogItemUpdatedEvent.prototype['IpAddress'] = undefined;






export default CatalogItemUpdatedEvent;

