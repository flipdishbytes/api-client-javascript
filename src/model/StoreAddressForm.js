/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StoreAddressForm model module.
 * @module model/StoreAddressForm
 * @version 1.0.0
 */
class StoreAddressForm {
    /**
     * Constructs a new <code>StoreAddressForm</code>.
     * Address form payload.
     * @alias module:model/StoreAddressForm
     * @param AddressFields {Object.<String, Object>} The dynamic fields generated by the address form.
     * @param CountryCode {String} ISO 2 letters code for the country, should be the same as the form that generates the fields.
     */
    constructor(AddressFields, CountryCode) { 
        
        StoreAddressForm.initialize(this, AddressFields, CountryCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, AddressFields, CountryCode) { 
        obj['AddressFields'] = AddressFields;
        obj['CountryCode'] = CountryCode;
    }

    /**
     * Constructs a <code>StoreAddressForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreAddressForm} obj Optional instance to populate.
     * @return {module:model/StoreAddressForm} The populated <code>StoreAddressForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreAddressForm();

            if (data.hasOwnProperty('AddressFields')) {
                obj['AddressFields'] = ApiClient.convertToType(data['AddressFields'], {'String': Object});
            }
            if (data.hasOwnProperty('CountryCode')) {
                obj['CountryCode'] = ApiClient.convertToType(data['CountryCode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The dynamic fields generated by the address form.
 * @member {Object.<String, Object>} AddressFields
 */
StoreAddressForm.prototype['AddressFields'] = undefined;

/**
 * ISO 2 letters code for the country, should be the same as the form that generates the fields.
 * @member {String} CountryCode
 */
StoreAddressForm.prototype['CountryCode'] = undefined;






export default StoreAddressForm;

