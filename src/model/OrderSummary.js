/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.OrderSummary = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The OrderSummary model module.
   * @module model/OrderSummary
   * @version v1.0
   */

  /**
   * Constructs a new <code>OrderSummary</code>.
   * Order summary
   * @alias module:model/OrderSummary
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>OrderSummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderSummary} obj Optional instance to populate.
   * @return {module:model/OrderSummary} The populated <code>OrderSummary</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('OrderId'))
        obj.orderId = ApiClient.convertToType(data['OrderId'], 'Number');
      if (data.hasOwnProperty('DeliveryType'))
        obj.deliveryType = ApiClient.convertToType(data['DeliveryType'], 'String');
      if (data.hasOwnProperty('PickupLocationType'))
        obj.pickupLocationType = ApiClient.convertToType(data['PickupLocationType'], 'String');
      if (data.hasOwnProperty('TableServiceCatagory'))
        obj.tableServiceCatagory = ApiClient.convertToType(data['TableServiceCatagory'], 'String');
      if (data.hasOwnProperty('OrderState'))
        obj.orderState = ApiClient.convertToType(data['OrderState'], 'String');
      if (data.hasOwnProperty('RequestedForTime'))
        obj.requestedForTime = ApiClient.convertToType(data['RequestedForTime'], 'Date');
      if (data.hasOwnProperty('StoreName'))
        obj.storeName = ApiClient.convertToType(data['StoreName'], 'String');
      if (data.hasOwnProperty('StoreIanaTimeZone'))
        obj.storeIanaTimeZone = ApiClient.convertToType(data['StoreIanaTimeZone'], 'String');
      if (data.hasOwnProperty('CustomerName'))
        obj.customerName = ApiClient.convertToType(data['CustomerName'], 'String');
      if (data.hasOwnProperty('CustomerPhoneNumber'))
        obj.customerPhoneNumber = ApiClient.convertToType(data['CustomerPhoneNumber'], 'String');
      if (data.hasOwnProperty('Amount'))
        obj.amount = ApiClient.convertToType(data['Amount'], 'Number');
      if (data.hasOwnProperty('RefundedAmount'))
        obj.refundedAmount = ApiClient.convertToType(data['RefundedAmount'], 'Number');
      if (data.hasOwnProperty('PaymentAccountType'))
        obj.paymentAccountType = ApiClient.convertToType(data['PaymentAccountType'], 'String');
      if (data.hasOwnProperty('PaymentStatus'))
        obj.paymentStatus = ApiClient.convertToType(data['PaymentStatus'], 'String');
      if (data.hasOwnProperty('Currency'))
        obj.currency = ApiClient.convertToType(data['Currency'], 'String');
      if (data.hasOwnProperty('AppType'))
        obj.appType = ApiClient.convertToType(data['AppType'], 'String');
      if (data.hasOwnProperty('LocalOrderId'))
        obj.localOrderId = ApiClient.convertToType(data['LocalOrderId'], 'String');
      if (data.hasOwnProperty('DropOffLocationId'))
        obj.dropOffLocationId = ApiClient.convertToType(data['DropOffLocationId'], 'Number');
      if (data.hasOwnProperty('DropOffLocation'))
        obj.dropOffLocation = ApiClient.convertToType(data['DropOffLocation'], 'String');
      if (data.hasOwnProperty('AcceptedFor'))
        obj.acceptedFor = ApiClient.convertToType(data['AcceptedFor'], 'Date');
      if (data.hasOwnProperty('InFraudZone'))
        obj.inFraudZone = ApiClient.convertToType(data['InFraudZone'], 'Boolean');
      if (data.hasOwnProperty('UnusualHighValueOrder'))
        obj.unusualHighValueOrder = ApiClient.convertToType(data['UnusualHighValueOrder'], 'Boolean');
    }
    return obj;
  }

  /**
   * Order identifier
   * @member {Number} orderId
   */
  exports.prototype.orderId = undefined;

  /**
   * Delivery type
   * @member {module:model/OrderSummary.DeliveryTypeEnum} deliveryType
   */
  exports.prototype.deliveryType = undefined;

  /**
   * Pickup location type
   * @member {module:model/OrderSummary.PickupLocationTypeEnum} pickupLocationType
   */
  exports.prototype.pickupLocationType = undefined;

  /**
   * Table service category
   * @member {module:model/OrderSummary.TableServiceCatagoryEnum} tableServiceCatagory
   */
  exports.prototype.tableServiceCatagory = undefined;

  /**
   * Order state
   * @member {module:model/OrderSummary.OrderStateEnum} orderState
   */
  exports.prototype.orderState = undefined;

  /**
   * Order requested for
   * @member {Date} requestedForTime
   */
  exports.prototype.requestedForTime = undefined;

  /**
   * Name of the store
   * @member {String} storeName
   */
  exports.prototype.storeName = undefined;

  /**
   * Store IANA time zone
   * @member {String} storeIanaTimeZone
   */
  exports.prototype.storeIanaTimeZone = undefined;

  /**
   * Name of the customer
   * @member {String} customerName
   */
  exports.prototype.customerName = undefined;

  /**
   * Phone number of customer
   * @member {String} customerPhoneNumber
   */
  exports.prototype.customerPhoneNumber = undefined;

  /**
   * This is the sum of the OrderItemsAmount, DeliveryAmount, TipAmount and Voucher.Amount (which is usually negative) and OnlineOrderingFee  It does include the OnlineOrderingFee
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * Refunded amount
   * @member {Number} refundedAmount
   */
  exports.prototype.refundedAmount = undefined;

  /**
   * Payment Account
   * @member {module:model/OrderSummary.PaymentAccountTypeEnum} paymentAccountType
   */
  exports.prototype.paymentAccountType = undefined;

  /**
   * Status of the payment
   * @member {module:model/OrderSummary.PaymentStatusEnum} paymentStatus
   */
  exports.prototype.paymentStatus = undefined;

  /**
   * Currency of payment
   * @member {module:model/OrderSummary.CurrencyEnum} currency
   */
  exports.prototype.currency = undefined;

  /**
   * Type of app end user is on
   * @member {module:model/OrderSummary.AppTypeEnum} appType
   */
  exports.prototype.appType = undefined;

  /**
   * Local order Id. This is used for displaying a \"shorter\" order ID for customers (eg. Kiosk orders)
   * @member {String} localOrderId
   */
  exports.prototype.localOrderId = undefined;

  /**
   * id of the collection/drop off location
   * @member {Number} dropOffLocationId
   */
  exports.prototype.dropOffLocationId = undefined;

  /**
   * Represents table service drop off location
   * @member {String} dropOffLocation
   */
  exports.prototype.dropOffLocation = undefined;

  /**
   * Time store has accepted the order for
   * @member {Date} acceptedFor
   */
  exports.prototype.acceptedFor = undefined;

  /**
   * Was order made within a fraud zone
   * @member {Boolean} inFraudZone
   */
  exports.prototype.inFraudZone = undefined;

  /**
   * Is order of unusually high value
   * @member {Boolean} unusualHighValueOrder
   */
  exports.prototype.unusualHighValueOrder = undefined;



  /**
   * Allowed values for the <code>deliveryType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeliveryTypeEnum = {
    /**
     * value: "Delivery"
     * @const
     */
    delivery: "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    pickup: "Pickup"
  };


  /**
   * Allowed values for the <code>pickupLocationType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PickupLocationTypeEnum = {
    /**
     * value: "TakeOut"
     * @const
     */
    takeOut: "TakeOut",

    /**
     * value: "TableService"
     * @const
     */
    tableService: "TableService",

    /**
     * value: "DineIn"
     * @const
     */
    dineIn: "DineIn"
  };


  /**
   * Allowed values for the <code>tableServiceCatagory</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TableServiceCatagoryEnum = {
    /**
     * value: "Generic"
     * @const
     */
    generic: "Generic",

    /**
     * value: "Villa"
     * @const
     */
    villa: "Villa",

    /**
     * value: "House"
     * @const
     */
    house: "House",

    /**
     * value: "Room"
     * @const
     */
    room: "Room",

    /**
     * value: "Area"
     * @const
     */
    area: "Area",

    /**
     * value: "Table"
     * @const
     */
    table: "Table",

    /**
     * value: "ParkingBay"
     * @const
     */
    parkingBay: "ParkingBay",

    /**
     * value: "Gate"
     * @const
     */
    gate: "Gate"
  };


  /**
   * Allowed values for the <code>orderState</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OrderStateEnum = {
    /**
     * value: "Created"
     * @const
     */
    created: "Created",

    /**
     * value: "PlacedCanBeCancelled"
     * @const
     */
    placedCanBeCancelled: "PlacedCanBeCancelled",

    /**
     * value: "ReadyToProcess"
     * @const
     */
    readyToProcess: "ReadyToProcess",

    /**
     * value: "AcceptedByRestaurant"
     * @const
     */
    acceptedByRestaurant: "AcceptedByRestaurant",

    /**
     * value: "Dispatched"
     * @const
     */
    dispatched: "Dispatched",

    /**
     * value: "Delivered"
     * @const
     */
    delivered: "Delivered",

    /**
     * value: "Cancelled"
     * @const
     */
    cancelled: "Cancelled",

    /**
     * value: "ManualReview"
     * @const
     */
    manualReview: "ManualReview",

    /**
     * value: "RejectedByStore"
     * @const
     */
    rejectedByStore: "RejectedByStore",

    /**
     * value: "RejectedByFlipdish"
     * @const
     */
    rejectedByFlipdish: "RejectedByFlipdish",

    /**
     * value: "RejectedAutomatically"
     * @const
     */
    rejectedAutomatically: "RejectedAutomatically",

    /**
     * value: "RejectedAfterBeingAccepted"
     * @const
     */
    rejectedAfterBeingAccepted: "RejectedAfterBeingAccepted",

    /**
     * value: "AcceptedAndRefunded"
     * @const
     */
    acceptedAndRefunded: "AcceptedAndRefunded"
  };


  /**
   * Allowed values for the <code>paymentAccountType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PaymentAccountTypeEnum = {
    /**
     * value: "Card"
     * @const
     */
    card: "Card",

    /**
     * value: "Cash"
     * @const
     */
    cash: "Cash",

    /**
     * value: "Ideal"
     * @const
     */
    ideal: "Ideal",

    /**
     * value: "Bancontact"
     * @const
     */
    bancontact: "Bancontact",

    /**
     * value: "Giropay"
     * @const
     */
    giropay: "Giropay",

    /**
     * value: "Eps"
     * @const
     */
    eps: "Eps",

    /**
     * value: "Emv"
     * @const
     */
    emv: "Emv",

    /**
     * value: "PayPal"
     * @const
     */
    payPal: "PayPal"
  };


  /**
   * Allowed values for the <code>paymentStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PaymentStatusEnum = {
    /**
     * value: "Paid"
     * @const
     */
    paid: "Paid",

    /**
     * value: "Unpaid"
     * @const
     */
    unpaid: "Unpaid",

    /**
     * value: "Refunded"
     * @const
     */
    refunded: "Refunded",

    /**
     * value: "PartiallyRefunded"
     * @const
     */
    partiallyRefunded: "PartiallyRefunded",

    /**
     * value: "Disputed"
     * @const
     */
    disputed: "Disputed"
  };


  /**
   * Allowed values for the <code>currency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurrencyEnum = {
    /**
     * value: "EUR"
     * @const
     */
    EUR: "EUR",

    /**
     * value: "USD"
     * @const
     */
    USD: "USD",

    /**
     * value: "GBP"
     * @const
     */
    GBP: "GBP",

    /**
     * value: "CAD"
     * @const
     */
    CAD: "CAD",

    /**
     * value: "AUD"
     * @const
     */
    AUD: "AUD",

    /**
     * value: "DJF"
     * @const
     */
    DJF: "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    ZAR: "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    ETB: "ETB",

    /**
     * value: "AED"
     * @const
     */
    AED: "AED",

    /**
     * value: "BHD"
     * @const
     */
    BHD: "BHD",

    /**
     * value: "DZD"
     * @const
     */
    DZD: "DZD",

    /**
     * value: "EGP"
     * @const
     */
    EGP: "EGP",

    /**
     * value: "IQD"
     * @const
     */
    IQD: "IQD",

    /**
     * value: "JOD"
     * @const
     */
    JOD: "JOD",

    /**
     * value: "KWD"
     * @const
     */
    KWD: "KWD",

    /**
     * value: "LBP"
     * @const
     */
    LBP: "LBP",

    /**
     * value: "LYD"
     * @const
     */
    LYD: "LYD",

    /**
     * value: "MAD"
     * @const
     */
    MAD: "MAD",

    /**
     * value: "OMR"
     * @const
     */
    OMR: "OMR",

    /**
     * value: "QAR"
     * @const
     */
    QAR: "QAR",

    /**
     * value: "SAR"
     * @const
     */
    SAR: "SAR",

    /**
     * value: "SYP"
     * @const
     */
    SYP: "SYP",

    /**
     * value: "TND"
     * @const
     */
    TND: "TND",

    /**
     * value: "YER"
     * @const
     */
    YER: "YER",

    /**
     * value: "CLP"
     * @const
     */
    CLP: "CLP",

    /**
     * value: "INR"
     * @const
     */
    INR: "INR",

    /**
     * value: "AZN"
     * @const
     */
    AZN: "AZN",

    /**
     * value: "RUB"
     * @const
     */
    RUB: "RUB",

    /**
     * value: "BYN"
     * @const
     */
    BYN: "BYN",

    /**
     * value: "BGN"
     * @const
     */
    BGN: "BGN",

    /**
     * value: "NGN"
     * @const
     */
    NGN: "NGN",

    /**
     * value: "BDT"
     * @const
     */
    BDT: "BDT",

    /**
     * value: "CNY"
     * @const
     */
    CNY: "CNY",

    /**
     * value: "BAM"
     * @const
     */
    BAM: "BAM",

    /**
     * value: "CZK"
     * @const
     */
    CZK: "CZK",

    /**
     * value: "DKK"
     * @const
     */
    DKK: "DKK",

    /**
     * value: "CHF"
     * @const
     */
    CHF: "CHF",

    /**
     * value: "MVR"
     * @const
     */
    MVR: "MVR",

    /**
     * value: "BTN"
     * @const
     */
    BTN: "BTN",

    /**
     * value: "XCD"
     * @const
     */
    XCD: "XCD",

    /**
     * value: "BZD"
     * @const
     */
    BZD: "BZD",

    /**
     * value: "HKD"
     * @const
     */
    HKD: "HKD",

    /**
     * value: "IDR"
     * @const
     */
    IDR: "IDR",

    /**
     * value: "JMD"
     * @const
     */
    JMD: "JMD",

    /**
     * value: "MYR"
     * @const
     */
    MYR: "MYR",

    /**
     * value: "NZD"
     * @const
     */
    NZD: "NZD",

    /**
     * value: "PHP"
     * @const
     */
    PHP: "PHP",

    /**
     * value: "SGD"
     * @const
     */
    SGD: "SGD",

    /**
     * value: "TTD"
     * @const
     */
    TTD: "TTD",

    /**
     * value: "XDR"
     * @const
     */
    XDR: "XDR",

    /**
     * value: "ARS"
     * @const
     */
    ARS: "ARS",

    /**
     * value: "BOB"
     * @const
     */
    BOB: "BOB",

    /**
     * value: "COP"
     * @const
     */
    COP: "COP",

    /**
     * value: "CRC"
     * @const
     */
    CRC: "CRC",

    /**
     * value: "CUP"
     * @const
     */
    CUP: "CUP",

    /**
     * value: "DOP"
     * @const
     */
    DOP: "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    GTQ: "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    HNL: "HNL",

    /**
     * value: "MXN"
     * @const
     */
    MXN: "MXN",

    /**
     * value: "NIO"
     * @const
     */
    NIO: "NIO",

    /**
     * value: "PAB"
     * @const
     */
    PAB: "PAB",

    /**
     * value: "PEN"
     * @const
     */
    PEN: "PEN",

    /**
     * value: "PYG"
     * @const
     */
    PYG: "PYG",

    /**
     * value: "UYU"
     * @const
     */
    UYU: "UYU",

    /**
     * value: "VEF"
     * @const
     */
    VEF: "VEF",

    /**
     * value: "IRR"
     * @const
     */
    IRR: "IRR",

    /**
     * value: "XOF"
     * @const
     */
    XOF: "XOF",

    /**
     * value: "CDF"
     * @const
     */
    CDF: "CDF",

    /**
     * value: "XAF"
     * @const
     */
    XAF: "XAF",

    /**
     * value: "HTG"
     * @const
     */
    HTG: "HTG",

    /**
     * value: "ILS"
     * @const
     */
    ILS: "ILS",

    /**
     * value: "HRK"
     * @const
     */
    HRK: "HRK",

    /**
     * value: "HUF"
     * @const
     */
    HUF: "HUF",

    /**
     * value: "AMD"
     * @const
     */
    AMD: "AMD",

    /**
     * value: "ISK"
     * @const
     */
    ISK: "ISK",

    /**
     * value: "JPY"
     * @const
     */
    JPY: "JPY",

    /**
     * value: "GEL"
     * @const
     */
    GEL: "GEL",

    /**
     * value: "KZT"
     * @const
     */
    KZT: "KZT",

    /**
     * value: "KHR"
     * @const
     */
    KHR: "KHR",

    /**
     * value: "KRW"
     * @const
     */
    KRW: "KRW",

    /**
     * value: "KGS"
     * @const
     */
    KGS: "KGS",

    /**
     * value: "LAK"
     * @const
     */
    LAK: "LAK",

    /**
     * value: "MKD"
     * @const
     */
    MKD: "MKD",

    /**
     * value: "MNT"
     * @const
     */
    MNT: "MNT",

    /**
     * value: "BND"
     * @const
     */
    BND: "BND",

    /**
     * value: "MMK"
     * @const
     */
    MMK: "MMK",

    /**
     * value: "NOK"
     * @const
     */
    NOK: "NOK",

    /**
     * value: "NPR"
     * @const
     */
    NPR: "NPR",

    /**
     * value: "PKR"
     * @const
     */
    PKR: "PKR",

    /**
     * value: "PLN"
     * @const
     */
    PLN: "PLN",

    /**
     * value: "AFN"
     * @const
     */
    AFN: "AFN",

    /**
     * value: "BRL"
     * @const
     */
    BRL: "BRL",

    /**
     * value: "MDL"
     * @const
     */
    MDL: "MDL",

    /**
     * value: "RON"
     * @const
     */
    RON: "RON",

    /**
     * value: "RWF"
     * @const
     */
    RWF: "RWF",

    /**
     * value: "SEK"
     * @const
     */
    SEK: "SEK",

    /**
     * value: "LKR"
     * @const
     */
    LKR: "LKR",

    /**
     * value: "SOS"
     * @const
     */
    SOS: "SOS",

    /**
     * value: "ALL"
     * @const
     */
    ALL: "ALL",

    /**
     * value: "RSD"
     * @const
     */
    RSD: "RSD",

    /**
     * value: "KES"
     * @const
     */
    KES: "KES",

    /**
     * value: "TJS"
     * @const
     */
    TJS: "TJS",

    /**
     * value: "THB"
     * @const
     */
    THB: "THB",

    /**
     * value: "ERN"
     * @const
     */
    ERN: "ERN",

    /**
     * value: "TMT"
     * @const
     */
    TMT: "TMT",

    /**
     * value: "BWP"
     * @const
     */
    BWP: "BWP",

    /**
     * value: "TRY"
     * @const
     */
    TRY: "TRY",

    /**
     * value: "UAH"
     * @const
     */
    UAH: "UAH",

    /**
     * value: "UZS"
     * @const
     */
    UZS: "UZS",

    /**
     * value: "VND"
     * @const
     */
    VND: "VND",

    /**
     * value: "MOP"
     * @const
     */
    MOP: "MOP",

    /**
     * value: "TWD"
     * @const
     */
    TWD: "TWD",

    /**
     * value: "BMD"
     * @const
     */
    BMD: "BMD"
  };


  /**
   * Allowed values for the <code>appType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AppTypeEnum = {
    /**
     * value: "Unknown"
     * @const
     */
    unknown: "Unknown",

    /**
     * value: "Ios"
     * @const
     */
    ios: "Ios",

    /**
     * value: "Android"
     * @const
     */
    android: "Android",

    /**
     * value: "Web"
     * @const
     */
    web: "Web",

    /**
     * value: "Kiosk"
     * @const
     */
    kiosk: "Kiosk",

    /**
     * value: "Pos"
     * @const
     */
    pos: "Pos",

    /**
     * value: "TelephoneCall"
     * @const
     */
    telephoneCall: "TelephoneCall",

    /**
     * value: "Sms"
     * @const
     */
    sms: "Sms",

    /**
     * value: "PwaAndroid"
     * @const
     */
    pwaAndroid: "PwaAndroid",

    /**
     * value: "PwaIos"
     * @const
     */
    pwaIos: "PwaIos"
  };

  return exports;

}));
