/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Channel from './Channel';
import DeliveryLocation from './DeliveryLocation';
import OrderBatchSummary from './OrderBatchSummary';
import OrderDropOffLocation from './OrderDropOffLocation';

/**
 * The OrderSummary model module.
 * @module model/OrderSummary
 * @version 1.0.0
 */
class OrderSummary {
    /**
     * Constructs a new <code>OrderSummary</code>.
     * Order summary
     * @alias module:model/OrderSummary
     */
    constructor() { 
        
        OrderSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderSummary} obj Optional instance to populate.
     * @return {module:model/OrderSummary} The populated <code>OrderSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderSummary();

            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryType')) {
                obj['DeliveryType'] = ApiClient.convertToType(data['DeliveryType'], 'String');
            }
            if (data.hasOwnProperty('PickupLocationType')) {
                obj['PickupLocationType'] = ApiClient.convertToType(data['PickupLocationType'], 'String');
            }
            if (data.hasOwnProperty('TableServiceCatagory')) {
                obj['TableServiceCatagory'] = ApiClient.convertToType(data['TableServiceCatagory'], 'String');
            }
            if (data.hasOwnProperty('OrderState')) {
                obj['OrderState'] = ApiClient.convertToType(data['OrderState'], 'String');
            }
            if (data.hasOwnProperty('RequestedForTime')) {
                obj['RequestedForTime'] = ApiClient.convertToType(data['RequestedForTime'], 'Date');
            }
            if (data.hasOwnProperty('StoreName')) {
                obj['StoreName'] = ApiClient.convertToType(data['StoreName'], 'String');
            }
            if (data.hasOwnProperty('StoreIanaTimeZone')) {
                obj['StoreIanaTimeZone'] = ApiClient.convertToType(data['StoreIanaTimeZone'], 'String');
            }
            if (data.hasOwnProperty('CustomerName')) {
                obj['CustomerName'] = ApiClient.convertToType(data['CustomerName'], 'String');
            }
            if (data.hasOwnProperty('CustomerPhoneNumber')) {
                obj['CustomerPhoneNumber'] = ApiClient.convertToType(data['CustomerPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('RefundedAmount')) {
                obj['RefundedAmount'] = ApiClient.convertToType(data['RefundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('PaymentAccountType')) {
                obj['PaymentAccountType'] = ApiClient.convertToType(data['PaymentAccountType'], 'String');
            }
            if (data.hasOwnProperty('PaymentStatus')) {
                obj['PaymentStatus'] = ApiClient.convertToType(data['PaymentStatus'], 'String');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('AppType')) {
                obj['AppType'] = ApiClient.convertToType(data['AppType'], 'String');
            }
            if (data.hasOwnProperty('LocalOrderId')) {
                obj['LocalOrderId'] = ApiClient.convertToType(data['LocalOrderId'], 'String');
            }
            if (data.hasOwnProperty('DropOffLocationId')) {
                obj['DropOffLocationId'] = ApiClient.convertToType(data['DropOffLocationId'], 'Number');
            }
            if (data.hasOwnProperty('DropOffLocation')) {
                obj['DropOffLocation'] = ApiClient.convertToType(data['DropOffLocation'], 'String');
            }
            if (data.hasOwnProperty('AcceptedFor')) {
                obj['AcceptedFor'] = ApiClient.convertToType(data['AcceptedFor'], 'Date');
            }
            if (data.hasOwnProperty('Channel')) {
                obj['Channel'] = Channel.constructFromObject(data['Channel']);
            }
            if (data.hasOwnProperty('InFraudZone')) {
                obj['InFraudZone'] = ApiClient.convertToType(data['InFraudZone'], 'Boolean');
            }
            if (data.hasOwnProperty('UnusualHighValueOrder')) {
                obj['UnusualHighValueOrder'] = ApiClient.convertToType(data['UnusualHighValueOrder'], 'Boolean');
            }
            if (data.hasOwnProperty('ChannelOrderId')) {
                obj['ChannelOrderId'] = ApiClient.convertToType(data['ChannelOrderId'], 'String');
            }
            if (data.hasOwnProperty('ChannelOrderDisplayId')) {
                obj['ChannelOrderDisplayId'] = ApiClient.convertToType(data['ChannelOrderDisplayId'], 'String');
            }
            if (data.hasOwnProperty('OrderDropOffLocation')) {
                obj['OrderDropOffLocation'] = OrderDropOffLocation.constructFromObject(data['OrderDropOffLocation']);
            }
            if (data.hasOwnProperty('OrderBatchInfo')) {
                obj['OrderBatchInfo'] = OrderBatchSummary.constructFromObject(data['OrderBatchInfo']);
            }
            if (data.hasOwnProperty('DeliveryLocation')) {
                obj['DeliveryLocation'] = DeliveryLocation.constructFromObject(data['DeliveryLocation']);
            }
        }
        return obj;
    }


}

/**
 * Order identifier
 * @member {Number} OrderId
 */
OrderSummary.prototype['OrderId'] = undefined;

/**
 * Delivery type
 * @member {module:model/OrderSummary.DeliveryTypeEnum} DeliveryType
 */
OrderSummary.prototype['DeliveryType'] = undefined;

/**
 * Pickup location type
 * @member {module:model/OrderSummary.PickupLocationTypeEnum} PickupLocationType
 */
OrderSummary.prototype['PickupLocationType'] = undefined;

/**
 * Table service category
 * @member {module:model/OrderSummary.TableServiceCatagoryEnum} TableServiceCatagory
 */
OrderSummary.prototype['TableServiceCatagory'] = undefined;

/**
 * Order state
 * @member {module:model/OrderSummary.OrderStateEnum} OrderState
 */
OrderSummary.prototype['OrderState'] = undefined;

/**
 * Order requested for
 * @member {Date} RequestedForTime
 */
OrderSummary.prototype['RequestedForTime'] = undefined;

/**
 * Name of the store
 * @member {String} StoreName
 */
OrderSummary.prototype['StoreName'] = undefined;

/**
 * Store IANA time zone
 * @member {String} StoreIanaTimeZone
 */
OrderSummary.prototype['StoreIanaTimeZone'] = undefined;

/**
 * Name of the customer
 * @member {String} CustomerName
 */
OrderSummary.prototype['CustomerName'] = undefined;

/**
 * Phone number of customer
 * @member {String} CustomerPhoneNumber
 */
OrderSummary.prototype['CustomerPhoneNumber'] = undefined;

/**
 * This is the sum of the OrderItemsAmount, DeliveryAmount, TipAmount and Voucher.Amount (which is usually negative) and OnlineOrderingFee  It does include the OnlineOrderingFee
 * @member {Number} Amount
 */
OrderSummary.prototype['Amount'] = undefined;

/**
 * Refunded amount
 * @member {Number} RefundedAmount
 */
OrderSummary.prototype['RefundedAmount'] = undefined;

/**
 * Payment Account
 * @member {module:model/OrderSummary.PaymentAccountTypeEnum} PaymentAccountType
 */
OrderSummary.prototype['PaymentAccountType'] = undefined;

/**
 * Status of the payment
 * @member {module:model/OrderSummary.PaymentStatusEnum} PaymentStatus
 */
OrderSummary.prototype['PaymentStatus'] = undefined;

/**
 * Currency of payment
 * @member {module:model/OrderSummary.CurrencyEnum} Currency
 */
OrderSummary.prototype['Currency'] = undefined;

/**
 * Type of app end user is on
 * @member {module:model/OrderSummary.AppTypeEnum} AppType
 */
OrderSummary.prototype['AppType'] = undefined;

/**
 * Local order Id. This is used for displaying a \"shorter\" order ID for customers (eg. Kiosk orders)
 * @member {String} LocalOrderId
 */
OrderSummary.prototype['LocalOrderId'] = undefined;

/**
 * id of the collection/drop off location
 * @member {Number} DropOffLocationId
 */
OrderSummary.prototype['DropOffLocationId'] = undefined;

/**
 * Represents table service drop off location
 * @member {String} DropOffLocation
 */
OrderSummary.prototype['DropOffLocation'] = undefined;

/**
 * Time store has accepted the order for
 * @member {Date} AcceptedFor
 */
OrderSummary.prototype['AcceptedFor'] = undefined;

/**
 * @member {module:model/Channel} Channel
 */
OrderSummary.prototype['Channel'] = undefined;

/**
 * Was order made within a fraud zone
 * @member {Boolean} InFraudZone
 */
OrderSummary.prototype['InFraudZone'] = undefined;

/**
 * Is order of unusually high value
 * @member {Boolean} UnusualHighValueOrder
 */
OrderSummary.prototype['UnusualHighValueOrder'] = undefined;

/**
 * ChannelOrderId from external channel
 * @member {String} ChannelOrderId
 */
OrderSummary.prototype['ChannelOrderId'] = undefined;

/**
 * ChannelOrderDisplayId from external channel
 * @member {String} ChannelOrderDisplayId
 */
OrderSummary.prototype['ChannelOrderDisplayId'] = undefined;

/**
 * @member {module:model/OrderDropOffLocation} OrderDropOffLocation
 */
OrderSummary.prototype['OrderDropOffLocation'] = undefined;

/**
 * @member {module:model/OrderBatchSummary} OrderBatchInfo
 */
OrderSummary.prototype['OrderBatchInfo'] = undefined;

/**
 * @member {module:model/DeliveryLocation} DeliveryLocation
 */
OrderSummary.prototype['DeliveryLocation'] = undefined;





/**
 * Allowed values for the <code>DeliveryType</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['DeliveryTypeEnum'] = {

    /**
     * value: "Delivery"
     * @const
     */
    "Delivery": "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    "Pickup": "Pickup"
};


/**
 * Allowed values for the <code>PickupLocationType</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['PickupLocationTypeEnum'] = {

    /**
     * value: "TakeOut"
     * @const
     */
    "TakeOut": "TakeOut",

    /**
     * value: "TableService"
     * @const
     */
    "TableService": "TableService",

    /**
     * value: "DineIn"
     * @const
     */
    "DineIn": "DineIn"
};


/**
 * Allowed values for the <code>TableServiceCatagory</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['TableServiceCatagoryEnum'] = {

    /**
     * value: "Generic"
     * @const
     */
    "Generic": "Generic",

    /**
     * value: "Villa"
     * @const
     */
    "Villa": "Villa",

    /**
     * value: "House"
     * @const
     */
    "House": "House",

    /**
     * value: "Room"
     * @const
     */
    "Room": "Room",

    /**
     * value: "Area"
     * @const
     */
    "Area": "Area",

    /**
     * value: "Table"
     * @const
     */
    "Table": "Table",

    /**
     * value: "ParkingBay"
     * @const
     */
    "ParkingBay": "ParkingBay",

    /**
     * value: "Gate"
     * @const
     */
    "Gate": "Gate",

    /**
     * value: "DriveThrough"
     * @const
     */
    "DriveThrough": "DriveThrough",

    /**
     * value: "Team"
     * @const
     */
    "Team": "Team"
};


/**
 * Allowed values for the <code>OrderState</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['OrderStateEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "PlacedCanBeCancelled"
     * @const
     */
    "PlacedCanBeCancelled": "PlacedCanBeCancelled",

    /**
     * value: "ReadyToProcess"
     * @const
     */
    "ReadyToProcess": "ReadyToProcess",

    /**
     * value: "AcceptedByRestaurant"
     * @const
     */
    "AcceptedByRestaurant": "AcceptedByRestaurant",

    /**
     * value: "Dispatched"
     * @const
     */
    "Dispatched": "Dispatched",

    /**
     * value: "Delivered"
     * @const
     */
    "Delivered": "Delivered",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "ManualReview"
     * @const
     */
    "ManualReview": "ManualReview",

    /**
     * value: "RejectedByStore"
     * @const
     */
    "RejectedByStore": "RejectedByStore",

    /**
     * value: "RejectedByFlipdish"
     * @const
     */
    "RejectedByFlipdish": "RejectedByFlipdish",

    /**
     * value: "RejectedAutomatically"
     * @const
     */
    "RejectedAutomatically": "RejectedAutomatically",

    /**
     * value: "RejectedAfterBeingAccepted"
     * @const
     */
    "RejectedAfterBeingAccepted": "RejectedAfterBeingAccepted",

    /**
     * value: "AcceptedAndRefunded"
     * @const
     */
    "AcceptedAndRefunded": "AcceptedAndRefunded"
};


/**
 * Allowed values for the <code>PaymentAccountType</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['PaymentAccountTypeEnum'] = {

    /**
     * value: "Card"
     * @const
     */
    "Card": "Card",

    /**
     * value: "Cash"
     * @const
     */
    "Cash": "Cash",

    /**
     * value: "Ideal"
     * @const
     */
    "Ideal": "Ideal",

    /**
     * value: "Bancontact"
     * @const
     */
    "Bancontact": "Bancontact",

    /**
     * value: "Giropay"
     * @const
     */
    "Giropay": "Giropay",

    /**
     * value: "Eps"
     * @const
     */
    "Eps": "Eps",

    /**
     * value: "Emv"
     * @const
     */
    "Emv": "Emv",

    /**
     * value: "PayPal"
     * @const
     */
    "PayPal": "PayPal",

    /**
     * value: "PayGreen"
     * @const
     */
    "PayGreen": "PayGreen",

    /**
     * value: "GoogleWalletToken"
     * @const
     */
    "GoogleWalletToken": "GoogleWalletToken"
};


/**
 * Allowed values for the <code>PaymentStatus</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['PaymentStatusEnum'] = {

    /**
     * value: "Paid"
     * @const
     */
    "Paid": "Paid",

    /**
     * value: "Unpaid"
     * @const
     */
    "Unpaid": "Unpaid",

    /**
     * value: "Refunded"
     * @const
     */
    "Refunded": "Refunded",

    /**
     * value: "PartiallyRefunded"
     * @const
     */
    "PartiallyRefunded": "PartiallyRefunded",

    /**
     * value: "Disputed"
     * @const
     */
    "Disputed": "Disputed"
};


/**
 * Allowed values for the <code>Currency</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['CurrencyEnum'] = {

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "DJF"
     * @const
     */
    "DJF": "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    "ETB": "ETB",

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "DZD"
     * @const
     */
    "DZD": "DZD",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "IQD"
     * @const
     */
    "IQD": "IQD",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "LBP"
     * @const
     */
    "LBP": "LBP",

    /**
     * value: "LYD"
     * @const
     */
    "LYD": "LYD",

    /**
     * value: "MAD"
     * @const
     */
    "MAD": "MAD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SYP"
     * @const
     */
    "SYP": "SYP",

    /**
     * value: "TND"
     * @const
     */
    "TND": "TND",

    /**
     * value: "YER"
     * @const
     */
    "YER": "YER",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "BYN"
     * @const
     */
    "BYN": "BYN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "NGN"
     * @const
     */
    "NGN": "NGN",

    /**
     * value: "BDT"
     * @const
     */
    "BDT": "BDT",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "BAM"
     * @const
     */
    "BAM": "BAM",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "MVR"
     * @const
     */
    "MVR": "MVR",

    /**
     * value: "BTN"
     * @const
     */
    "BTN": "BTN",

    /**
     * value: "XCD"
     * @const
     */
    "XCD": "XCD",

    /**
     * value: "BZD"
     * @const
     */
    "BZD": "BZD",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "JMD"
     * @const
     */
    "JMD": "JMD",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "PHP"
     * @const
     */
    "PHP": "PHP",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "TTD"
     * @const
     */
    "TTD": "TTD",

    /**
     * value: "XDR"
     * @const
     */
    "XDR": "XDR",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "BOB"
     * @const
     */
    "BOB": "BOB",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CRC"
     * @const
     */
    "CRC": "CRC",

    /**
     * value: "CUP"
     * @const
     */
    "CUP": "CUP",

    /**
     * value: "DOP"
     * @const
     */
    "DOP": "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    "GTQ": "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    "HNL": "HNL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "NIO"
     * @const
     */
    "NIO": "NIO",

    /**
     * value: "PAB"
     * @const
     */
    "PAB": "PAB",

    /**
     * value: "PEN"
     * @const
     */
    "PEN": "PEN",

    /**
     * value: "PYG"
     * @const
     */
    "PYG": "PYG",

    /**
     * value: "UYU"
     * @const
     */
    "UYU": "UYU",

    /**
     * value: "VEF"
     * @const
     */
    "VEF": "VEF",

    /**
     * value: "IRR"
     * @const
     */
    "IRR": "IRR",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "CDF"
     * @const
     */
    "CDF": "CDF",

    /**
     * value: "XAF"
     * @const
     */
    "XAF": "XAF",

    /**
     * value: "HTG"
     * @const
     */
    "HTG": "HTG",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "HRK"
     * @const
     */
    "HRK": "HRK",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "AMD"
     * @const
     */
    "AMD": "AMD",

    /**
     * value: "ISK"
     * @const
     */
    "ISK": "ISK",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "KHR"
     * @const
     */
    "KHR": "KHR",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KGS"
     * @const
     */
    "KGS": "KGS",

    /**
     * value: "LAK"
     * @const
     */
    "LAK": "LAK",

    /**
     * value: "MKD"
     * @const
     */
    "MKD": "MKD",

    /**
     * value: "MNT"
     * @const
     */
    "MNT": "MNT",

    /**
     * value: "BND"
     * @const
     */
    "BND": "BND",

    /**
     * value: "MMK"
     * @const
     */
    "MMK": "MMK",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NPR"
     * @const
     */
    "NPR": "NPR",

    /**
     * value: "PKR"
     * @const
     */
    "PKR": "PKR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "AFN"
     * @const
     */
    "AFN": "AFN",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RWF"
     * @const
     */
    "RWF": "RWF",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "LKR"
     * @const
     */
    "LKR": "LKR",

    /**
     * value: "SOS"
     * @const
     */
    "SOS": "SOS",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "RSD"
     * @const
     */
    "RSD": "RSD",

    /**
     * value: "KES"
     * @const
     */
    "KES": "KES",

    /**
     * value: "TJS"
     * @const
     */
    "TJS": "TJS",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "ERN"
     * @const
     */
    "ERN": "ERN",

    /**
     * value: "TMT"
     * @const
     */
    "TMT": "TMT",

    /**
     * value: "BWP"
     * @const
     */
    "BWP": "BWP",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "UZS"
     * @const
     */
    "UZS": "UZS",

    /**
     * value: "VND"
     * @const
     */
    "VND": "VND",

    /**
     * value: "MOP"
     * @const
     */
    "MOP": "MOP",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "BMD"
     * @const
     */
    "BMD": "BMD"
};


/**
 * Allowed values for the <code>AppType</code> property.
 * @enum {String}
 * @readonly
 */
OrderSummary['AppTypeEnum'] = {

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "Ios"
     * @const
     */
    "Ios": "Ios",

    /**
     * value: "Android"
     * @const
     */
    "Android": "Android",

    /**
     * value: "Web"
     * @const
     */
    "Web": "Web",

    /**
     * value: "Kiosk"
     * @const
     */
    "Kiosk": "Kiosk",

    /**
     * value: "Pos"
     * @const
     */
    "Pos": "Pos",

    /**
     * value: "TelephoneCall"
     * @const
     */
    "TelephoneCall": "TelephoneCall",

    /**
     * value: "Sms"
     * @const
     */
    "Sms": "Sms",

    /**
     * value: "PwaAndroid"
     * @const
     */
    "PwaAndroid": "PwaAndroid",

    /**
     * value: "PwaIos"
     * @const
     */
    "PwaIos": "PwaIos",

    /**
     * value: "Google"
     * @const
     */
    "Google": "Google"
};



export default OrderSummary;

