/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Price from './Price';

/**
 * The LineItemOption model module.
 * @module model/LineItemOption
 * @version 1.0.0
 */
class LineItemOption {
    /**
     * Constructs a new <code>LineItemOption</code>.
     * Defines a single line item option
     * @alias module:model/LineItemOption
     */
    constructor() { 
        
        LineItemOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItemOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemOption} obj Optional instance to populate.
     * @return {module:model/LineItemOption} The populated <code>LineItemOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemOption();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Price')) {
                obj['Price'] = Price.constructFromObject(data['Price']);
            }
            if (data.hasOwnProperty('Metadata')) {
                obj['Metadata'] = ApiClient.convertToType(data['Metadata'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * Flipdish Item Option Id, if unknown leave 'null'
 * @member {Number} Id
 */
LineItemOption.prototype['Id'] = undefined;

/**
 * External Item Option Id
 * @member {String} ExternalId
 */
LineItemOption.prototype['ExternalId'] = undefined;

/**
 * External Item Option Name
 * @member {String} Name
 */
LineItemOption.prototype['Name'] = undefined;

/**
 * @member {module:model/Price} Price
 */
LineItemOption.prototype['Price'] = undefined;

/**
 * Other Item Metadata
 * @member {Object.<String, String>} Metadata
 */
LineItemOption.prototype['Metadata'] = undefined;






export default LineItemOption;

