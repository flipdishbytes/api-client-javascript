/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.StoreBase = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The StoreBase model module.
   * @module model/StoreBase
   * @version v1.0
   */

  /**
   * Constructs a new <code>StoreBase</code>.
   * Store Base
   * @alias module:model/StoreBase
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>StoreBase</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreBase} obj Optional instance to populate.
   * @return {module:model/StoreBase} The populated <code>StoreBase</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('PhoneNumber'))
        obj.phoneNumber = ApiClient.convertToType(data['PhoneNumber'], 'String');
      if (data.hasOwnProperty('AlwaysAppearOpen'))
        obj.alwaysAppearOpen = ApiClient.convertToType(data['AlwaysAppearOpen'], 'Boolean');
      if (data.hasOwnProperty('PreOrderEnabled'))
        obj.preOrderEnabled = ApiClient.convertToType(data['PreOrderEnabled'], 'Boolean');
      if (data.hasOwnProperty('TakeOutEnabled'))
        obj.takeOutEnabled = ApiClient.convertToType(data['TakeOutEnabled'], 'Boolean');
      if (data.hasOwnProperty('TableServiceEnabled'))
        obj.tableServiceEnabled = ApiClient.convertToType(data['TableServiceEnabled'], 'Boolean');
      if (data.hasOwnProperty('DineInEnabled'))
        obj.dineInEnabled = ApiClient.convertToType(data['DineInEnabled'], 'Boolean');
      if (data.hasOwnProperty('AllowPreOrdersAndTableService'))
        obj.allowPreOrdersAndTableService = ApiClient.convertToType(data['AllowPreOrdersAndTableService'], 'Boolean');
      if (data.hasOwnProperty('PickupEnabled'))
        obj.pickupEnabled = ApiClient.convertToType(data['PickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('DeliveryEnabled'))
        obj.deliveryEnabled = ApiClient.convertToType(data['DeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrderDeliveryEnabled'))
        obj.cardOrderDeliveryEnabled = ApiClient.convertToType(data['CardOrderDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersDeliveryEnabled'))
        obj.cashOrdersDeliveryEnabled = ApiClient.convertToType(data['CashOrdersDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrdersPickupEnabled'))
        obj.cardOrdersPickupEnabled = ApiClient.convertToType(data['CardOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersPickupEnabled'))
        obj.cashOrdersPickupEnabled = ApiClient.convertToType(data['CashOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('TipsEnabled'))
        obj.tipsEnabled = ApiClient.convertToType(data['TipsEnabled'], 'Boolean');
      if (data.hasOwnProperty('AutomaticallyAcceptOrders'))
        obj.automaticallyAcceptOrders = ApiClient.convertToType(data['AutomaticallyAcceptOrders'], 'Boolean');
      if (data.hasOwnProperty('OpenForDelivery'))
        obj.openForDelivery = ApiClient.convertToType(data['OpenForDelivery'], 'Boolean');
      if (data.hasOwnProperty('OpenForPickup'))
        obj.openForPickup = ApiClient.convertToType(data['OpenForPickup'], 'Boolean');
      if (data.hasOwnProperty('MinimumPickupOrderAmount'))
        obj.minimumPickupOrderAmount = ApiClient.convertToType(data['MinimumPickupOrderAmount'], 'Number');
      if (data.hasOwnProperty('RequireCustomerNameForPickup'))
        obj.requireCustomerNameForPickup = ApiClient.convertToType(data['RequireCustomerNameForPickup'], 'Boolean');
      if (data.hasOwnProperty('GdprCustomerPhoneNumbers'))
        obj.gdprCustomerPhoneNumbers = ApiClient.convertToType(data['GdprCustomerPhoneNumbers'], 'Boolean');
      if (data.hasOwnProperty('RequireCustomerNameForDelivery'))
        obj.requireCustomerNameForDelivery = ApiClient.convertToType(data['RequireCustomerNameForDelivery'], 'Boolean');
      if (data.hasOwnProperty('AllowChefNotes'))
        obj.allowChefNotes = ApiClient.convertToType(data['AllowChefNotes'], 'Boolean');
      if (data.hasOwnProperty('EtaInPickupConfirmationSmsEnabled'))
        obj.etaInPickupConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInPickupConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('EtaInDeliveryConfirmationSmsEnabled'))
        obj.etaInDeliveryConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInDeliveryConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('IsArchived'))
        obj.isArchived = ApiClient.convertToType(data['IsArchived'], 'Boolean');
      if (data.hasOwnProperty('IsPublished'))
        obj.isPublished = ApiClient.convertToType(data['IsPublished'], 'Boolean');
      if (data.hasOwnProperty('Name'))
        obj.name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('EmailAddress'))
        obj.emailAddress = ApiClient.convertToType(data['EmailAddress'], 'String');
      if (data.hasOwnProperty('StaffLanguage'))
        obj.staffLanguage = ApiClient.convertToType(data['StaffLanguage'], 'String');
    }
    return obj;
  }

  /**
   * Phone number
   * @member {String} phoneNumber
   */
  exports.prototype.phoneNumber = undefined;

  /**
   * True if the store always appears open
   * @member {Boolean} alwaysAppearOpen
   */
  exports.prototype.alwaysAppearOpen = undefined;

  /**
   * True if the store accepts pre-orders
   * @member {Boolean} preOrderEnabled
   */
  exports.prototype.preOrderEnabled = undefined;

  /**
   * True if the store accepts take-out orders
   * @member {Boolean} takeOutEnabled
   */
  exports.prototype.takeOutEnabled = undefined;

  /**
   * True if the store has table service
   * @member {Boolean} tableServiceEnabled
   */
  exports.prototype.tableServiceEnabled = undefined;

  /**
   * True if the store accepts dine-in orders
   * @member {Boolean} dineInEnabled
   */
  exports.prototype.dineInEnabled = undefined;

  /**
   * True if both pre-orders and talbe service can be enabled
   * @member {Boolean} allowPreOrdersAndTableService
   */
  exports.prototype.allowPreOrdersAndTableService = undefined;

  /**
   * True if the store accepts pickup orders
   * @member {Boolean} pickupEnabled
   */
  exports.prototype.pickupEnabled = undefined;

  /**
   * True if the store accepts delivery orders
   * @member {Boolean} deliveryEnabled
   */
  exports.prototype.deliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for delivery orders
   * @member {Boolean} cardOrderDeliveryEnabled
   */
  exports.prototype.cardOrderDeliveryEnabled = undefined;

  /**
   * True if the store accepts cash payment for delivery orders
   * @member {Boolean} cashOrdersDeliveryEnabled
   */
  exports.prototype.cashOrdersDeliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for pickup orders
   * @member {Boolean} cardOrdersPickupEnabled
   */
  exports.prototype.cardOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts cash payment for pickup orders
   * @member {Boolean} cashOrdersPickupEnabled
   */
  exports.prototype.cashOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts tips
   * @member {Boolean} tipsEnabled
   */
  exports.prototype.tipsEnabled = undefined;

  /**
   * True if the stores orders are automatically accepted in Flipdish
   * @member {Boolean} automaticallyAcceptOrders
   */
  exports.prototype.automaticallyAcceptOrders = undefined;

  /**
   * True if the store is open for delivery
   * @member {Boolean} openForDelivery
   */
  exports.prototype.openForDelivery = undefined;

  /**
   * True if the store is open for pickup
   * @member {Boolean} openForPickup
   */
  exports.prototype.openForPickup = undefined;

  /**
   * Minimum pickup order amount
   * @member {Number} minimumPickupOrderAmount
   */
  exports.prototype.minimumPickupOrderAmount = undefined;

  /**
   * True if customer name required for pickup orders
   * @member {Boolean} requireCustomerNameForPickup
   */
  exports.prototype.requireCustomerNameForPickup = undefined;

  /**
   * Mask your customers phone numbers printed on receipts and reduce the amout of personally identifiable customer information that is exposed.
   * @member {Boolean} gdprCustomerPhoneNumbers
   */
  exports.prototype.gdprCustomerPhoneNumbers = undefined;

  /**
   * True if customer name required for delivery orders
   * @member {Boolean} requireCustomerNameForDelivery
   */
  exports.prototype.requireCustomerNameForDelivery = undefined;

  /**
   * True if the customer is allowed enter custom notes with their orders
   * @member {Boolean} allowChefNotes
   */
  exports.prototype.allowChefNotes = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will be ready for collection
   * @member {Boolean} etaInPickupConfirmationSmsEnabled
   */
  exports.prototype.etaInPickupConfirmationSmsEnabled = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will delivered
   * @member {Boolean} etaInDeliveryConfirmationSmsEnabled
   */
  exports.prototype.etaInDeliveryConfirmationSmsEnabled = undefined;

  /**
   * Is the Store Archived
   * @member {Boolean} isArchived
   */
  exports.prototype.isArchived = undefined;

  /**
   * Is the Store Published
   * @member {Boolean} isPublished
   */
  exports.prototype.isPublished = undefined;

  /**
   * Name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Email address (visible to customers)
   * @member {String} emailAddress
   */
  exports.prototype.emailAddress = undefined;

  /**
   * Staff Language (used for communication with the staff)  Emails, Printouts etc
   * @member {String} staffLanguage
   */
  exports.prototype.staffLanguage = undefined;


  return exports;

}));
