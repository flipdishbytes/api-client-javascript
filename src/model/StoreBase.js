/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.StoreBase = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The StoreBase model module.
   * @module model/StoreBase
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>StoreBase</code>.
   * Store Base
   * @alias module:model/StoreBase
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>StoreBase</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreBase} obj Optional instance to populate.
   * @return {module:model/StoreBase} The populated <code>StoreBase</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('PhoneNumber'))
        obj.PhoneNumber = ApiClient.convertToType(data['PhoneNumber'], 'String');
      if (data.hasOwnProperty('AlwaysAppearOpen'))
        obj.AlwaysAppearOpen = ApiClient.convertToType(data['AlwaysAppearOpen'], 'Boolean');
      if (data.hasOwnProperty('PreOrderEnabled'))
        obj.PreOrderEnabled = ApiClient.convertToType(data['PreOrderEnabled'], 'Boolean');
      if (data.hasOwnProperty('TakeOutEnabled'))
        obj.TakeOutEnabled = ApiClient.convertToType(data['TakeOutEnabled'], 'Boolean');
      if (data.hasOwnProperty('TableServiceEnabled'))
        obj.TableServiceEnabled = ApiClient.convertToType(data['TableServiceEnabled'], 'Boolean');
      if (data.hasOwnProperty('DineInEnabled'))
        obj.DineInEnabled = ApiClient.convertToType(data['DineInEnabled'], 'Boolean');
      if (data.hasOwnProperty('AllowPreOrdersAndTableService'))
        obj.AllowPreOrdersAndTableService = ApiClient.convertToType(data['AllowPreOrdersAndTableService'], 'Boolean');
      if (data.hasOwnProperty('PickupEnabled'))
        obj.PickupEnabled = ApiClient.convertToType(data['PickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('DeliveryEnabled'))
        obj.DeliveryEnabled = ApiClient.convertToType(data['DeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrderDeliveryEnabled'))
        obj.CardOrderDeliveryEnabled = ApiClient.convertToType(data['CardOrderDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersDeliveryEnabled'))
        obj.CashOrdersDeliveryEnabled = ApiClient.convertToType(data['CashOrdersDeliveryEnabled'], 'Boolean');
      if (data.hasOwnProperty('CardOrdersPickupEnabled'))
        obj.CardOrdersPickupEnabled = ApiClient.convertToType(data['CardOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('CashOrdersPickupEnabled'))
        obj.CashOrdersPickupEnabled = ApiClient.convertToType(data['CashOrdersPickupEnabled'], 'Boolean');
      if (data.hasOwnProperty('TipsEnabled'))
        obj.TipsEnabled = ApiClient.convertToType(data['TipsEnabled'], 'Boolean');
      if (data.hasOwnProperty('AutomaticallyAcceptOrders'))
        obj.AutomaticallyAcceptOrders = ApiClient.convertToType(data['AutomaticallyAcceptOrders'], 'Boolean');
      if (data.hasOwnProperty('OpenForDelivery'))
        obj.OpenForDelivery = ApiClient.convertToType(data['OpenForDelivery'], 'Boolean');
      if (data.hasOwnProperty('OpenForPickup'))
        obj.OpenForPickup = ApiClient.convertToType(data['OpenForPickup'], 'Boolean');
      if (data.hasOwnProperty('MinimumPickupOrderAmount'))
        obj.MinimumPickupOrderAmount = ApiClient.convertToType(data['MinimumPickupOrderAmount'], 'Number');
      if (data.hasOwnProperty('RequireCustomerNameForPickup'))
        obj.RequireCustomerNameForPickup = ApiClient.convertToType(data['RequireCustomerNameForPickup'], 'Boolean');
      if (data.hasOwnProperty('GdprCustomerPhoneNumbers'))
        obj.GdprCustomerPhoneNumbers = ApiClient.convertToType(data['GdprCustomerPhoneNumbers'], 'Boolean');
      if (data.hasOwnProperty('RequireCustomerNameForDelivery'))
        obj.RequireCustomerNameForDelivery = ApiClient.convertToType(data['RequireCustomerNameForDelivery'], 'Boolean');
      if (data.hasOwnProperty('AllowChefNotes'))
        obj.AllowChefNotes = ApiClient.convertToType(data['AllowChefNotes'], 'Boolean');
      if (data.hasOwnProperty('EtaInPickupConfirmationSmsEnabled'))
        obj.EtaInPickupConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInPickupConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('EtaInDeliveryConfirmationSmsEnabled'))
        obj.EtaInDeliveryConfirmationSmsEnabled = ApiClient.convertToType(data['EtaInDeliveryConfirmationSmsEnabled'], 'Boolean');
      if (data.hasOwnProperty('IsArchived'))
        obj.IsArchived = ApiClient.convertToType(data['IsArchived'], 'Boolean');
      if (data.hasOwnProperty('IsPublished'))
        obj.IsPublished = ApiClient.convertToType(data['IsPublished'], 'Boolean');
      if (data.hasOwnProperty('Name'))
        obj.Name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('EmailAddress'))
        obj.EmailAddress = ApiClient.convertToType(data['EmailAddress'], 'String');
      if (data.hasOwnProperty('StaffLanguage'))
        obj.StaffLanguage = ApiClient.convertToType(data['StaffLanguage'], 'String');
    }
    return obj;
  }

  /**
   * Phone number
   * @member {String} PhoneNumber
   */
  exports.prototype.PhoneNumber = undefined;

  /**
   * True if the store always appears open
   * @member {Boolean} AlwaysAppearOpen
   */
  exports.prototype.AlwaysAppearOpen = undefined;

  /**
   * True if the store accepts pre-orders
   * @member {Boolean} PreOrderEnabled
   */
  exports.prototype.PreOrderEnabled = undefined;

  /**
   * True if the store accepts take-out orders
   * @member {Boolean} TakeOutEnabled
   */
  exports.prototype.TakeOutEnabled = undefined;

  /**
   * True if the store has table service
   * @member {Boolean} TableServiceEnabled
   */
  exports.prototype.TableServiceEnabled = undefined;

  /**
   * True if the store accepts dine-in orders
   * @member {Boolean} DineInEnabled
   */
  exports.prototype.DineInEnabled = undefined;

  /**
   * True if both pre-orders and talbe service can be enabled
   * @member {Boolean} AllowPreOrdersAndTableService
   */
  exports.prototype.AllowPreOrdersAndTableService = undefined;

  /**
   * True if the store accepts pickup orders
   * @member {Boolean} PickupEnabled
   */
  exports.prototype.PickupEnabled = undefined;

  /**
   * True if the store accepts delivery orders
   * @member {Boolean} DeliveryEnabled
   */
  exports.prototype.DeliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for delivery orders
   * @member {Boolean} CardOrderDeliveryEnabled
   */
  exports.prototype.CardOrderDeliveryEnabled = undefined;

  /**
   * True if the store accepts cash payment for delivery orders
   * @member {Boolean} CashOrdersDeliveryEnabled
   */
  exports.prototype.CashOrdersDeliveryEnabled = undefined;

  /**
   * True if the store accepts card payment for pickup orders
   * @member {Boolean} CardOrdersPickupEnabled
   */
  exports.prototype.CardOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts cash payment for pickup orders
   * @member {Boolean} CashOrdersPickupEnabled
   */
  exports.prototype.CashOrdersPickupEnabled = undefined;

  /**
   * True if the store accepts tips
   * @member {Boolean} TipsEnabled
   */
  exports.prototype.TipsEnabled = undefined;

  /**
   * True if the stores orders are automatically accepted in Flipdish
   * @member {Boolean} AutomaticallyAcceptOrders
   */
  exports.prototype.AutomaticallyAcceptOrders = undefined;

  /**
   * True if the store is open for delivery
   * @member {Boolean} OpenForDelivery
   */
  exports.prototype.OpenForDelivery = undefined;

  /**
   * True if the store is open for pickup
   * @member {Boolean} OpenForPickup
   */
  exports.prototype.OpenForPickup = undefined;

  /**
   * Minimum pickup order amount
   * @member {Number} MinimumPickupOrderAmount
   */
  exports.prototype.MinimumPickupOrderAmount = undefined;

  /**
   * True if customer name required for pickup orders
   * @member {Boolean} RequireCustomerNameForPickup
   */
  exports.prototype.RequireCustomerNameForPickup = undefined;

  /**
   * Mask your customers phone numbers printed on receipts and reduce the amout of personally identifiable customer information that is exposed.
   * @member {Boolean} GdprCustomerPhoneNumbers
   */
  exports.prototype.GdprCustomerPhoneNumbers = undefined;

  /**
   * True if customer name required for delivery orders
   * @member {Boolean} RequireCustomerNameForDelivery
   */
  exports.prototype.RequireCustomerNameForDelivery = undefined;

  /**
   * True if the customer is allowed enter custom notes with their orders
   * @member {Boolean} AllowChefNotes
   */
  exports.prototype.AllowChefNotes = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will be ready for collection
   * @member {Boolean} EtaInPickupConfirmationSmsEnabled
   */
  exports.prototype.EtaInPickupConfirmationSmsEnabled = undefined;

  /**
   * True if order confirmation sms includes estimated time when order will delivered
   * @member {Boolean} EtaInDeliveryConfirmationSmsEnabled
   */
  exports.prototype.EtaInDeliveryConfirmationSmsEnabled = undefined;

  /**
   * Is the Store Archived
   * @member {Boolean} IsArchived
   */
  exports.prototype.IsArchived = undefined;

  /**
   * Is the Store Published
   * @member {Boolean} IsPublished
   */
  exports.prototype.IsPublished = undefined;

  /**
   * Name
   * @member {String} Name
   */
  exports.prototype.Name = undefined;

  /**
   * Email address (visible to customers)
   * @member {String} EmailAddress
   */
  exports.prototype.EmailAddress = undefined;

  /**
   * Staff Language (used for communication with the staff)  Emails, Printouts etc
   * @member {String} StaffLanguage
   */
  exports.prototype.StaffLanguage = undefined;


  return exports;

}));
