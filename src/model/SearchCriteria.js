/**
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.SearchCriteria = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SearchCriteria model module.
   * @module model/SearchCriteria
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SearchCriteria</code>.
   * Search Criteria
   * @alias module:model/SearchCriteria
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>SearchCriteria</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchCriteria} obj Optional instance to populate.
   * @return {module:model/SearchCriteria} The populated <code>SearchCriteria</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Limit')) {
        obj['Limit'] = ApiClient.convertToType(data['Limit'], 'Number');
      }
      if (data.hasOwnProperty('Page')) {
        obj['Page'] = ApiClient.convertToType(data['Page'], 'Number');
      }
      if (data.hasOwnProperty('Start')) {
        obj['Start'] = ApiClient.convertToType(data['Start'], 'Date');
      }
      if (data.hasOwnProperty('End')) {
        obj['End'] = ApiClient.convertToType(data['End'], 'Date');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], ['String']);
      }
    }
    return obj;
  }

  /**
   * The maximum elements to return
   * @member {Number} Limit
   */
  exports.prototype['Limit'] = undefined;
  /**
   * The index of the page to return, starting by 1
   * @member {Number} Page
   */
  exports.prototype['Page'] = undefined;
  /**
   * Start date
   * @member {Date} Start
   */
  exports.prototype['Start'] = undefined;
  /**
   * End date
   * @member {Date} End
   */
  exports.prototype['End'] = undefined;
  /**
   * Event names to filter in
   * @member {Array.<String>} Name
   */
  exports.prototype['Name'] = undefined;



  return exports;
}));


