/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.SearchCriteria = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SearchCriteria model module.
   * @module model/SearchCriteria
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SearchCriteria</code>.
   * Search Criteria for Audit Logs
   * @alias module:model/SearchCriteria
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SearchCriteria</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchCriteria} obj Optional instance to populate.
   * @return {module:model/SearchCriteria} The populated <code>SearchCriteria</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Limit'))
        obj.Limit = ApiClient.convertToType(data['Limit'], 'Number');
      if (data.hasOwnProperty('Page'))
        obj.Page = ApiClient.convertToType(data['Page'], 'Number');
      if (data.hasOwnProperty('Start'))
        obj.Start = ApiClient.convertToType(data['Start'], 'Date');
      if (data.hasOwnProperty('End'))
        obj.End = ApiClient.convertToType(data['End'], 'Date');
      if (data.hasOwnProperty('OrderId'))
        obj.OrderId = ApiClient.convertToType(data['OrderId'], 'Number');
      if (data.hasOwnProperty('StoreId'))
        obj.StoreId = ApiClient.convertToType(data['StoreId'], 'Number');
      if (data.hasOwnProperty('StoreGroupId'))
        obj.StoreGroupId = ApiClient.convertToType(data['StoreGroupId'], 'Number');
      if (data.hasOwnProperty('UserId'))
        obj.UserId = ApiClient.convertToType(data['UserId'], 'Number');
      if (data.hasOwnProperty('UserEmail'))
        obj.UserEmail = ApiClient.convertToType(data['UserEmail'], 'String');
      if (data.hasOwnProperty('UserName'))
        obj.UserName = ApiClient.convertToType(data['UserName'], 'String');
      if (data.hasOwnProperty('VoucherCode'))
        obj.VoucherCode = ApiClient.convertToType(data['VoucherCode'], 'String');
      if (data.hasOwnProperty('EventType'))
        obj.EventType = ApiClient.convertToType(data['EventType'], ['String']);
      if (data.hasOwnProperty('FlipdishEventId'))
        obj.FlipdishEventId = ApiClient.convertToType(data['FlipdishEventId'], 'String');
    }
    return obj;
  }

  /**
   * The maximum elements to return
   * @member {Number} Limit
   */
  exports.prototype.Limit = undefined;

  /**
   * The index of the page to return, starting by 1
   * @member {Number} Page
   */
  exports.prototype.Page = undefined;

  /**
   * Start date
   * @member {Date} Start
   */
  exports.prototype.Start = undefined;

  /**
   * End date
   * @member {Date} End
   */
  exports.prototype.End = undefined;

  /**
   * Events that have Order Id
   * @member {Number} OrderId
   */
  exports.prototype.OrderId = undefined;

  /**
   * Events that have Store Id
   * @member {Number} StoreId
   */
  exports.prototype.StoreId = undefined;

  /**
   * Events that have Store Group Id
   * @member {Number} StoreGroupId
   */
  exports.prototype.StoreGroupId = undefined;

  /**
   * Events that have User Id
   * @member {Number} UserId
   */
  exports.prototype.UserId = undefined;

  /**
   * Events that have User Email
   * @member {String} UserEmail
   */
  exports.prototype.UserEmail = undefined;

  /**
   * Events that have User Name
   * @member {String} UserName
   */
  exports.prototype.UserName = undefined;

  /**
   * Events that have voucher code
   * @member {String} VoucherCode
   */
  exports.prototype.VoucherCode = undefined;

  /**
   * Events that have event type\\s
   * @member {Array.<String>} EventType
   */
  exports.prototype.EventType = undefined;

  /**
   * Unique Identifier of Event, if this is specified, all other criteria are ignored.
   * @member {String} FlipdishEventId
   */
  exports.prototype.FlipdishEventId = undefined;


  return exports;

}));
