/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.SearchCriteria = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SearchCriteria model module.
   * @module model/SearchCriteria
   * @version v1.0
   */

  /**
   * Constructs a new <code>SearchCriteria</code>.
   * Search Criteria for Audit Logs
   * @alias module:model/SearchCriteria
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SearchCriteria</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchCriteria} obj Optional instance to populate.
   * @return {module:model/SearchCriteria} The populated <code>SearchCriteria</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Limit'))
        obj.limit = ApiClient.convertToType(data['Limit'], 'Number');
      if (data.hasOwnProperty('Page'))
        obj.page = ApiClient.convertToType(data['Page'], 'Number');
      if (data.hasOwnProperty('Start'))
        obj.start = ApiClient.convertToType(data['Start'], 'Date');
      if (data.hasOwnProperty('End'))
        obj.end = ApiClient.convertToType(data['End'], 'Date');
      if (data.hasOwnProperty('OrderId'))
        obj.orderId = ApiClient.convertToType(data['OrderId'], 'Number');
      if (data.hasOwnProperty('StoreId'))
        obj.storeId = ApiClient.convertToType(data['StoreId'], 'Number');
      if (data.hasOwnProperty('StoreGroupId'))
        obj.storeGroupId = ApiClient.convertToType(data['StoreGroupId'], 'Number');
      if (data.hasOwnProperty('UserId'))
        obj.userId = ApiClient.convertToType(data['UserId'], 'Number');
      if (data.hasOwnProperty('UserEmail'))
        obj.userEmail = ApiClient.convertToType(data['UserEmail'], 'String');
      if (data.hasOwnProperty('UserName'))
        obj.userName = ApiClient.convertToType(data['UserName'], 'String');
      if (data.hasOwnProperty('VoucherCode'))
        obj.voucherCode = ApiClient.convertToType(data['VoucherCode'], 'String');
      if (data.hasOwnProperty('EventType'))
        obj.eventType = ApiClient.convertToType(data['EventType'], ['String']);
      if (data.hasOwnProperty('FlipdishEventId'))
        obj.flipdishEventId = ApiClient.convertToType(data['FlipdishEventId'], 'String');
    }
    return obj;
  }

  /**
   * The maximum elements to return
   * @member {Number} limit
   */
  exports.prototype.limit = undefined;

  /**
   * The index of the page to return, starting by 1
   * @member {Number} page
   */
  exports.prototype.page = undefined;

  /**
   * Start date
   * @member {Date} start
   */
  exports.prototype.start = undefined;

  /**
   * End date
   * @member {Date} end
   */
  exports.prototype.end = undefined;

  /**
   * Events that have Order Id
   * @member {Number} orderId
   */
  exports.prototype.orderId = undefined;

  /**
   * Events that have Store Id
   * @member {Number} storeId
   */
  exports.prototype.storeId = undefined;

  /**
   * Events that have Store Group Id
   * @member {Number} storeGroupId
   */
  exports.prototype.storeGroupId = undefined;

  /**
   * Events that have User Id
   * @member {Number} userId
   */
  exports.prototype.userId = undefined;

  /**
   * Events that have User Email
   * @member {String} userEmail
   */
  exports.prototype.userEmail = undefined;

  /**
   * Events that have User Name
   * @member {String} userName
   */
  exports.prototype.userName = undefined;

  /**
   * Events that have voucher code
   * @member {String} voucherCode
   */
  exports.prototype.voucherCode = undefined;

  /**
   * Events that have event type\\s
   * @member {Array.<String>} eventType
   */
  exports.prototype.eventType = undefined;

  /**
   * Unique Identifier of Event, if this is specified, all other criteria are ignored.
   * @member {String} flipdishEventId
   */
  exports.prototype.flipdishEventId = undefined;


  return exports;

}));
