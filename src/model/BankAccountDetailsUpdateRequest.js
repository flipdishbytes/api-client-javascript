/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountFieldKeyValuePair'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountFieldKeyValuePair'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.BankAccountDetailsUpdateRequest = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.AccountFieldKeyValuePair);
  }
}(this, function(ApiClient, AccountFieldKeyValuePair) {
  'use strict';

  /**
   * The BankAccountDetailsUpdateRequest model module.
   * @module model/BankAccountDetailsUpdateRequest
   * @version v1.0
   */

  /**
   * Constructs a new <code>BankAccountDetailsUpdateRequest</code>.
   * Represents a request to update bank account information details
   * @alias module:model/BankAccountDetailsUpdateRequest
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>BankAccountDetailsUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BankAccountDetailsUpdateRequest} obj Optional instance to populate.
   * @return {module:model/BankAccountDetailsUpdateRequest} The populated <code>BankAccountDetailsUpdateRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('BankAddress'))
        obj.bankAddress = ApiClient.convertToType(data['BankAddress'], 'String');
      if (data.hasOwnProperty('AccountHolderAddress'))
        obj.accountHolderAddress = ApiClient.convertToType(data['AccountHolderAddress'], 'String');
      if (data.hasOwnProperty('VatNumber'))
        obj.vatNumber = ApiClient.convertToType(data['VatNumber'], 'String');
      if (data.hasOwnProperty('StoreIds'))
        obj.storeIds = ApiClient.convertToType(data['StoreIds'], ['Number']);
      if (data.hasOwnProperty('BankName'))
        obj.bankName = ApiClient.convertToType(data['BankName'], 'String');
      if (data.hasOwnProperty('AccountName'))
        obj.accountName = ApiClient.convertToType(data['AccountName'], 'String');
      if (data.hasOwnProperty('Iban'))
        obj.iban = ApiClient.convertToType(data['Iban'], 'String');
      if (data.hasOwnProperty('Swift'))
        obj.swift = ApiClient.convertToType(data['Swift'], 'String');
      if (data.hasOwnProperty('NationalClearingCode'))
        obj.nationalClearingCode = ApiClient.convertToType(data['NationalClearingCode'], 'String');
      if (data.hasOwnProperty('PopulatedAccountFields'))
        obj.populatedAccountFields = ApiClient.convertToType(data['PopulatedAccountFields'], [AccountFieldKeyValuePair]);
      if (data.hasOwnProperty('RejectionReason'))
        obj.rejectionReason = ApiClient.convertToType(data['RejectionReason'], 'String');
      if (data.hasOwnProperty('BusinessType'))
        obj.businessType = ApiClient.convertToType(data['BusinessType'], 'String');
    }
    return obj;
  }

  /**
   * Address of the bank account
   * @member {String} bankAddress
   */
  exports.prototype.bankAddress = undefined;

  /**
   * Address of the payee
   * @member {String} accountHolderAddress
   */
  exports.prototype.accountHolderAddress = undefined;

  /**
   * Account Holders Vat Number
   * @member {String} vatNumber
   */
  exports.prototype.vatNumber = undefined;

  /**
   * List of stores to attach to Account
   * @member {Array.<Number>} storeIds
   */
  exports.prototype.storeIds = undefined;

  /**
   * Name of Bank
   * @member {String} bankName
   */
  exports.prototype.bankName = undefined;

  /**
   * Name of this account
   * @member {String} accountName
   */
  exports.prototype.accountName = undefined;

  /**
   * IBAN of this account
   * @member {String} iban
   */
  exports.prototype.iban = undefined;

  /**
   * SWIFT of this bank account
   * @member {String} swift
   */
  exports.prototype.swift = undefined;

  /**
   * National Clearing Code (BSB in Australia, Routing Number in USA/Canada, NCC in NZ)
   * @member {String} nationalClearingCode
   */
  exports.prototype.nationalClearingCode = undefined;

  /**
   * A list of one or more populated account fields (field key-value pairs).  If this list contains at least one item, the Iban, Swift and NationalClearingCode fields will be ignored.
   * @member {Array.<module:model/AccountFieldKeyValuePair>} populatedAccountFields
   */
  exports.prototype.populatedAccountFields = undefined;

  /**
   * Reason for Rejection
   * @member {String} rejectionReason
   */
  exports.prototype.rejectionReason = undefined;

  /**
   * Business Type
   * @member {module:model/BankAccountDetailsUpdateRequest.BusinessTypeEnum} businessType
   */
  exports.prototype.businessType = undefined;



  /**
   * Allowed values for the <code>businessType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BusinessTypeEnum = {
    /**
     * value: "Individual"
     * @const
     */
    individual: "Individual",

    /**
     * value: "Company"
     * @const
     */
    company: "Company",

    /**
     * value: "NonProfit"
     * @const
     */
    nonProfit: "NonProfit",

    /**
     * value: "GovernmentEntity"
     * @const
     */
    governmentEntity: "GovernmentEntity"
  };

  return exports;

}));
