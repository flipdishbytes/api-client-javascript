/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Channel model module.
 * @module model/Channel
 * @version 1.0.0
 */
class Channel {
    /**
     * Constructs a new <code>Channel</code>.
     * @alias module:model/Channel
     */
    constructor() { 
        
        Channel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Channel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Channel} obj Optional instance to populate.
     * @return {module:model/Channel} The populated <code>Channel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Channel();

            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'Number');
            }
            if (data.hasOwnProperty('TranslationKey')) {
                obj['TranslationKey'] = ApiClient.convertToType(data['TranslationKey'], 'String');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('LogoUri')) {
                obj['LogoUri'] = ApiClient.convertToType(data['LogoUri'], 'String');
            }
            if (data.hasOwnProperty('Available')) {
                obj['Available'] = ApiClient.convertToType(data['Available'], 'Boolean');
            }
            if (data.hasOwnProperty('MaintainedExternally')) {
                obj['MaintainedExternally'] = ApiClient.convertToType(data['MaintainedExternally'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Channel Id
 * @member {Number} ChannelId
 */
Channel.prototype['ChannelId'] = undefined;

/**
 * Channel TranslationKey
 * @member {String} TranslationKey
 */
Channel.prototype['TranslationKey'] = undefined;

/**
 * Channel Source
 * @member {module:model/Channel.SourceEnum} Source
 */
Channel.prototype['Source'] = undefined;

/**
 * Channel Logo URl
 * @member {String} LogoUri
 */
Channel.prototype['LogoUri'] = undefined;

/**
 * Channel is Available or not
 * @member {Boolean} Available
 */
Channel.prototype['Available'] = undefined;

/**
 * Channel is Maintained Externally or not
 * @member {Boolean} MaintainedExternally
 */
Channel.prototype['MaintainedExternally'] = undefined;





/**
 * Allowed values for the <code>Source</code> property.
 * @enum {String}
 * @readonly
 */
Channel['SourceEnum'] = {

    /**
     * value: "Internal"
     * @const
     */
    "Internal": "Internal",

    /**
     * value: "External"
     * @const
     */
    "External": "External"
};



export default Channel;

