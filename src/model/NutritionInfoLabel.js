/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NutritionInfoLabel model module.
 * @module model/NutritionInfoLabel
 * @version 1.0.0
 */
class NutritionInfoLabel {
    /**
     * Constructs a new <code>NutritionInfoLabel</code>.
     * @alias module:model/NutritionInfoLabel
     */
    constructor() { 
        
        NutritionInfoLabel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NutritionInfoLabel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NutritionInfoLabel} obj Optional instance to populate.
     * @return {module:model/NutritionInfoLabel} The populated <code>NutritionInfoLabel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NutritionInfoLabel();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Values')) {
                obj['Values'] = ApiClient.convertToType(data['Values'], ['String']);
            }
            if (data.hasOwnProperty('IconUrl')) {
                obj['IconUrl'] = ApiClient.convertToType(data['IconUrl'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of the allergen / ingredient
 * @member {String} Name
 */
NutritionInfoLabel.prototype['Name'] = undefined;

/**
 * Optional list of values for the allergen / ingredient
 * @member {Array.<String>} Values
 */
NutritionInfoLabel.prototype['Values'] = undefined;

/**
 * Url to the icon for the allergen / ingredient
 * @member {String} IconUrl
 */
NutritionInfoLabel.prototype['IconUrl'] = undefined;






export default NutritionInfoLabel;

