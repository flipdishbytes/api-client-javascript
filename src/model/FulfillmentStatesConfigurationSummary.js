/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FulfillmentStatesConfiguredStore'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FulfillmentStatesConfiguredStore'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.FulfillmentStatesConfigurationSummary = factory(root.Flipdish.ApiClient, root.Flipdish.FulfillmentStatesConfiguredStore);
  }
}(this, function(ApiClient, FulfillmentStatesConfiguredStore) {
  'use strict';

  /**
   * The FulfillmentStatesConfigurationSummary model module.
   * @module model/FulfillmentStatesConfigurationSummary
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>FulfillmentStatesConfigurationSummary</code>.
   * App store app configuration header information
   * @alias module:model/FulfillmentStatesConfigurationSummary
   * @class
   * @param AppId {String} AppId
   */
  var exports = function(AppId) {
    this.AppId = AppId;
  };

  /**
   * Constructs a <code>FulfillmentStatesConfigurationSummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FulfillmentStatesConfigurationSummary} obj Optional instance to populate.
   * @return {module:model/FulfillmentStatesConfigurationSummary} The populated <code>FulfillmentStatesConfigurationSummary</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('AppId'))
        obj.AppId = ApiClient.convertToType(data['AppId'], 'String');
      if (data.hasOwnProperty('ConfigurationUid'))
        obj.ConfigurationUid = ApiClient.convertToType(data['ConfigurationUid'], 'String');
      if (data.hasOwnProperty('Name'))
        obj.Name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('StoreSelectorType'))
        obj.StoreSelectorType = ApiClient.convertToType(data['StoreSelectorType'], 'String');
      if (data.hasOwnProperty('Stores'))
        obj.Stores = ApiClient.convertToType(data['Stores'], [FulfillmentStatesConfiguredStore]);
    }
    return obj;
  }

  /**
   * AppId
   * @member {String} AppId
   */
  exports.prototype.AppId = undefined;

  /**
   * Configuration Uid
   * @member {String} ConfigurationUid
   */
  exports.prototype.ConfigurationUid = undefined;

  /**
   * Name
   * @member {String} Name
   */
  exports.prototype.Name = undefined;

  /**
   * Store selector type
   * @member {module:model/FulfillmentStatesConfigurationSummary.StoreSelectorTypeEnum} StoreSelectorType
   */
  exports.prototype.StoreSelectorType = undefined;

  /**
   * Stores
   * @member {Array.<module:model/FulfillmentStatesConfiguredStore>} Stores
   */
  exports.prototype.Stores = undefined;



  /**
   * Allowed values for the <code>StoreSelectorType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StoreSelectorTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    None: "None",

    /**
     * value: "Single"
     * @const
     */
    Single: "Single",

    /**
     * value: "Multiple"
     * @const
     */
    Multiple: "Multiple"
  };

  return exports;

}));
