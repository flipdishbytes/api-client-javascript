/**
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.OAuthClient = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The OAuthClient model module.
   * @module model/OAuthClient
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OAuthClient</code>.
   * Oauth client (also knowns as &#39;app&#39;)
   * @alias module:model/OAuthClient
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>OAuthClient</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OAuthClient} obj Optional instance to populate.
   * @return {module:model/OAuthClient} The populated <code>OAuthClient</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('ClientId')) {
        obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'String');
      }
      if (data.hasOwnProperty('ClientName')) {
        obj['ClientName'] = ApiClient.convertToType(data['ClientName'], 'String');
      }
      if (data.hasOwnProperty('OwnerUserId')) {
        obj['OwnerUserId'] = ApiClient.convertToType(data['OwnerUserId'], 'Number');
      }
      if (data.hasOwnProperty('LogoUri')) {
        obj['LogoUri'] = ApiClient.convertToType(data['LogoUri'], 'String');
      }
    }
    return obj;
  }

  /**
   * Oauth client identifier
   * @member {String} ClientId
   */
  exports.prototype['ClientId'] = undefined;
  /**
   * Oauth client name
   * @member {String} ClientName
   */
  exports.prototype['ClientName'] = undefined;
  /**
   * Oauth client owner user identifier
   * @member {Number} OwnerUserId
   */
  exports.prototype['OwnerUserId'] = undefined;
  /**
   * Oauth client logo uri
   * @member {String} LogoUri
   */
  exports.prototype['LogoUri'] = undefined;



  return exports;
}));


