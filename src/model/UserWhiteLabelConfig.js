/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserWhiteLabelConfig model module.
 * @module model/UserWhiteLabelConfig
 * @version 1.0.0
 */
class UserWhiteLabelConfig {
    /**
     * Constructs a new <code>UserWhiteLabelConfig</code>.
     * User WhiteLabelConfig
     * @alias module:model/UserWhiteLabelConfig
     */
    constructor() { 
        
        UserWhiteLabelConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserWhiteLabelConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserWhiteLabelConfig} obj Optional instance to populate.
     * @return {module:model/UserWhiteLabelConfig} The populated <code>UserWhiteLabelConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserWhiteLabelConfig();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('ConfigId')) {
                obj['ConfigId'] = ApiClient.convertToType(data['ConfigId'], 'Number');
            }
            if (data.hasOwnProperty('AppId')) {
                obj['AppId'] = ApiClient.convertToType(data['AppId'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Level')) {
                obj['Level'] = ApiClient.convertToType(data['Level'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Identifier
 * @member {Number} Id
 */
UserWhiteLabelConfig.prototype['Id'] = undefined;

/**
 * WlConfigId
 * @member {Number} ConfigId
 */
UserWhiteLabelConfig.prototype['ConfigId'] = undefined;

/**
 * Brand Id
 * @member {String} AppId
 */
UserWhiteLabelConfig.prototype['AppId'] = undefined;

/**
 * WhiteLabel Name
 * @member {String} Name
 */
UserWhiteLabelConfig.prototype['Name'] = undefined;

/**
 * WhiteLabel Access Level
 * @member {module:model/UserWhiteLabelConfig.LevelEnum} Level
 */
UserWhiteLabelConfig.prototype['Level'] = undefined;





/**
 * Allowed values for the <code>Level</code> property.
 * @enum {String}
 * @readonly
 */
UserWhiteLabelConfig['LevelEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Owner"
     * @const
     */
    "Owner": "Owner",

    /**
     * value: "StoreOwner"
     * @const
     */
    "StoreOwner": "StoreOwner",

    /**
     * value: "PropertyOwner"
     * @const
     */
    "PropertyOwner": "PropertyOwner",

    /**
     * value: "ManagedOwner"
     * @const
     */
    "ManagedOwner": "ManagedOwner",

    /**
     * value: "Integrator"
     * @const
     */
    "Integrator": "Integrator",

    /**
     * value: "PropertyManager"
     * @const
     */
    "PropertyManager": "PropertyManager",

    /**
     * value: "StoreManager"
     * @const
     */
    "StoreManager": "StoreManager",

    /**
     * value: "StoreStaff"
     * @const
     */
    "StoreStaff": "StoreStaff",

    /**
     * value: "StoreReadOnlyAccess"
     * @const
     */
    "StoreReadOnlyAccess": "StoreReadOnlyAccess",

    /**
     * value: "FinanceManager"
     * @const
     */
    "FinanceManager": "FinanceManager",

    /**
     * value: "Support"
     * @const
     */
    "Support": "Support"
};



export default UserWhiteLabelConfig;

