/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalyticsClientEvent', 'model/AppCreatedEvent', 'model/AppUpdatedEvent', 'model/BankAccountCreatedEvent', 'model/BankAccountDeletedEvent', 'model/BankAccountUpdatedEvent', 'model/CertificateCreatedEvent', 'model/CertificateRenewedEvent', 'model/CustomerConsentUpdatedEvent', 'model/CustomerCreatedEvent', 'model/CustomerUpdatedEvent', 'model/DeliveryZoneCreatedEvent', 'model/DeliveryZoneDeletedEvent', 'model/DeliveryZoneUpdatedEvent', 'model/DnsVerifiedEvent', 'model/EmvNotificationEvent', 'model/HydraAssignedEvent', 'model/HydraConnectionStatusChangedEvent', 'model/HydraRequestResetEvent', 'model/HydraSettingChangedEvent', 'model/HydraStoreAssignedEvent', 'model/HydraStoreUnassignedEvent', 'model/HydraUnAssignedEvent', 'model/KioskBluetoothInstallUpdateInitiateEvent', 'model/KioskBluetoothPairingModeEvent', 'model/KioskBluetoothTerminalUpdatedEvent', 'model/KioskBluetoothUnpairingModeEvent', 'model/LoyaltyCampaignCreatedEvent', 'model/LoyaltyCampaignDeletedEvent', 'model/LoyaltyCampaignUpdatedEvent', 'model/MenuCheckpointCreatedEvent', 'model/MenuCreatedEvent', 'model/MenuItemOptionSetCreatedEvent', 'model/MenuItemOptionSetDeletedEvent', 'model/MenuItemOptionSetItemCreatedEvent', 'model/MenuItemOptionSetItemDeletedEvent', 'model/MenuItemOptionSetItemUpdatedEvent', 'model/MenuItemOptionSetUpdatedEvent', 'model/MenuSectionCreatedEvent', 'model/MenuSectionDeletedEvent', 'model/MenuSectionItemCreatedEvent', 'model/MenuSectionItemDeletedEvent', 'model/MenuSectionItemUpdatedEvent', 'model/MenuSectionUpdatedEvent', 'model/MenuUpdatedEvent', 'model/MenuUploadedEvent', 'model/OrderAcceptedEvent', 'model/OrderCreatedEvent', 'model/OrderCustomerTrackingCreatedEvent', 'model/OrderDeliveryTrackingStatusUpdatedEvent', 'model/OrderDispatchedEvent', 'model/OrderRatingUpdatedEvent', 'model/OrderRefundedEvent', 'model/OrderRejectedEvent', 'model/OrderTipUpdatedEvent', 'model/PhoneCallEndedEvent', 'model/PhoneCallStartedEvent', 'model/PrinterAssignedToStoreEvent', 'model/PrinterTurnedOffEvent', 'model/PrinterTurnedOnEvent', 'model/PrinterUnassignedFromStoreEvent', 'model/PushNotificationDeletedEvent', 'model/PushNotificationScheduledEvent', 'model/PushNotificationSentEvent', 'model/RetentionCampaignCreatedEvent', 'model/RetentionCampaignDeletedEvent', 'model/RetentionCampaignUpdatedEvent', 'model/SmsReceivedEvent', 'model/StoreAddressUpdatedEvent', 'model/StoreArchivedEvent', 'model/StoreBusinessHoursOverrideCreatedEvent', 'model/StoreBusinessHoursOverrideDeletedEvent', 'model/StoreCreatedEvent', 'model/StoreDeletedEvent', 'model/StoreGroupCreatedEvent', 'model/StoreGroupDeletedEvent', 'model/StoreGroupUpdatedEvent', 'model/StoreKioskSettingUpdatedEvent', 'model/StoreLogoCreatedEvent', 'model/StoreLogoDeletedEvent', 'model/StoreLogoUpdatedEvent', 'model/StoreMenuAssignedEvent', 'model/StoreOpeningHoursUpdatedEvent', 'model/StoreOrderCapacityUpdatedEvent', 'model/StorePreOrderConfigUpdatedEvent', 'model/StorePublishedEvent', 'model/StoreUnarchivedEvent', 'model/StoreUnpublishedEvent', 'model/StoreUpdatedEvent', 'model/TeammateDeletedEvent', 'model/TeammateInviteAcceptedEvent', 'model/TeammateInviteSentEvent', 'model/TeammateUpdatedEvent', 'model/UserAnsweredSignupQuestionsEvent', 'model/UserCreatedEvent', 'model/UserDeletedEvent', 'model/UserLoginEvent', 'model/UserPasswordCreatedEvent', 'model/UserUpdatedEvent', 'model/VoucherCreatedEvent', 'model/VoucherDeletedEvent', 'model/VoucherUpdatedEvent', 'model/WebhookSubscriptionCreatedEvent', 'model/WebhookSubscriptionDeletedEvent', 'model/WebhookSubscriptionUpdatedEvent', 'model/WebsiteUpdatedEvent', 'model/WebsiteVanityUrlUpdatedEvent'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AnalyticsClientEvent'), require('./AppCreatedEvent'), require('./AppUpdatedEvent'), require('./BankAccountCreatedEvent'), require('./BankAccountDeletedEvent'), require('./BankAccountUpdatedEvent'), require('./CertificateCreatedEvent'), require('./CertificateRenewedEvent'), require('./CustomerConsentUpdatedEvent'), require('./CustomerCreatedEvent'), require('./CustomerUpdatedEvent'), require('./DeliveryZoneCreatedEvent'), require('./DeliveryZoneDeletedEvent'), require('./DeliveryZoneUpdatedEvent'), require('./DnsVerifiedEvent'), require('./EmvNotificationEvent'), require('./HydraAssignedEvent'), require('./HydraConnectionStatusChangedEvent'), require('./HydraRequestResetEvent'), require('./HydraSettingChangedEvent'), require('./HydraStoreAssignedEvent'), require('./HydraStoreUnassignedEvent'), require('./HydraUnAssignedEvent'), require('./KioskBluetoothInstallUpdateInitiateEvent'), require('./KioskBluetoothPairingModeEvent'), require('./KioskBluetoothTerminalUpdatedEvent'), require('./KioskBluetoothUnpairingModeEvent'), require('./LoyaltyCampaignCreatedEvent'), require('./LoyaltyCampaignDeletedEvent'), require('./LoyaltyCampaignUpdatedEvent'), require('./MenuCheckpointCreatedEvent'), require('./MenuCreatedEvent'), require('./MenuItemOptionSetCreatedEvent'), require('./MenuItemOptionSetDeletedEvent'), require('./MenuItemOptionSetItemCreatedEvent'), require('./MenuItemOptionSetItemDeletedEvent'), require('./MenuItemOptionSetItemUpdatedEvent'), require('./MenuItemOptionSetUpdatedEvent'), require('./MenuSectionCreatedEvent'), require('./MenuSectionDeletedEvent'), require('./MenuSectionItemCreatedEvent'), require('./MenuSectionItemDeletedEvent'), require('./MenuSectionItemUpdatedEvent'), require('./MenuSectionUpdatedEvent'), require('./MenuUpdatedEvent'), require('./MenuUploadedEvent'), require('./OrderAcceptedEvent'), require('./OrderCreatedEvent'), require('./OrderCustomerTrackingCreatedEvent'), require('./OrderDeliveryTrackingStatusUpdatedEvent'), require('./OrderDispatchedEvent'), require('./OrderRatingUpdatedEvent'), require('./OrderRefundedEvent'), require('./OrderRejectedEvent'), require('./OrderTipUpdatedEvent'), require('./PhoneCallEndedEvent'), require('./PhoneCallStartedEvent'), require('./PrinterAssignedToStoreEvent'), require('./PrinterTurnedOffEvent'), require('./PrinterTurnedOnEvent'), require('./PrinterUnassignedFromStoreEvent'), require('./PushNotificationDeletedEvent'), require('./PushNotificationScheduledEvent'), require('./PushNotificationSentEvent'), require('./RetentionCampaignCreatedEvent'), require('./RetentionCampaignDeletedEvent'), require('./RetentionCampaignUpdatedEvent'), require('./SmsReceivedEvent'), require('./StoreAddressUpdatedEvent'), require('./StoreArchivedEvent'), require('./StoreBusinessHoursOverrideCreatedEvent'), require('./StoreBusinessHoursOverrideDeletedEvent'), require('./StoreCreatedEvent'), require('./StoreDeletedEvent'), require('./StoreGroupCreatedEvent'), require('./StoreGroupDeletedEvent'), require('./StoreGroupUpdatedEvent'), require('./StoreKioskSettingUpdatedEvent'), require('./StoreLogoCreatedEvent'), require('./StoreLogoDeletedEvent'), require('./StoreLogoUpdatedEvent'), require('./StoreMenuAssignedEvent'), require('./StoreOpeningHoursUpdatedEvent'), require('./StoreOrderCapacityUpdatedEvent'), require('./StorePreOrderConfigUpdatedEvent'), require('./StorePublishedEvent'), require('./StoreUnarchivedEvent'), require('./StoreUnpublishedEvent'), require('./StoreUpdatedEvent'), require('./TeammateDeletedEvent'), require('./TeammateInviteAcceptedEvent'), require('./TeammateInviteSentEvent'), require('./TeammateUpdatedEvent'), require('./UserAnsweredSignupQuestionsEvent'), require('./UserCreatedEvent'), require('./UserDeletedEvent'), require('./UserLoginEvent'), require('./UserPasswordCreatedEvent'), require('./UserUpdatedEvent'), require('./VoucherCreatedEvent'), require('./VoucherDeletedEvent'), require('./VoucherUpdatedEvent'), require('./WebhookSubscriptionCreatedEvent'), require('./WebhookSubscriptionDeletedEvent'), require('./WebhookSubscriptionUpdatedEvent'), require('./WebsiteUpdatedEvent'), require('./WebsiteVanityUrlUpdatedEvent'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.EventSearchResult = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.AnalyticsClientEvent, root.FlipdishOpenApiV10.AppCreatedEvent, root.FlipdishOpenApiV10.AppUpdatedEvent, root.FlipdishOpenApiV10.BankAccountCreatedEvent, root.FlipdishOpenApiV10.BankAccountDeletedEvent, root.FlipdishOpenApiV10.BankAccountUpdatedEvent, root.FlipdishOpenApiV10.CertificateCreatedEvent, root.FlipdishOpenApiV10.CertificateRenewedEvent, root.FlipdishOpenApiV10.CustomerConsentUpdatedEvent, root.FlipdishOpenApiV10.CustomerCreatedEvent, root.FlipdishOpenApiV10.CustomerUpdatedEvent, root.FlipdishOpenApiV10.DeliveryZoneCreatedEvent, root.FlipdishOpenApiV10.DeliveryZoneDeletedEvent, root.FlipdishOpenApiV10.DeliveryZoneUpdatedEvent, root.FlipdishOpenApiV10.DnsVerifiedEvent, root.FlipdishOpenApiV10.EmvNotificationEvent, root.FlipdishOpenApiV10.HydraAssignedEvent, root.FlipdishOpenApiV10.HydraConnectionStatusChangedEvent, root.FlipdishOpenApiV10.HydraRequestResetEvent, root.FlipdishOpenApiV10.HydraSettingChangedEvent, root.FlipdishOpenApiV10.HydraStoreAssignedEvent, root.FlipdishOpenApiV10.HydraStoreUnassignedEvent, root.FlipdishOpenApiV10.HydraUnAssignedEvent, root.FlipdishOpenApiV10.KioskBluetoothInstallUpdateInitiateEvent, root.FlipdishOpenApiV10.KioskBluetoothPairingModeEvent, root.FlipdishOpenApiV10.KioskBluetoothTerminalUpdatedEvent, root.FlipdishOpenApiV10.KioskBluetoothUnpairingModeEvent, root.FlipdishOpenApiV10.LoyaltyCampaignCreatedEvent, root.FlipdishOpenApiV10.LoyaltyCampaignDeletedEvent, root.FlipdishOpenApiV10.LoyaltyCampaignUpdatedEvent, root.FlipdishOpenApiV10.MenuCheckpointCreatedEvent, root.FlipdishOpenApiV10.MenuCreatedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetCreatedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetDeletedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetItemCreatedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetItemDeletedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetItemUpdatedEvent, root.FlipdishOpenApiV10.MenuItemOptionSetUpdatedEvent, root.FlipdishOpenApiV10.MenuSectionCreatedEvent, root.FlipdishOpenApiV10.MenuSectionDeletedEvent, root.FlipdishOpenApiV10.MenuSectionItemCreatedEvent, root.FlipdishOpenApiV10.MenuSectionItemDeletedEvent, root.FlipdishOpenApiV10.MenuSectionItemUpdatedEvent, root.FlipdishOpenApiV10.MenuSectionUpdatedEvent, root.FlipdishOpenApiV10.MenuUpdatedEvent, root.FlipdishOpenApiV10.MenuUploadedEvent, root.FlipdishOpenApiV10.OrderAcceptedEvent, root.FlipdishOpenApiV10.OrderCreatedEvent, root.FlipdishOpenApiV10.OrderCustomerTrackingCreatedEvent, root.FlipdishOpenApiV10.OrderDeliveryTrackingStatusUpdatedEvent, root.FlipdishOpenApiV10.OrderDispatchedEvent, root.FlipdishOpenApiV10.OrderRatingUpdatedEvent, root.FlipdishOpenApiV10.OrderRefundedEvent, root.FlipdishOpenApiV10.OrderRejectedEvent, root.FlipdishOpenApiV10.OrderTipUpdatedEvent, root.FlipdishOpenApiV10.PhoneCallEndedEvent, root.FlipdishOpenApiV10.PhoneCallStartedEvent, root.FlipdishOpenApiV10.PrinterAssignedToStoreEvent, root.FlipdishOpenApiV10.PrinterTurnedOffEvent, root.FlipdishOpenApiV10.PrinterTurnedOnEvent, root.FlipdishOpenApiV10.PrinterUnassignedFromStoreEvent, root.FlipdishOpenApiV10.PushNotificationDeletedEvent, root.FlipdishOpenApiV10.PushNotificationScheduledEvent, root.FlipdishOpenApiV10.PushNotificationSentEvent, root.FlipdishOpenApiV10.RetentionCampaignCreatedEvent, root.FlipdishOpenApiV10.RetentionCampaignDeletedEvent, root.FlipdishOpenApiV10.RetentionCampaignUpdatedEvent, root.FlipdishOpenApiV10.SmsReceivedEvent, root.FlipdishOpenApiV10.StoreAddressUpdatedEvent, root.FlipdishOpenApiV10.StoreArchivedEvent, root.FlipdishOpenApiV10.StoreBusinessHoursOverrideCreatedEvent, root.FlipdishOpenApiV10.StoreBusinessHoursOverrideDeletedEvent, root.FlipdishOpenApiV10.StoreCreatedEvent, root.FlipdishOpenApiV10.StoreDeletedEvent, root.FlipdishOpenApiV10.StoreGroupCreatedEvent, root.FlipdishOpenApiV10.StoreGroupDeletedEvent, root.FlipdishOpenApiV10.StoreGroupUpdatedEvent, root.FlipdishOpenApiV10.StoreKioskSettingUpdatedEvent, root.FlipdishOpenApiV10.StoreLogoCreatedEvent, root.FlipdishOpenApiV10.StoreLogoDeletedEvent, root.FlipdishOpenApiV10.StoreLogoUpdatedEvent, root.FlipdishOpenApiV10.StoreMenuAssignedEvent, root.FlipdishOpenApiV10.StoreOpeningHoursUpdatedEvent, root.FlipdishOpenApiV10.StoreOrderCapacityUpdatedEvent, root.FlipdishOpenApiV10.StorePreOrderConfigUpdatedEvent, root.FlipdishOpenApiV10.StorePublishedEvent, root.FlipdishOpenApiV10.StoreUnarchivedEvent, root.FlipdishOpenApiV10.StoreUnpublishedEvent, root.FlipdishOpenApiV10.StoreUpdatedEvent, root.FlipdishOpenApiV10.TeammateDeletedEvent, root.FlipdishOpenApiV10.TeammateInviteAcceptedEvent, root.FlipdishOpenApiV10.TeammateInviteSentEvent, root.FlipdishOpenApiV10.TeammateUpdatedEvent, root.FlipdishOpenApiV10.UserAnsweredSignupQuestionsEvent, root.FlipdishOpenApiV10.UserCreatedEvent, root.FlipdishOpenApiV10.UserDeletedEvent, root.FlipdishOpenApiV10.UserLoginEvent, root.FlipdishOpenApiV10.UserPasswordCreatedEvent, root.FlipdishOpenApiV10.UserUpdatedEvent, root.FlipdishOpenApiV10.VoucherCreatedEvent, root.FlipdishOpenApiV10.VoucherDeletedEvent, root.FlipdishOpenApiV10.VoucherUpdatedEvent, root.FlipdishOpenApiV10.WebhookSubscriptionCreatedEvent, root.FlipdishOpenApiV10.WebhookSubscriptionDeletedEvent, root.FlipdishOpenApiV10.WebhookSubscriptionUpdatedEvent, root.FlipdishOpenApiV10.WebsiteUpdatedEvent, root.FlipdishOpenApiV10.WebsiteVanityUrlUpdatedEvent);
  }
}(this, function(ApiClient, AnalyticsClientEvent, AppCreatedEvent, AppUpdatedEvent, BankAccountCreatedEvent, BankAccountDeletedEvent, BankAccountUpdatedEvent, CertificateCreatedEvent, CertificateRenewedEvent, CustomerConsentUpdatedEvent, CustomerCreatedEvent, CustomerUpdatedEvent, DeliveryZoneCreatedEvent, DeliveryZoneDeletedEvent, DeliveryZoneUpdatedEvent, DnsVerifiedEvent, EmvNotificationEvent, HydraAssignedEvent, HydraConnectionStatusChangedEvent, HydraRequestResetEvent, HydraSettingChangedEvent, HydraStoreAssignedEvent, HydraStoreUnassignedEvent, HydraUnAssignedEvent, KioskBluetoothInstallUpdateInitiateEvent, KioskBluetoothPairingModeEvent, KioskBluetoothTerminalUpdatedEvent, KioskBluetoothUnpairingModeEvent, LoyaltyCampaignCreatedEvent, LoyaltyCampaignDeletedEvent, LoyaltyCampaignUpdatedEvent, MenuCheckpointCreatedEvent, MenuCreatedEvent, MenuItemOptionSetCreatedEvent, MenuItemOptionSetDeletedEvent, MenuItemOptionSetItemCreatedEvent, MenuItemOptionSetItemDeletedEvent, MenuItemOptionSetItemUpdatedEvent, MenuItemOptionSetUpdatedEvent, MenuSectionCreatedEvent, MenuSectionDeletedEvent, MenuSectionItemCreatedEvent, MenuSectionItemDeletedEvent, MenuSectionItemUpdatedEvent, MenuSectionUpdatedEvent, MenuUpdatedEvent, MenuUploadedEvent, OrderAcceptedEvent, OrderCreatedEvent, OrderCustomerTrackingCreatedEvent, OrderDeliveryTrackingStatusUpdatedEvent, OrderDispatchedEvent, OrderRatingUpdatedEvent, OrderRefundedEvent, OrderRejectedEvent, OrderTipUpdatedEvent, PhoneCallEndedEvent, PhoneCallStartedEvent, PrinterAssignedToStoreEvent, PrinterTurnedOffEvent, PrinterTurnedOnEvent, PrinterUnassignedFromStoreEvent, PushNotificationDeletedEvent, PushNotificationScheduledEvent, PushNotificationSentEvent, RetentionCampaignCreatedEvent, RetentionCampaignDeletedEvent, RetentionCampaignUpdatedEvent, SmsReceivedEvent, StoreAddressUpdatedEvent, StoreArchivedEvent, StoreBusinessHoursOverrideCreatedEvent, StoreBusinessHoursOverrideDeletedEvent, StoreCreatedEvent, StoreDeletedEvent, StoreGroupCreatedEvent, StoreGroupDeletedEvent, StoreGroupUpdatedEvent, StoreKioskSettingUpdatedEvent, StoreLogoCreatedEvent, StoreLogoDeletedEvent, StoreLogoUpdatedEvent, StoreMenuAssignedEvent, StoreOpeningHoursUpdatedEvent, StoreOrderCapacityUpdatedEvent, StorePreOrderConfigUpdatedEvent, StorePublishedEvent, StoreUnarchivedEvent, StoreUnpublishedEvent, StoreUpdatedEvent, TeammateDeletedEvent, TeammateInviteAcceptedEvent, TeammateInviteSentEvent, TeammateUpdatedEvent, UserAnsweredSignupQuestionsEvent, UserCreatedEvent, UserDeletedEvent, UserLoginEvent, UserPasswordCreatedEvent, UserUpdatedEvent, VoucherCreatedEvent, VoucherDeletedEvent, VoucherUpdatedEvent, WebhookSubscriptionCreatedEvent, WebhookSubscriptionDeletedEvent, WebhookSubscriptionUpdatedEvent, WebsiteUpdatedEvent, WebsiteVanityUrlUpdatedEvent) {
  'use strict';

  /**
   * The EventSearchResult model module.
   * @module model/EventSearchResult
   * @version v1.0
   */

  /**
   * Constructs a new <code>EventSearchResult</code>.
   * 
   * @alias module:model/EventSearchResult
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>EventSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventSearchResult} obj Optional instance to populate.
   * @return {module:model/EventSearchResult} The populated <code>EventSearchResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('AppCreatedEvent'))
        obj.appCreatedEvent = ApiClient.convertToType(data['AppCreatedEvent'], [AppCreatedEvent]);
      if (data.hasOwnProperty('AppUpdatedEvent'))
        obj.appUpdatedEvent = ApiClient.convertToType(data['AppUpdatedEvent'], [AppUpdatedEvent]);
      if (data.hasOwnProperty('AnalyticsClientEvent'))
        obj.analyticsClientEvent = ApiClient.convertToType(data['AnalyticsClientEvent'], [AnalyticsClientEvent]);
      if (data.hasOwnProperty('OrderAcceptedEvent'))
        obj.orderAcceptedEvent = ApiClient.convertToType(data['OrderAcceptedEvent'], [OrderAcceptedEvent]);
      if (data.hasOwnProperty('OrderDispatchedEvent'))
        obj.orderDispatchedEvent = ApiClient.convertToType(data['OrderDispatchedEvent'], [OrderDispatchedEvent]);
      if (data.hasOwnProperty('OrderCustomerTrackingCreatedEvent'))
        obj.orderCustomerTrackingCreatedEvent = ApiClient.convertToType(data['OrderCustomerTrackingCreatedEvent'], [OrderCustomerTrackingCreatedEvent]);
      if (data.hasOwnProperty('OrderDeliveryTrackingStatusUpdatedEvent'))
        obj.orderDeliveryTrackingStatusUpdatedEvent = ApiClient.convertToType(data['OrderDeliveryTrackingStatusUpdatedEvent'], [OrderDeliveryTrackingStatusUpdatedEvent]);
      if (data.hasOwnProperty('OrderCreatedEvent'))
        obj.orderCreatedEvent = ApiClient.convertToType(data['OrderCreatedEvent'], [OrderCreatedEvent]);
      if (data.hasOwnProperty('OrderRatingUpdatedEvent'))
        obj.orderRatingUpdatedEvent = ApiClient.convertToType(data['OrderRatingUpdatedEvent'], [OrderRatingUpdatedEvent]);
      if (data.hasOwnProperty('OrderRefundedEvent'))
        obj.orderRefundedEvent = ApiClient.convertToType(data['OrderRefundedEvent'], [OrderRefundedEvent]);
      if (data.hasOwnProperty('OrderRejectedEvent'))
        obj.orderRejectedEvent = ApiClient.convertToType(data['OrderRejectedEvent'], [OrderRejectedEvent]);
      if (data.hasOwnProperty('OrderTipUpdatedEvent'))
        obj.orderTipUpdatedEvent = ApiClient.convertToType(data['OrderTipUpdatedEvent'], [OrderTipUpdatedEvent]);
      if (data.hasOwnProperty('OrderTerminalNotifications'))
        obj.orderTerminalNotifications = ApiClient.convertToType(data['OrderTerminalNotifications'], [EmvNotificationEvent]);
      if (data.hasOwnProperty('StoreCreatedEvent'))
        obj.storeCreatedEvent = ApiClient.convertToType(data['StoreCreatedEvent'], [StoreCreatedEvent]);
      if (data.hasOwnProperty('StoreDeletedEvent'))
        obj.storeDeletedEvent = ApiClient.convertToType(data['StoreDeletedEvent'], [StoreDeletedEvent]);
      if (data.hasOwnProperty('StoreAddressUpdatedEvent'))
        obj.storeAddressUpdatedEvent = ApiClient.convertToType(data['StoreAddressUpdatedEvent'], [StoreAddressUpdatedEvent]);
      if (data.hasOwnProperty('StoreKioskSettingUpdatedEvent'))
        obj.storeKioskSettingUpdatedEvent = ApiClient.convertToType(data['StoreKioskSettingUpdatedEvent'], [StoreKioskSettingUpdatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneCreatedEvent'))
        obj.deliveryZoneCreatedEvent = ApiClient.convertToType(data['DeliveryZoneCreatedEvent'], [DeliveryZoneCreatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneUpdatedEvent'))
        obj.deliveryZoneUpdatedEvent = ApiClient.convertToType(data['DeliveryZoneUpdatedEvent'], [DeliveryZoneUpdatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneDeletedEvent'))
        obj.deliveryZoneDeletedEvent = ApiClient.convertToType(data['DeliveryZoneDeletedEvent'], [DeliveryZoneDeletedEvent]);
      if (data.hasOwnProperty('StoreOpeningHoursUpdatedEvent'))
        obj.storeOpeningHoursUpdatedEvent = ApiClient.convertToType(data['StoreOpeningHoursUpdatedEvent'], [StoreOpeningHoursUpdatedEvent]);
      if (data.hasOwnProperty('StoreMenuAssignedEvent'))
        obj.storeMenuAssignedEvent = ApiClient.convertToType(data['StoreMenuAssignedEvent'], [StoreMenuAssignedEvent]);
      if (data.hasOwnProperty('StoreBusinessHoursOverrideCreatedEvent'))
        obj.storeBusinessHoursOverrideCreatedEvent = ApiClient.convertToType(data['StoreBusinessHoursOverrideCreatedEvent'], [StoreBusinessHoursOverrideCreatedEvent]);
      if (data.hasOwnProperty('StoreBusinessHoursOverrideDeletedEvent'))
        obj.storeBusinessHoursOverrideDeletedEvent = ApiClient.convertToType(data['StoreBusinessHoursOverrideDeletedEvent'], [StoreBusinessHoursOverrideDeletedEvent]);
      if (data.hasOwnProperty('StoreArchivedEvent'))
        obj.storeArchivedEvent = ApiClient.convertToType(data['StoreArchivedEvent'], [StoreArchivedEvent]);
      if (data.hasOwnProperty('StoreUnarchivedEvent'))
        obj.storeUnarchivedEvent = ApiClient.convertToType(data['StoreUnarchivedEvent'], [StoreUnarchivedEvent]);
      if (data.hasOwnProperty('StorePublishedEvent'))
        obj.storePublishedEvent = ApiClient.convertToType(data['StorePublishedEvent'], [StorePublishedEvent]);
      if (data.hasOwnProperty('StoreUnpublishedEvent'))
        obj.storeUnpublishedEvent = ApiClient.convertToType(data['StoreUnpublishedEvent'], [StoreUnpublishedEvent]);
      if (data.hasOwnProperty('StoreUpdatedEvent'))
        obj.storeUpdatedEvent = ApiClient.convertToType(data['StoreUpdatedEvent'], [StoreUpdatedEvent]);
      if (data.hasOwnProperty('StorePreOrderConfigUpdatedEvent'))
        obj.storePreOrderConfigUpdatedEvent = ApiClient.convertToType(data['StorePreOrderConfigUpdatedEvent'], [StorePreOrderConfigUpdatedEvent]);
      if (data.hasOwnProperty('StoreLogoCreatedEvent'))
        obj.storeLogoCreatedEvent = ApiClient.convertToType(data['StoreLogoCreatedEvent'], [StoreLogoCreatedEvent]);
      if (data.hasOwnProperty('StoreLogoUpdatedEvent'))
        obj.storeLogoUpdatedEvent = ApiClient.convertToType(data['StoreLogoUpdatedEvent'], [StoreLogoUpdatedEvent]);
      if (data.hasOwnProperty('StoreLogoDeletedEvent'))
        obj.storeLogoDeletedEvent = ApiClient.convertToType(data['StoreLogoDeletedEvent'], [StoreLogoDeletedEvent]);
      if (data.hasOwnProperty('MenuCreatedEvent'))
        obj.menuCreatedEvent = ApiClient.convertToType(data['MenuCreatedEvent'], [MenuCreatedEvent]);
      if (data.hasOwnProperty('MenuUpdatedEvent'))
        obj.menuUpdatedEvent = ApiClient.convertToType(data['MenuUpdatedEvent'], [MenuUpdatedEvent]);
      if (data.hasOwnProperty('MenuUploadedEvent'))
        obj.menuUploadedEvent = ApiClient.convertToType(data['MenuUploadedEvent'], [MenuUploadedEvent]);
      if (data.hasOwnProperty('MenuSectionCreatedEvent'))
        obj.menuSectionCreatedEvent = ApiClient.convertToType(data['MenuSectionCreatedEvent'], [MenuSectionCreatedEvent]);
      if (data.hasOwnProperty('MenuSectionUpdatedEvent'))
        obj.menuSectionUpdatedEvent = ApiClient.convertToType(data['MenuSectionUpdatedEvent'], [MenuSectionUpdatedEvent]);
      if (data.hasOwnProperty('MenuSectionDeletedEvent'))
        obj.menuSectionDeletedEvent = ApiClient.convertToType(data['MenuSectionDeletedEvent'], [MenuSectionDeletedEvent]);
      if (data.hasOwnProperty('MenuSectionItemCreatedEvent'))
        obj.menuSectionItemCreatedEvent = ApiClient.convertToType(data['MenuSectionItemCreatedEvent'], [MenuSectionItemCreatedEvent]);
      if (data.hasOwnProperty('MenuSectionItemUpdatedEvent'))
        obj.menuSectionItemUpdatedEvent = ApiClient.convertToType(data['MenuSectionItemUpdatedEvent'], [MenuSectionItemUpdatedEvent]);
      if (data.hasOwnProperty('MenuSectionItemDeletedEvent'))
        obj.menuSectionItemDeletedEvent = ApiClient.convertToType(data['MenuSectionItemDeletedEvent'], [MenuSectionItemDeletedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetCreatedEvent'))
        obj.menuItemOptionSetCreatedEvent = ApiClient.convertToType(data['MenuItemOptionSetCreatedEvent'], [MenuItemOptionSetCreatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetUpdatedEvent'))
        obj.menuItemOptionSetUpdatedEvent = ApiClient.convertToType(data['MenuItemOptionSetUpdatedEvent'], [MenuItemOptionSetUpdatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetDeletedEvent'))
        obj.menuItemOptionSetDeletedEvent = ApiClient.convertToType(data['MenuItemOptionSetDeletedEvent'], [MenuItemOptionSetDeletedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemCreatedEvent'))
        obj.menuItemOptionSetItemCreatedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemCreatedEvent'], [MenuItemOptionSetItemCreatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemUpdatedEvent'))
        obj.menuItemOptionSetItemUpdatedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemUpdatedEvent'], [MenuItemOptionSetItemUpdatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemDeletedEvent'))
        obj.menuItemOptionSetItemDeletedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemDeletedEvent'], [MenuItemOptionSetItemDeletedEvent]);
      if (data.hasOwnProperty('MenuCheckpointCreatedEvent'))
        obj.menuCheckpointCreatedEvent = ApiClient.convertToType(data['MenuCheckpointCreatedEvent'], [MenuCheckpointCreatedEvent]);
      if (data.hasOwnProperty('StoreGroupCreatedEvent'))
        obj.storeGroupCreatedEvent = ApiClient.convertToType(data['StoreGroupCreatedEvent'], [StoreGroupCreatedEvent]);
      if (data.hasOwnProperty('StoreGroupUpdatedEvent'))
        obj.storeGroupUpdatedEvent = ApiClient.convertToType(data['StoreGroupUpdatedEvent'], [StoreGroupUpdatedEvent]);
      if (data.hasOwnProperty('StoreGroupDeletedEvent'))
        obj.storeGroupDeletedEvent = ApiClient.convertToType(data['StoreGroupDeletedEvent'], [StoreGroupDeletedEvent]);
      if (data.hasOwnProperty('CustomerCreatedEvent'))
        obj.customerCreatedEvent = ApiClient.convertToType(data['CustomerCreatedEvent'], [CustomerCreatedEvent]);
      if (data.hasOwnProperty('CustomerUpdatedEvent'))
        obj.customerUpdatedEvent = ApiClient.convertToType(data['CustomerUpdatedEvent'], [CustomerUpdatedEvent]);
      if (data.hasOwnProperty('CustomerConsentUpdatedEvent'))
        obj.customerConsentUpdatedEvent = ApiClient.convertToType(data['CustomerConsentUpdatedEvent'], [CustomerConsentUpdatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionCreatedEvent'))
        obj.webhookSubscriptionCreatedEvent = ApiClient.convertToType(data['WebhookSubscriptionCreatedEvent'], [WebhookSubscriptionCreatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionUpdatedEvent'))
        obj.webhookSubscriptionUpdatedEvent = ApiClient.convertToType(data['WebhookSubscriptionUpdatedEvent'], [WebhookSubscriptionUpdatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionDeletedEvent'))
        obj.webhookSubscriptionDeletedEvent = ApiClient.convertToType(data['WebhookSubscriptionDeletedEvent'], [WebhookSubscriptionDeletedEvent]);
      if (data.hasOwnProperty('PrinterTurnedOnEvent'))
        obj.printerTurnedOnEvent = ApiClient.convertToType(data['PrinterTurnedOnEvent'], [PrinterTurnedOnEvent]);
      if (data.hasOwnProperty('PrinterTurnedOffEvent'))
        obj.printerTurnedOffEvent = ApiClient.convertToType(data['PrinterTurnedOffEvent'], [PrinterTurnedOffEvent]);
      if (data.hasOwnProperty('PrinterAssignedToStoreEvent'))
        obj.printerAssignedToStoreEvent = ApiClient.convertToType(data['PrinterAssignedToStoreEvent'], [PrinterAssignedToStoreEvent]);
      if (data.hasOwnProperty('PrinterUnassignedFromStoreEvent'))
        obj.printerUnassignedFromStoreEvent = ApiClient.convertToType(data['PrinterUnassignedFromStoreEvent'], [PrinterUnassignedFromStoreEvent]);
      if (data.hasOwnProperty('PhoneCallStartedEvent'))
        obj.phoneCallStartedEvent = ApiClient.convertToType(data['PhoneCallStartedEvent'], [PhoneCallStartedEvent]);
      if (data.hasOwnProperty('PhoneCallEndedEvent'))
        obj.phoneCallEndedEvent = ApiClient.convertToType(data['PhoneCallEndedEvent'], [PhoneCallEndedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignCreatedEvent'))
        obj.loyaltyCampaignCreatedEvent = ApiClient.convertToType(data['LoyaltyCampaignCreatedEvent'], [LoyaltyCampaignCreatedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignDeletedEvent'))
        obj.loyaltyCampaignDeletedEvent = ApiClient.convertToType(data['LoyaltyCampaignDeletedEvent'], [LoyaltyCampaignDeletedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignUpdatedEvent'))
        obj.loyaltyCampaignUpdatedEvent = ApiClient.convertToType(data['LoyaltyCampaignUpdatedEvent'], [LoyaltyCampaignUpdatedEvent]);
      if (data.hasOwnProperty('RetentionCampaignCreatedEvent'))
        obj.retentionCampaignCreatedEvent = ApiClient.convertToType(data['RetentionCampaignCreatedEvent'], [RetentionCampaignCreatedEvent]);
      if (data.hasOwnProperty('RetentionCampaignDeletedEvent'))
        obj.retentionCampaignDeletedEvent = ApiClient.convertToType(data['RetentionCampaignDeletedEvent'], [RetentionCampaignDeletedEvent]);
      if (data.hasOwnProperty('RetentionCampaignUpdatedEvent'))
        obj.retentionCampaignUpdatedEvent = ApiClient.convertToType(data['RetentionCampaignUpdatedEvent'], [RetentionCampaignUpdatedEvent]);
      if (data.hasOwnProperty('SmsReceivedEvent'))
        obj.smsReceivedEvent = ApiClient.convertToType(data['SmsReceivedEvent'], [SmsReceivedEvent]);
      if (data.hasOwnProperty('UserLoginEvent'))
        obj.userLoginEvent = ApiClient.convertToType(data['UserLoginEvent'], [UserLoginEvent]);
      if (data.hasOwnProperty('UserCreatedEvent'))
        obj.userCreatedEvent = ApiClient.convertToType(data['UserCreatedEvent'], [UserCreatedEvent]);
      if (data.hasOwnProperty('UserUpdatedEvent'))
        obj.userUpdatedEvent = ApiClient.convertToType(data['UserUpdatedEvent'], [UserUpdatedEvent]);
      if (data.hasOwnProperty('UserDeletedEvent'))
        obj.userDeletedEvent = ApiClient.convertToType(data['UserDeletedEvent'], [UserDeletedEvent]);
      if (data.hasOwnProperty('UserCreatedPasswordEvent'))
        obj.userCreatedPasswordEvent = ApiClient.convertToType(data['UserCreatedPasswordEvent'], [UserPasswordCreatedEvent]);
      if (data.hasOwnProperty('UserAnsweredSignupQuestionsEvent'))
        obj.userAnsweredSignupQuestionsEvent = ApiClient.convertToType(data['UserAnsweredSignupQuestionsEvent'], [UserAnsweredSignupQuestionsEvent]);
      if (data.hasOwnProperty('VoucherCreatedEvent'))
        obj.voucherCreatedEvent = ApiClient.convertToType(data['VoucherCreatedEvent'], [VoucherCreatedEvent]);
      if (data.hasOwnProperty('VoucherUpdatedEvent'))
        obj.voucherUpdatedEvent = ApiClient.convertToType(data['VoucherUpdatedEvent'], [VoucherUpdatedEvent]);
      if (data.hasOwnProperty('VoucherDeletedEvent'))
        obj.voucherDeletedEvent = ApiClient.convertToType(data['VoucherDeletedEvent'], [VoucherDeletedEvent]);
      if (data.hasOwnProperty('TeammateInviteSentEvent'))
        obj.teammateInviteSentEvent = ApiClient.convertToType(data['TeammateInviteSentEvent'], [TeammateInviteSentEvent]);
      if (data.hasOwnProperty('TeammateInviteAcceptedEvent'))
        obj.teammateInviteAcceptedEvent = ApiClient.convertToType(data['TeammateInviteAcceptedEvent'], [TeammateInviteAcceptedEvent]);
      if (data.hasOwnProperty('TeammateUpdatedEvent'))
        obj.teammateUpdatedEvent = ApiClient.convertToType(data['TeammateUpdatedEvent'], [TeammateUpdatedEvent]);
      if (data.hasOwnProperty('TeammateDeletedEvent'))
        obj.teammateDeletedEvent = ApiClient.convertToType(data['TeammateDeletedEvent'], [TeammateDeletedEvent]);
      if (data.hasOwnProperty('BankAccountCreatedEvent'))
        obj.bankAccountCreatedEvent = ApiClient.convertToType(data['BankAccountCreatedEvent'], [BankAccountCreatedEvent]);
      if (data.hasOwnProperty('BankAccountUpdatedEvent'))
        obj.bankAccountUpdatedEvent = ApiClient.convertToType(data['BankAccountUpdatedEvent'], [BankAccountUpdatedEvent]);
      if (data.hasOwnProperty('BankAccountDeletedEvent'))
        obj.bankAccountDeletedEvent = ApiClient.convertToType(data['BankAccountDeletedEvent'], [BankAccountDeletedEvent]);
      if (data.hasOwnProperty('HydraAssignedEvent'))
        obj.hydraAssignedEvent = ApiClient.convertToType(data['HydraAssignedEvent'], [HydraAssignedEvent]);
      if (data.hasOwnProperty('HydraRequestResetEvent'))
        obj.hydraRequestResetEvent = ApiClient.convertToType(data['HydraRequestResetEvent'], [HydraRequestResetEvent]);
      if (data.hasOwnProperty('HydraStoreAssignedEvent'))
        obj.hydraStoreAssignedEvent = ApiClient.convertToType(data['HydraStoreAssignedEvent'], [HydraStoreAssignedEvent]);
      if (data.hasOwnProperty('HydraStoreUnassignedEvent'))
        obj.hydraStoreUnassignedEvent = ApiClient.convertToType(data['HydraStoreUnassignedEvent'], [HydraStoreUnassignedEvent]);
      if (data.hasOwnProperty('HydraSettingChangedEvent'))
        obj.hydraSettingChangedEvent = ApiClient.convertToType(data['HydraSettingChangedEvent'], [HydraSettingChangedEvent]);
      if (data.hasOwnProperty('HydraUnAssignedEvent'))
        obj.hydraUnAssignedEvent = ApiClient.convertToType(data['HydraUnAssignedEvent'], [HydraUnAssignedEvent]);
      if (data.hasOwnProperty('HydraConnectionStatusChangedEvent'))
        obj.hydraConnectionStatusChangedEvent = ApiClient.convertToType(data['HydraConnectionStatusChangedEvent'], [HydraConnectionStatusChangedEvent]);
      if (data.hasOwnProperty('KioskBluetoothPairingModeEvent'))
        obj.kioskBluetoothPairingModeEvent = ApiClient.convertToType(data['KioskBluetoothPairingModeEvent'], [KioskBluetoothPairingModeEvent]);
      if (data.hasOwnProperty('KioskBluetoothUnpairingModeEvent'))
        obj.kioskBluetoothUnpairingModeEvent = ApiClient.convertToType(data['KioskBluetoothUnpairingModeEvent'], [KioskBluetoothUnpairingModeEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalUpdatedEvent'))
        obj.kioskBluetoothTerminalUpdatedEvent = ApiClient.convertToType(data['KioskBluetoothTerminalUpdatedEvent'], [KioskBluetoothTerminalUpdatedEvent]);
      if (data.hasOwnProperty('KioskBluetoothInstallUpdateInitiateEvent'))
        obj.kioskBluetoothInstallUpdateInitiateEvent = ApiClient.convertToType(data['KioskBluetoothInstallUpdateInitiateEvent'], [KioskBluetoothInstallUpdateInitiateEvent]);
      if (data.hasOwnProperty('PushNotificationScheduledEvent'))
        obj.pushNotificationScheduledEvent = ApiClient.convertToType(data['PushNotificationScheduledEvent'], [PushNotificationScheduledEvent]);
      if (data.hasOwnProperty('PushNotificationSentEvent'))
        obj.pushNotificationSentEvent = ApiClient.convertToType(data['PushNotificationSentEvent'], [PushNotificationSentEvent]);
      if (data.hasOwnProperty('PushNotificationDeletedEvent'))
        obj.pushNotificationDeletedEvent = ApiClient.convertToType(data['PushNotificationDeletedEvent'], [PushNotificationDeletedEvent]);
      if (data.hasOwnProperty('DnsVerifiedEvent'))
        obj.dnsVerifiedEvent = ApiClient.convertToType(data['DnsVerifiedEvent'], [DnsVerifiedEvent]);
      if (data.hasOwnProperty('CertificateCreatedEvent'))
        obj.certificateCreatedEvent = ApiClient.convertToType(data['CertificateCreatedEvent'], [CertificateCreatedEvent]);
      if (data.hasOwnProperty('CertificateRenewedEvent'))
        obj.certificateRenewedEvent = ApiClient.convertToType(data['CertificateRenewedEvent'], [CertificateRenewedEvent]);
      if (data.hasOwnProperty('WebsiteVanityUrlUpdatedEvent'))
        obj.websiteVanityUrlUpdatedEvent = ApiClient.convertToType(data['WebsiteVanityUrlUpdatedEvent'], [WebsiteVanityUrlUpdatedEvent]);
      if (data.hasOwnProperty('WebsiteUpdatedEvent'))
        obj.websiteUpdatedEvent = ApiClient.convertToType(data['WebsiteUpdatedEvent'], [WebsiteUpdatedEvent]);
      if (data.hasOwnProperty('StoreOrderCapacityUpdatedEvent'))
        obj.storeOrderCapacityUpdatedEvent = ApiClient.convertToType(data['StoreOrderCapacityUpdatedEvent'], [StoreOrderCapacityUpdatedEvent]);
    }
    return obj;
  }

  /**
   * App Created Event
   * @member {Array.<module:model/AppCreatedEvent>} appCreatedEvent
   */
  exports.prototype.appCreatedEvent = undefined;

  /**
   * App Updated Event
   * @member {Array.<module:model/AppUpdatedEvent>} appUpdatedEvent
   */
  exports.prototype.appUpdatedEvent = undefined;

  /**
   * Client Analytics events
   * @member {Array.<module:model/AnalyticsClientEvent>} analyticsClientEvent
   */
  exports.prototype.analyticsClientEvent = undefined;

  /**
   * Order accepted events
   * @member {Array.<module:model/OrderAcceptedEvent>} orderAcceptedEvent
   */
  exports.prototype.orderAcceptedEvent = undefined;

  /**
   * Order dispatched events
   * @member {Array.<module:model/OrderDispatchedEvent>} orderDispatchedEvent
   */
  exports.prototype.orderDispatchedEvent = undefined;

  /**
   * Order delivery tracking created events
   * @member {Array.<module:model/OrderCustomerTrackingCreatedEvent>} orderCustomerTrackingCreatedEvent
   */
  exports.prototype.orderCustomerTrackingCreatedEvent = undefined;

  /**
   * Order delivery tracking updated events
   * @member {Array.<module:model/OrderDeliveryTrackingStatusUpdatedEvent>} orderDeliveryTrackingStatusUpdatedEvent
   */
  exports.prototype.orderDeliveryTrackingStatusUpdatedEvent = undefined;

  /**
   * Order created events
   * @member {Array.<module:model/OrderCreatedEvent>} orderCreatedEvent
   */
  exports.prototype.orderCreatedEvent = undefined;

  /**
   * Order rating updated events
   * @member {Array.<module:model/OrderRatingUpdatedEvent>} orderRatingUpdatedEvent
   */
  exports.prototype.orderRatingUpdatedEvent = undefined;

  /**
   * Order refunded events
   * @member {Array.<module:model/OrderRefundedEvent>} orderRefundedEvent
   */
  exports.prototype.orderRefundedEvent = undefined;

  /**
   * Order rejected events
   * @member {Array.<module:model/OrderRejectedEvent>} orderRejectedEvent
   */
  exports.prototype.orderRejectedEvent = undefined;

  /**
   * Order tip updated events
   * @member {Array.<module:model/OrderTipUpdatedEvent>} orderTipUpdatedEvent
   */
  exports.prototype.orderTipUpdatedEvent = undefined;

  /**
   * Order Terminal Notification events
   * @member {Array.<module:model/EmvNotificationEvent>} orderTerminalNotifications
   */
  exports.prototype.orderTerminalNotifications = undefined;

  /**
   * Store created events
   * @member {Array.<module:model/StoreCreatedEvent>} storeCreatedEvent
   */
  exports.prototype.storeCreatedEvent = undefined;

  /**
   * Store deleted events
   * @member {Array.<module:model/StoreDeletedEvent>} storeDeletedEvent
   */
  exports.prototype.storeDeletedEvent = undefined;

  /**
   * Store address updated events
   * @member {Array.<module:model/StoreAddressUpdatedEvent>} storeAddressUpdatedEvent
   */
  exports.prototype.storeAddressUpdatedEvent = undefined;

  /**
   * Store kiosk setting updated events
   * @member {Array.<module:model/StoreKioskSettingUpdatedEvent>} storeKioskSettingUpdatedEvent
   */
  exports.prototype.storeKioskSettingUpdatedEvent = undefined;

  /**
   * Store delivery zone created events
   * @member {Array.<module:model/DeliveryZoneCreatedEvent>} deliveryZoneCreatedEvent
   */
  exports.prototype.deliveryZoneCreatedEvent = undefined;

  /**
   * Store delivery zone updated events
   * @member {Array.<module:model/DeliveryZoneUpdatedEvent>} deliveryZoneUpdatedEvent
   */
  exports.prototype.deliveryZoneUpdatedEvent = undefined;

  /**
   * Store delivery zone deleted events
   * @member {Array.<module:model/DeliveryZoneDeletedEvent>} deliveryZoneDeletedEvent
   */
  exports.prototype.deliveryZoneDeletedEvent = undefined;

  /**
   * Store opening hours updated events
   * @member {Array.<module:model/StoreOpeningHoursUpdatedEvent>} storeOpeningHoursUpdatedEvent
   */
  exports.prototype.storeOpeningHoursUpdatedEvent = undefined;

  /**
   * Store opening hours updated events
   * @member {Array.<module:model/StoreMenuAssignedEvent>} storeMenuAssignedEvent
   */
  exports.prototype.storeMenuAssignedEvent = undefined;

  /**
   * Store business hours override created events
   * @member {Array.<module:model/StoreBusinessHoursOverrideCreatedEvent>} storeBusinessHoursOverrideCreatedEvent
   */
  exports.prototype.storeBusinessHoursOverrideCreatedEvent = undefined;

  /**
   * Store business hours override deleted events
   * @member {Array.<module:model/StoreBusinessHoursOverrideDeletedEvent>} storeBusinessHoursOverrideDeletedEvent
   */
  exports.prototype.storeBusinessHoursOverrideDeletedEvent = undefined;

  /**
   * Store archived events
   * @member {Array.<module:model/StoreArchivedEvent>} storeArchivedEvent
   */
  exports.prototype.storeArchivedEvent = undefined;

  /**
   * Store unarchived events
   * @member {Array.<module:model/StoreUnarchivedEvent>} storeUnarchivedEvent
   */
  exports.prototype.storeUnarchivedEvent = undefined;

  /**
   * Store published events
   * @member {Array.<module:model/StorePublishedEvent>} storePublishedEvent
   */
  exports.prototype.storePublishedEvent = undefined;

  /**
   * Store unpublished events
   * @member {Array.<module:model/StoreUnpublishedEvent>} storeUnpublishedEvent
   */
  exports.prototype.storeUnpublishedEvent = undefined;

  /**
   * Store updated events
   * @member {Array.<module:model/StoreUpdatedEvent>} storeUpdatedEvent
   */
  exports.prototype.storeUpdatedEvent = undefined;

  /**
   * Store updated events
   * @member {Array.<module:model/StorePreOrderConfigUpdatedEvent>} storePreOrderConfigUpdatedEvent
   */
  exports.prototype.storePreOrderConfigUpdatedEvent = undefined;

  /**
   * Store logo created events
   * @member {Array.<module:model/StoreLogoCreatedEvent>} storeLogoCreatedEvent
   */
  exports.prototype.storeLogoCreatedEvent = undefined;

  /**
   * Store logo updated events
   * @member {Array.<module:model/StoreLogoUpdatedEvent>} storeLogoUpdatedEvent
   */
  exports.prototype.storeLogoUpdatedEvent = undefined;

  /**
   * Store logo deleted events
   * @member {Array.<module:model/StoreLogoDeletedEvent>} storeLogoDeletedEvent
   */
  exports.prototype.storeLogoDeletedEvent = undefined;

  /**
   * Menu created events
   * @member {Array.<module:model/MenuCreatedEvent>} menuCreatedEvent
   */
  exports.prototype.menuCreatedEvent = undefined;

  /**
   * Menu updated events
   * @member {Array.<module:model/MenuUpdatedEvent>} menuUpdatedEvent
   */
  exports.prototype.menuUpdatedEvent = undefined;

  /**
   * Menu uploaded events
   * @member {Array.<module:model/MenuUploadedEvent>} menuUploadedEvent
   */
  exports.prototype.menuUploadedEvent = undefined;

  /**
   * Menu section created events
   * @member {Array.<module:model/MenuSectionCreatedEvent>} menuSectionCreatedEvent
   */
  exports.prototype.menuSectionCreatedEvent = undefined;

  /**
   * Menu section updated events
   * @member {Array.<module:model/MenuSectionUpdatedEvent>} menuSectionUpdatedEvent
   */
  exports.prototype.menuSectionUpdatedEvent = undefined;

  /**
   * Menu section deleted events
   * @member {Array.<module:model/MenuSectionDeletedEvent>} menuSectionDeletedEvent
   */
  exports.prototype.menuSectionDeletedEvent = undefined;

  /**
   * Menu section item created events
   * @member {Array.<module:model/MenuSectionItemCreatedEvent>} menuSectionItemCreatedEvent
   */
  exports.prototype.menuSectionItemCreatedEvent = undefined;

  /**
   * Menu section item updated events
   * @member {Array.<module:model/MenuSectionItemUpdatedEvent>} menuSectionItemUpdatedEvent
   */
  exports.prototype.menuSectionItemUpdatedEvent = undefined;

  /**
   * Menu section item deleted events
   * @member {Array.<module:model/MenuSectionItemDeletedEvent>} menuSectionItemDeletedEvent
   */
  exports.prototype.menuSectionItemDeletedEvent = undefined;

  /**
   * Menu item option set created events
   * @member {Array.<module:model/MenuItemOptionSetCreatedEvent>} menuItemOptionSetCreatedEvent
   */
  exports.prototype.menuItemOptionSetCreatedEvent = undefined;

  /**
   * Menu item option set  updated events
   * @member {Array.<module:model/MenuItemOptionSetUpdatedEvent>} menuItemOptionSetUpdatedEvent
   */
  exports.prototype.menuItemOptionSetUpdatedEvent = undefined;

  /**
   * Menu item option set deleted events
   * @member {Array.<module:model/MenuItemOptionSetDeletedEvent>} menuItemOptionSetDeletedEvent
   */
  exports.prototype.menuItemOptionSetDeletedEvent = undefined;

  /**
   * Menu item option set item created events
   * @member {Array.<module:model/MenuItemOptionSetItemCreatedEvent>} menuItemOptionSetItemCreatedEvent
   */
  exports.prototype.menuItemOptionSetItemCreatedEvent = undefined;

  /**
   * Menu item option set item updated events
   * @member {Array.<module:model/MenuItemOptionSetItemUpdatedEvent>} menuItemOptionSetItemUpdatedEvent
   */
  exports.prototype.menuItemOptionSetItemUpdatedEvent = undefined;

  /**
   * Menu item option set item deleted events
   * @member {Array.<module:model/MenuItemOptionSetItemDeletedEvent>} menuItemOptionSetItemDeletedEvent
   */
  exports.prototype.menuItemOptionSetItemDeletedEvent = undefined;

  /**
   * Menu checkpoint created event
   * @member {Array.<module:model/MenuCheckpointCreatedEvent>} menuCheckpointCreatedEvent
   */
  exports.prototype.menuCheckpointCreatedEvent = undefined;

  /**
   * Store group created events
   * @member {Array.<module:model/StoreGroupCreatedEvent>} storeGroupCreatedEvent
   */
  exports.prototype.storeGroupCreatedEvent = undefined;

  /**
   * Store group updated events
   * @member {Array.<module:model/StoreGroupUpdatedEvent>} storeGroupUpdatedEvent
   */
  exports.prototype.storeGroupUpdatedEvent = undefined;

  /**
   * Store group deleted events
   * @member {Array.<module:model/StoreGroupDeletedEvent>} storeGroupDeletedEvent
   */
  exports.prototype.storeGroupDeletedEvent = undefined;

  /**
   * Customer created events
   * @member {Array.<module:model/CustomerCreatedEvent>} customerCreatedEvent
   */
  exports.prototype.customerCreatedEvent = undefined;

  /**
   * Customer updated events
   * @member {Array.<module:model/CustomerUpdatedEvent>} customerUpdatedEvent
   */
  exports.prototype.customerUpdatedEvent = undefined;

  /**
   * Customer consent updated events
   * @member {Array.<module:model/CustomerConsentUpdatedEvent>} customerConsentUpdatedEvent
   */
  exports.prototype.customerConsentUpdatedEvent = undefined;

  /**
   * Webhook subscription created events
   * @member {Array.<module:model/WebhookSubscriptionCreatedEvent>} webhookSubscriptionCreatedEvent
   */
  exports.prototype.webhookSubscriptionCreatedEvent = undefined;

  /**
   * Webhook subscription updated events
   * @member {Array.<module:model/WebhookSubscriptionUpdatedEvent>} webhookSubscriptionUpdatedEvent
   */
  exports.prototype.webhookSubscriptionUpdatedEvent = undefined;

  /**
   * Webhook subscription deleted events
   * @member {Array.<module:model/WebhookSubscriptionDeletedEvent>} webhookSubscriptionDeletedEvent
   */
  exports.prototype.webhookSubscriptionDeletedEvent = undefined;

  /**
   * Printer turned ON event
   * @member {Array.<module:model/PrinterTurnedOnEvent>} printerTurnedOnEvent
   */
  exports.prototype.printerTurnedOnEvent = undefined;

  /**
   * Printer turned OFF event
   * @member {Array.<module:model/PrinterTurnedOffEvent>} printerTurnedOffEvent
   */
  exports.prototype.printerTurnedOffEvent = undefined;

  /**
   * Printer assigned to store event
   * @member {Array.<module:model/PrinterAssignedToStoreEvent>} printerAssignedToStoreEvent
   */
  exports.prototype.printerAssignedToStoreEvent = undefined;

  /**
   * Printer unassigned from store event
   * @member {Array.<module:model/PrinterUnassignedFromStoreEvent>} printerUnassignedFromStoreEvent
   */
  exports.prototype.printerUnassignedFromStoreEvent = undefined;

  /**
   * Phone call started event
   * @member {Array.<module:model/PhoneCallStartedEvent>} phoneCallStartedEvent
   */
  exports.prototype.phoneCallStartedEvent = undefined;

  /**
   * Phone call ended event
   * @member {Array.<module:model/PhoneCallEndedEvent>} phoneCallEndedEvent
   */
  exports.prototype.phoneCallEndedEvent = undefined;

  /**
   * Loyalty campaign created event
   * @member {Array.<module:model/LoyaltyCampaignCreatedEvent>} loyaltyCampaignCreatedEvent
   */
  exports.prototype.loyaltyCampaignCreatedEvent = undefined;

  /**
   * Loyalty campaign deleted event
   * @member {Array.<module:model/LoyaltyCampaignDeletedEvent>} loyaltyCampaignDeletedEvent
   */
  exports.prototype.loyaltyCampaignDeletedEvent = undefined;

  /**
   * Loyalty campaign updated event
   * @member {Array.<module:model/LoyaltyCampaignUpdatedEvent>} loyaltyCampaignUpdatedEvent
   */
  exports.prototype.loyaltyCampaignUpdatedEvent = undefined;

  /**
   * Retention campaign created event
   * @member {Array.<module:model/RetentionCampaignCreatedEvent>} retentionCampaignCreatedEvent
   */
  exports.prototype.retentionCampaignCreatedEvent = undefined;

  /**
   * Retention campaign deleted event
   * @member {Array.<module:model/RetentionCampaignDeletedEvent>} retentionCampaignDeletedEvent
   */
  exports.prototype.retentionCampaignDeletedEvent = undefined;

  /**
   * Retention campaign updated event
   * @member {Array.<module:model/RetentionCampaignUpdatedEvent>} retentionCampaignUpdatedEvent
   */
  exports.prototype.retentionCampaignUpdatedEvent = undefined;

  /**
   * Sms received event
   * @member {Array.<module:model/SmsReceivedEvent>} smsReceivedEvent
   */
  exports.prototype.smsReceivedEvent = undefined;

  /**
   * User login event
   * @member {Array.<module:model/UserLoginEvent>} userLoginEvent
   */
  exports.prototype.userLoginEvent = undefined;

  /**
   * User created event
   * @member {Array.<module:model/UserCreatedEvent>} userCreatedEvent
   */
  exports.prototype.userCreatedEvent = undefined;

  /**
   * User updated event
   * @member {Array.<module:model/UserUpdatedEvent>} userUpdatedEvent
   */
  exports.prototype.userUpdatedEvent = undefined;

  /**
   * User deleted event
   * @member {Array.<module:model/UserDeletedEvent>} userDeletedEvent
   */
  exports.prototype.userDeletedEvent = undefined;

  /**
   * User password created event
   * @member {Array.<module:model/UserPasswordCreatedEvent>} userCreatedPasswordEvent
   */
  exports.prototype.userCreatedPasswordEvent = undefined;

  /**
   * User answered signup questions event
   * @member {Array.<module:model/UserAnsweredSignupQuestionsEvent>} userAnsweredSignupQuestionsEvent
   */
  exports.prototype.userAnsweredSignupQuestionsEvent = undefined;

  /**
   * Voucher created event
   * @member {Array.<module:model/VoucherCreatedEvent>} voucherCreatedEvent
   */
  exports.prototype.voucherCreatedEvent = undefined;

  /**
   * Voucher updated event
   * @member {Array.<module:model/VoucherUpdatedEvent>} voucherUpdatedEvent
   */
  exports.prototype.voucherUpdatedEvent = undefined;

  /**
   * Voucher deleted event
   * @member {Array.<module:model/VoucherDeletedEvent>} voucherDeletedEvent
   */
  exports.prototype.voucherDeletedEvent = undefined;

  /**
   * Teammate invite sent event
   * @member {Array.<module:model/TeammateInviteSentEvent>} teammateInviteSentEvent
   */
  exports.prototype.teammateInviteSentEvent = undefined;

  /**
   * Teammate invite accepted event
   * @member {Array.<module:model/TeammateInviteAcceptedEvent>} teammateInviteAcceptedEvent
   */
  exports.prototype.teammateInviteAcceptedEvent = undefined;

  /**
   * Teammate updated event
   * @member {Array.<module:model/TeammateUpdatedEvent>} teammateUpdatedEvent
   */
  exports.prototype.teammateUpdatedEvent = undefined;

  /**
   * Teammate deleted event
   * @member {Array.<module:model/TeammateDeletedEvent>} teammateDeletedEvent
   */
  exports.prototype.teammateDeletedEvent = undefined;

  /**
   * Bank account created event
   * @member {Array.<module:model/BankAccountCreatedEvent>} bankAccountCreatedEvent
   */
  exports.prototype.bankAccountCreatedEvent = undefined;

  /**
   * Bank account updated event
   * @member {Array.<module:model/BankAccountUpdatedEvent>} bankAccountUpdatedEvent
   */
  exports.prototype.bankAccountUpdatedEvent = undefined;

  /**
   * Bank account updated event
   * @member {Array.<module:model/BankAccountDeletedEvent>} bankAccountDeletedEvent
   */
  exports.prototype.bankAccountDeletedEvent = undefined;

  /**
   * Hydra assigned event
   * @member {Array.<module:model/HydraAssignedEvent>} hydraAssignedEvent
   */
  exports.prototype.hydraAssignedEvent = undefined;

  /**
   * Hydra reset requested event
   * @member {Array.<module:model/HydraRequestResetEvent>} hydraRequestResetEvent
   */
  exports.prototype.hydraRequestResetEvent = undefined;

  /**
   * Hydra store assigned event
   * @member {Array.<module:model/HydraStoreAssignedEvent>} hydraStoreAssignedEvent
   */
  exports.prototype.hydraStoreAssignedEvent = undefined;

  /**
   * Hydra store unassigned
   * @member {Array.<module:model/HydraStoreUnassignedEvent>} hydraStoreUnassignedEvent
   */
  exports.prototype.hydraStoreUnassignedEvent = undefined;

  /**
   * Hydra settings changed event
   * @member {Array.<module:model/HydraSettingChangedEvent>} hydraSettingChangedEvent
   */
  exports.prototype.hydraSettingChangedEvent = undefined;

  /**
   * Hydra un-assigned event
   * @member {Array.<module:model/HydraUnAssignedEvent>} hydraUnAssignedEvent
   */
  exports.prototype.hydraUnAssignedEvent = undefined;

  /**
   * Hydra connection state change
   * @member {Array.<module:model/HydraConnectionStatusChangedEvent>} hydraConnectionStatusChangedEvent
   */
  exports.prototype.hydraConnectionStatusChangedEvent = undefined;

  /**
   * Bluetooth Pairing Mode initiated
   * @member {Array.<module:model/KioskBluetoothPairingModeEvent>} kioskBluetoothPairingModeEvent
   */
  exports.prototype.kioskBluetoothPairingModeEvent = undefined;

  /**
   * Bluetooth Unpairing Mode initiated
   * @member {Array.<module:model/KioskBluetoothUnpairingModeEvent>} kioskBluetoothUnpairingModeEvent
   */
  exports.prototype.kioskBluetoothUnpairingModeEvent = undefined;

  /**
   * Bluetooth Terminal Updated
   * @member {Array.<module:model/KioskBluetoothTerminalUpdatedEvent>} kioskBluetoothTerminalUpdatedEvent
   */
  exports.prototype.kioskBluetoothTerminalUpdatedEvent = undefined;

  /**
   * Bluetooth Terminal Initiate Update
   * @member {Array.<module:model/KioskBluetoothInstallUpdateInitiateEvent>} kioskBluetoothInstallUpdateInitiateEvent
   */
  exports.prototype.kioskBluetoothInstallUpdateInitiateEvent = undefined;

  /**
   * Push notification scheduled event
   * @member {Array.<module:model/PushNotificationScheduledEvent>} pushNotificationScheduledEvent
   */
  exports.prototype.pushNotificationScheduledEvent = undefined;

  /**
   * Push notification sent event
   * @member {Array.<module:model/PushNotificationSentEvent>} pushNotificationSentEvent
   */
  exports.prototype.pushNotificationSentEvent = undefined;

  /**
   * Push notification deleted event
   * @member {Array.<module:model/PushNotificationDeletedEvent>} pushNotificationDeletedEvent
   */
  exports.prototype.pushNotificationDeletedEvent = undefined;

  /**
   * DNS Verified
   * @member {Array.<module:model/DnsVerifiedEvent>} dnsVerifiedEvent
   */
  exports.prototype.dnsVerifiedEvent = undefined;

  /**
   * Certificate created
   * @member {Array.<module:model/CertificateCreatedEvent>} certificateCreatedEvent
   */
  exports.prototype.certificateCreatedEvent = undefined;

  /**
   * Certificate renewed
   * @member {Array.<module:model/CertificateRenewedEvent>} certificateRenewedEvent
   */
  exports.prototype.certificateRenewedEvent = undefined;

  /**
   * Panacea vanity url updated
   * @member {Array.<module:model/WebsiteVanityUrlUpdatedEvent>} websiteVanityUrlUpdatedEvent
   */
  exports.prototype.websiteVanityUrlUpdatedEvent = undefined;

  /**
   * Website updated
   * @member {Array.<module:model/WebsiteUpdatedEvent>} websiteUpdatedEvent
   */
  exports.prototype.websiteUpdatedEvent = undefined;

  /**
   * Order capacity config updated
   * @member {Array.<module:model/StoreOrderCapacityUpdatedEvent>} storeOrderCapacityUpdatedEvent
   */
  exports.prototype.storeOrderCapacityUpdatedEvent = undefined;


  return exports;

}));
