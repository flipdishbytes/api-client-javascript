/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalyticsClientEvent', 'model/AppCreatedEvent', 'model/AppStoreConfigCreatedEvent', 'model/AppStoreConfigDeletedEvent', 'model/AppStoreConfigUpdatedEvent', 'model/AppUpdatedEvent', 'model/BankAccountCreatedEvent', 'model/BankAccountDeletedEvent', 'model/BankAccountUpdatedEvent', 'model/CatalogGroupArchivedEvent', 'model/CatalogGroupCreatedEvent', 'model/CatalogGroupUpdatedEvent', 'model/CatalogItemArchivedEvent', 'model/CatalogItemCreatedEvent', 'model/CatalogItemUpdatedEvent', 'model/CertificateCreatedEvent', 'model/CertificateRenewedEvent', 'model/CustomerConsentUpdatedEvent', 'model/CustomerCreatedEvent', 'model/CustomerUpdatedEvent', 'model/DeliveryZoneCreatedEvent', 'model/DeliveryZoneDeletedEvent', 'model/DeliveryZoneUpdatedEvent', 'model/DnsVerifiedEvent', 'model/EmvNotificationEvent', 'model/ExternalStoreEvent', 'model/HydraAssignedEvent', 'model/HydraConnectionStatusChangedEvent', 'model/HydraRequestResetEvent', 'model/HydraSettingChangedEvent', 'model/HydraStoreAssignedEvent', 'model/HydraStoreUnassignedEvent', 'model/HydraUnAssignedEvent', 'model/KioskBluetoothInstallUpdateInitiateEvent', 'model/KioskBluetoothPairingModeEvent', 'model/KioskBluetoothTerminalCancelUpdateEvent', 'model/KioskBluetoothTerminalFirmwareVersionStatusEvent', 'model/KioskBluetoothTerminalInitiateUpdateCheckEvent', 'model/KioskBluetoothTerminalInstallationStatusEvent', 'model/KioskBluetoothTerminalUnpairedEvent', 'model/KioskBluetoothTerminalUpdatedEvent', 'model/KioskBluetoothUnpairingModeEvent', 'model/LoyaltyCampaignCreatedEvent', 'model/LoyaltyCampaignDeletedEvent', 'model/LoyaltyCampaignUpdatedEvent', 'model/MenuBulkEditEvent', 'model/MenuCheckpointCreatedEvent', 'model/MenuCreatedEvent', 'model/MenuItemOptionSetCreatedEvent', 'model/MenuItemOptionSetDeletedEvent', 'model/MenuItemOptionSetItemCreatedEvent', 'model/MenuItemOptionSetItemDeletedEvent', 'model/MenuItemOptionSetItemUpdatedEvent', 'model/MenuItemOptionSetUpdatedEvent', 'model/MenuSectionCreatedEvent', 'model/MenuSectionDeletedEvent', 'model/MenuSectionItemCreatedEvent', 'model/MenuSectionItemDeletedEvent', 'model/MenuSectionItemUpdatedEvent', 'model/MenuSectionUpdatedEvent', 'model/MenuUpdatedEvent', 'model/MenuUploadedEvent', 'model/OrderAcceptedEvent', 'model/OrderCapacityConfigUpdatedEvent', 'model/OrderCreatedEvent', 'model/OrderCustomerTrackingCreatedEvent', 'model/OrderDeliveryTrackingStatusUpdatedEvent', 'model/OrderDispatchedEvent', 'model/OrderRatingUpdatedEvent', 'model/OrderRefundedEvent', 'model/OrderRejectedEvent', 'model/OrderTipUpdatedEvent', 'model/PhoneCallEndedEvent', 'model/PhoneCallStartedEvent', 'model/PrinterAssignedToStoreEvent', 'model/PrinterTurnedOffEvent', 'model/PrinterTurnedOnEvent', 'model/PrinterUnassignedFromStoreEvent', 'model/PushNotificationDeletedEvent', 'model/PushNotificationScheduledEvent', 'model/PushNotificationSentEvent', 'model/RetentionCampaignCreatedEvent', 'model/RetentionCampaignDeletedEvent', 'model/RetentionCampaignUpdatedEvent', 'model/SmsReceivedEvent', 'model/StoreAddressUpdatedEvent', 'model/StoreArchivedEvent', 'model/StoreBusinessHoursOverrideCreatedEvent', 'model/StoreBusinessHoursOverrideDeletedEvent', 'model/StoreCreatedEvent', 'model/StoreDeletedEvent', 'model/StoreGroupCreatedEvent', 'model/StoreGroupDeletedEvent', 'model/StoreGroupUpdatedEvent', 'model/StoreKioskSettingUpdatedEvent', 'model/StoreLogoCreatedEvent', 'model/StoreLogoDeletedEvent', 'model/StoreLogoUpdatedEvent', 'model/StoreMenuAssignedEvent', 'model/StoreOpeningHoursUpdatedEvent', 'model/StorePreOrderConfigUpdatedEvent', 'model/StorePublishedEvent', 'model/StoreServiceChargeUpdatedEvent', 'model/StoreTipUpdatedEvent', 'model/StoreUnarchivedEvent', 'model/StoreUnpublishedEvent', 'model/StoreUpdatedEvent', 'model/TeammateDeletedEvent', 'model/TeammateInviteAcceptedEvent', 'model/TeammateInviteSentEvent', 'model/TeammateUpdatedEvent', 'model/UserAnsweredSignupQuestionsEvent', 'model/UserCreatedEvent', 'model/UserDeletedEvent', 'model/UserLoginEvent', 'model/UserPasswordCreatedEvent', 'model/UserUpdatedEvent', 'model/VoucherCreatedEvent', 'model/VoucherDeletedEvent', 'model/VoucherUpdatedEvent', 'model/WebhookSubscriptionCreatedEvent', 'model/WebhookSubscriptionDeletedEvent', 'model/WebhookSubscriptionUpdatedEvent', 'model/WebsiteUpdatedEvent', 'model/WebsiteVanityUrlUpdatedEvent'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AnalyticsClientEvent'), require('./AppCreatedEvent'), require('./AppStoreConfigCreatedEvent'), require('./AppStoreConfigDeletedEvent'), require('./AppStoreConfigUpdatedEvent'), require('./AppUpdatedEvent'), require('./BankAccountCreatedEvent'), require('./BankAccountDeletedEvent'), require('./BankAccountUpdatedEvent'), require('./CatalogGroupArchivedEvent'), require('./CatalogGroupCreatedEvent'), require('./CatalogGroupUpdatedEvent'), require('./CatalogItemArchivedEvent'), require('./CatalogItemCreatedEvent'), require('./CatalogItemUpdatedEvent'), require('./CertificateCreatedEvent'), require('./CertificateRenewedEvent'), require('./CustomerConsentUpdatedEvent'), require('./CustomerCreatedEvent'), require('./CustomerUpdatedEvent'), require('./DeliveryZoneCreatedEvent'), require('./DeliveryZoneDeletedEvent'), require('./DeliveryZoneUpdatedEvent'), require('./DnsVerifiedEvent'), require('./EmvNotificationEvent'), require('./ExternalStoreEvent'), require('./HydraAssignedEvent'), require('./HydraConnectionStatusChangedEvent'), require('./HydraRequestResetEvent'), require('./HydraSettingChangedEvent'), require('./HydraStoreAssignedEvent'), require('./HydraStoreUnassignedEvent'), require('./HydraUnAssignedEvent'), require('./KioskBluetoothInstallUpdateInitiateEvent'), require('./KioskBluetoothPairingModeEvent'), require('./KioskBluetoothTerminalCancelUpdateEvent'), require('./KioskBluetoothTerminalFirmwareVersionStatusEvent'), require('./KioskBluetoothTerminalInitiateUpdateCheckEvent'), require('./KioskBluetoothTerminalInstallationStatusEvent'), require('./KioskBluetoothTerminalUnpairedEvent'), require('./KioskBluetoothTerminalUpdatedEvent'), require('./KioskBluetoothUnpairingModeEvent'), require('./LoyaltyCampaignCreatedEvent'), require('./LoyaltyCampaignDeletedEvent'), require('./LoyaltyCampaignUpdatedEvent'), require('./MenuBulkEditEvent'), require('./MenuCheckpointCreatedEvent'), require('./MenuCreatedEvent'), require('./MenuItemOptionSetCreatedEvent'), require('./MenuItemOptionSetDeletedEvent'), require('./MenuItemOptionSetItemCreatedEvent'), require('./MenuItemOptionSetItemDeletedEvent'), require('./MenuItemOptionSetItemUpdatedEvent'), require('./MenuItemOptionSetUpdatedEvent'), require('./MenuSectionCreatedEvent'), require('./MenuSectionDeletedEvent'), require('./MenuSectionItemCreatedEvent'), require('./MenuSectionItemDeletedEvent'), require('./MenuSectionItemUpdatedEvent'), require('./MenuSectionUpdatedEvent'), require('./MenuUpdatedEvent'), require('./MenuUploadedEvent'), require('./OrderAcceptedEvent'), require('./OrderCapacityConfigUpdatedEvent'), require('./OrderCreatedEvent'), require('./OrderCustomerTrackingCreatedEvent'), require('./OrderDeliveryTrackingStatusUpdatedEvent'), require('./OrderDispatchedEvent'), require('./OrderRatingUpdatedEvent'), require('./OrderRefundedEvent'), require('./OrderRejectedEvent'), require('./OrderTipUpdatedEvent'), require('./PhoneCallEndedEvent'), require('./PhoneCallStartedEvent'), require('./PrinterAssignedToStoreEvent'), require('./PrinterTurnedOffEvent'), require('./PrinterTurnedOnEvent'), require('./PrinterUnassignedFromStoreEvent'), require('./PushNotificationDeletedEvent'), require('./PushNotificationScheduledEvent'), require('./PushNotificationSentEvent'), require('./RetentionCampaignCreatedEvent'), require('./RetentionCampaignDeletedEvent'), require('./RetentionCampaignUpdatedEvent'), require('./SmsReceivedEvent'), require('./StoreAddressUpdatedEvent'), require('./StoreArchivedEvent'), require('./StoreBusinessHoursOverrideCreatedEvent'), require('./StoreBusinessHoursOverrideDeletedEvent'), require('./StoreCreatedEvent'), require('./StoreDeletedEvent'), require('./StoreGroupCreatedEvent'), require('./StoreGroupDeletedEvent'), require('./StoreGroupUpdatedEvent'), require('./StoreKioskSettingUpdatedEvent'), require('./StoreLogoCreatedEvent'), require('./StoreLogoDeletedEvent'), require('./StoreLogoUpdatedEvent'), require('./StoreMenuAssignedEvent'), require('./StoreOpeningHoursUpdatedEvent'), require('./StorePreOrderConfigUpdatedEvent'), require('./StorePublishedEvent'), require('./StoreServiceChargeUpdatedEvent'), require('./StoreTipUpdatedEvent'), require('./StoreUnarchivedEvent'), require('./StoreUnpublishedEvent'), require('./StoreUpdatedEvent'), require('./TeammateDeletedEvent'), require('./TeammateInviteAcceptedEvent'), require('./TeammateInviteSentEvent'), require('./TeammateUpdatedEvent'), require('./UserAnsweredSignupQuestionsEvent'), require('./UserCreatedEvent'), require('./UserDeletedEvent'), require('./UserLoginEvent'), require('./UserPasswordCreatedEvent'), require('./UserUpdatedEvent'), require('./VoucherCreatedEvent'), require('./VoucherDeletedEvent'), require('./VoucherUpdatedEvent'), require('./WebhookSubscriptionCreatedEvent'), require('./WebhookSubscriptionDeletedEvent'), require('./WebhookSubscriptionUpdatedEvent'), require('./WebsiteUpdatedEvent'), require('./WebsiteVanityUrlUpdatedEvent'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.EventSearchResult = factory(root.Flipdish.ApiClient, root.Flipdish.AnalyticsClientEvent, root.Flipdish.AppCreatedEvent, root.Flipdish.AppStoreConfigCreatedEvent, root.Flipdish.AppStoreConfigDeletedEvent, root.Flipdish.AppStoreConfigUpdatedEvent, root.Flipdish.AppUpdatedEvent, root.Flipdish.BankAccountCreatedEvent, root.Flipdish.BankAccountDeletedEvent, root.Flipdish.BankAccountUpdatedEvent, root.Flipdish.CatalogGroupArchivedEvent, root.Flipdish.CatalogGroupCreatedEvent, root.Flipdish.CatalogGroupUpdatedEvent, root.Flipdish.CatalogItemArchivedEvent, root.Flipdish.CatalogItemCreatedEvent, root.Flipdish.CatalogItemUpdatedEvent, root.Flipdish.CertificateCreatedEvent, root.Flipdish.CertificateRenewedEvent, root.Flipdish.CustomerConsentUpdatedEvent, root.Flipdish.CustomerCreatedEvent, root.Flipdish.CustomerUpdatedEvent, root.Flipdish.DeliveryZoneCreatedEvent, root.Flipdish.DeliveryZoneDeletedEvent, root.Flipdish.DeliveryZoneUpdatedEvent, root.Flipdish.DnsVerifiedEvent, root.Flipdish.EmvNotificationEvent, root.Flipdish.ExternalStoreEvent, root.Flipdish.HydraAssignedEvent, root.Flipdish.HydraConnectionStatusChangedEvent, root.Flipdish.HydraRequestResetEvent, root.Flipdish.HydraSettingChangedEvent, root.Flipdish.HydraStoreAssignedEvent, root.Flipdish.HydraStoreUnassignedEvent, root.Flipdish.HydraUnAssignedEvent, root.Flipdish.KioskBluetoothInstallUpdateInitiateEvent, root.Flipdish.KioskBluetoothPairingModeEvent, root.Flipdish.KioskBluetoothTerminalCancelUpdateEvent, root.Flipdish.KioskBluetoothTerminalFirmwareVersionStatusEvent, root.Flipdish.KioskBluetoothTerminalInitiateUpdateCheckEvent, root.Flipdish.KioskBluetoothTerminalInstallationStatusEvent, root.Flipdish.KioskBluetoothTerminalUnpairedEvent, root.Flipdish.KioskBluetoothTerminalUpdatedEvent, root.Flipdish.KioskBluetoothUnpairingModeEvent, root.Flipdish.LoyaltyCampaignCreatedEvent, root.Flipdish.LoyaltyCampaignDeletedEvent, root.Flipdish.LoyaltyCampaignUpdatedEvent, root.Flipdish.MenuBulkEditEvent, root.Flipdish.MenuCheckpointCreatedEvent, root.Flipdish.MenuCreatedEvent, root.Flipdish.MenuItemOptionSetCreatedEvent, root.Flipdish.MenuItemOptionSetDeletedEvent, root.Flipdish.MenuItemOptionSetItemCreatedEvent, root.Flipdish.MenuItemOptionSetItemDeletedEvent, root.Flipdish.MenuItemOptionSetItemUpdatedEvent, root.Flipdish.MenuItemOptionSetUpdatedEvent, root.Flipdish.MenuSectionCreatedEvent, root.Flipdish.MenuSectionDeletedEvent, root.Flipdish.MenuSectionItemCreatedEvent, root.Flipdish.MenuSectionItemDeletedEvent, root.Flipdish.MenuSectionItemUpdatedEvent, root.Flipdish.MenuSectionUpdatedEvent, root.Flipdish.MenuUpdatedEvent, root.Flipdish.MenuUploadedEvent, root.Flipdish.OrderAcceptedEvent, root.Flipdish.OrderCapacityConfigUpdatedEvent, root.Flipdish.OrderCreatedEvent, root.Flipdish.OrderCustomerTrackingCreatedEvent, root.Flipdish.OrderDeliveryTrackingStatusUpdatedEvent, root.Flipdish.OrderDispatchedEvent, root.Flipdish.OrderRatingUpdatedEvent, root.Flipdish.OrderRefundedEvent, root.Flipdish.OrderRejectedEvent, root.Flipdish.OrderTipUpdatedEvent, root.Flipdish.PhoneCallEndedEvent, root.Flipdish.PhoneCallStartedEvent, root.Flipdish.PrinterAssignedToStoreEvent, root.Flipdish.PrinterTurnedOffEvent, root.Flipdish.PrinterTurnedOnEvent, root.Flipdish.PrinterUnassignedFromStoreEvent, root.Flipdish.PushNotificationDeletedEvent, root.Flipdish.PushNotificationScheduledEvent, root.Flipdish.PushNotificationSentEvent, root.Flipdish.RetentionCampaignCreatedEvent, root.Flipdish.RetentionCampaignDeletedEvent, root.Flipdish.RetentionCampaignUpdatedEvent, root.Flipdish.SmsReceivedEvent, root.Flipdish.StoreAddressUpdatedEvent, root.Flipdish.StoreArchivedEvent, root.Flipdish.StoreBusinessHoursOverrideCreatedEvent, root.Flipdish.StoreBusinessHoursOverrideDeletedEvent, root.Flipdish.StoreCreatedEvent, root.Flipdish.StoreDeletedEvent, root.Flipdish.StoreGroupCreatedEvent, root.Flipdish.StoreGroupDeletedEvent, root.Flipdish.StoreGroupUpdatedEvent, root.Flipdish.StoreKioskSettingUpdatedEvent, root.Flipdish.StoreLogoCreatedEvent, root.Flipdish.StoreLogoDeletedEvent, root.Flipdish.StoreLogoUpdatedEvent, root.Flipdish.StoreMenuAssignedEvent, root.Flipdish.StoreOpeningHoursUpdatedEvent, root.Flipdish.StorePreOrderConfigUpdatedEvent, root.Flipdish.StorePublishedEvent, root.Flipdish.StoreServiceChargeUpdatedEvent, root.Flipdish.StoreTipUpdatedEvent, root.Flipdish.StoreUnarchivedEvent, root.Flipdish.StoreUnpublishedEvent, root.Flipdish.StoreUpdatedEvent, root.Flipdish.TeammateDeletedEvent, root.Flipdish.TeammateInviteAcceptedEvent, root.Flipdish.TeammateInviteSentEvent, root.Flipdish.TeammateUpdatedEvent, root.Flipdish.UserAnsweredSignupQuestionsEvent, root.Flipdish.UserCreatedEvent, root.Flipdish.UserDeletedEvent, root.Flipdish.UserLoginEvent, root.Flipdish.UserPasswordCreatedEvent, root.Flipdish.UserUpdatedEvent, root.Flipdish.VoucherCreatedEvent, root.Flipdish.VoucherDeletedEvent, root.Flipdish.VoucherUpdatedEvent, root.Flipdish.WebhookSubscriptionCreatedEvent, root.Flipdish.WebhookSubscriptionDeletedEvent, root.Flipdish.WebhookSubscriptionUpdatedEvent, root.Flipdish.WebsiteUpdatedEvent, root.Flipdish.WebsiteVanityUrlUpdatedEvent);
  }
}(this, function(ApiClient, AnalyticsClientEvent, AppCreatedEvent, AppStoreConfigCreatedEvent, AppStoreConfigDeletedEvent, AppStoreConfigUpdatedEvent, AppUpdatedEvent, BankAccountCreatedEvent, BankAccountDeletedEvent, BankAccountUpdatedEvent, CatalogGroupArchivedEvent, CatalogGroupCreatedEvent, CatalogGroupUpdatedEvent, CatalogItemArchivedEvent, CatalogItemCreatedEvent, CatalogItemUpdatedEvent, CertificateCreatedEvent, CertificateRenewedEvent, CustomerConsentUpdatedEvent, CustomerCreatedEvent, CustomerUpdatedEvent, DeliveryZoneCreatedEvent, DeliveryZoneDeletedEvent, DeliveryZoneUpdatedEvent, DnsVerifiedEvent, EmvNotificationEvent, ExternalStoreEvent, HydraAssignedEvent, HydraConnectionStatusChangedEvent, HydraRequestResetEvent, HydraSettingChangedEvent, HydraStoreAssignedEvent, HydraStoreUnassignedEvent, HydraUnAssignedEvent, KioskBluetoothInstallUpdateInitiateEvent, KioskBluetoothPairingModeEvent, KioskBluetoothTerminalCancelUpdateEvent, KioskBluetoothTerminalFirmwareVersionStatusEvent, KioskBluetoothTerminalInitiateUpdateCheckEvent, KioskBluetoothTerminalInstallationStatusEvent, KioskBluetoothTerminalUnpairedEvent, KioskBluetoothTerminalUpdatedEvent, KioskBluetoothUnpairingModeEvent, LoyaltyCampaignCreatedEvent, LoyaltyCampaignDeletedEvent, LoyaltyCampaignUpdatedEvent, MenuBulkEditEvent, MenuCheckpointCreatedEvent, MenuCreatedEvent, MenuItemOptionSetCreatedEvent, MenuItemOptionSetDeletedEvent, MenuItemOptionSetItemCreatedEvent, MenuItemOptionSetItemDeletedEvent, MenuItemOptionSetItemUpdatedEvent, MenuItemOptionSetUpdatedEvent, MenuSectionCreatedEvent, MenuSectionDeletedEvent, MenuSectionItemCreatedEvent, MenuSectionItemDeletedEvent, MenuSectionItemUpdatedEvent, MenuSectionUpdatedEvent, MenuUpdatedEvent, MenuUploadedEvent, OrderAcceptedEvent, OrderCapacityConfigUpdatedEvent, OrderCreatedEvent, OrderCustomerTrackingCreatedEvent, OrderDeliveryTrackingStatusUpdatedEvent, OrderDispatchedEvent, OrderRatingUpdatedEvent, OrderRefundedEvent, OrderRejectedEvent, OrderTipUpdatedEvent, PhoneCallEndedEvent, PhoneCallStartedEvent, PrinterAssignedToStoreEvent, PrinterTurnedOffEvent, PrinterTurnedOnEvent, PrinterUnassignedFromStoreEvent, PushNotificationDeletedEvent, PushNotificationScheduledEvent, PushNotificationSentEvent, RetentionCampaignCreatedEvent, RetentionCampaignDeletedEvent, RetentionCampaignUpdatedEvent, SmsReceivedEvent, StoreAddressUpdatedEvent, StoreArchivedEvent, StoreBusinessHoursOverrideCreatedEvent, StoreBusinessHoursOverrideDeletedEvent, StoreCreatedEvent, StoreDeletedEvent, StoreGroupCreatedEvent, StoreGroupDeletedEvent, StoreGroupUpdatedEvent, StoreKioskSettingUpdatedEvent, StoreLogoCreatedEvent, StoreLogoDeletedEvent, StoreLogoUpdatedEvent, StoreMenuAssignedEvent, StoreOpeningHoursUpdatedEvent, StorePreOrderConfigUpdatedEvent, StorePublishedEvent, StoreServiceChargeUpdatedEvent, StoreTipUpdatedEvent, StoreUnarchivedEvent, StoreUnpublishedEvent, StoreUpdatedEvent, TeammateDeletedEvent, TeammateInviteAcceptedEvent, TeammateInviteSentEvent, TeammateUpdatedEvent, UserAnsweredSignupQuestionsEvent, UserCreatedEvent, UserDeletedEvent, UserLoginEvent, UserPasswordCreatedEvent, UserUpdatedEvent, VoucherCreatedEvent, VoucherDeletedEvent, VoucherUpdatedEvent, WebhookSubscriptionCreatedEvent, WebhookSubscriptionDeletedEvent, WebhookSubscriptionUpdatedEvent, WebsiteUpdatedEvent, WebsiteVanityUrlUpdatedEvent) {
  'use strict';

  /**
   * The EventSearchResult model module.
   * @module model/EventSearchResult
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>EventSearchResult</code>.
   * 
   * @alias module:model/EventSearchResult
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>EventSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventSearchResult} obj Optional instance to populate.
   * @return {module:model/EventSearchResult} The populated <code>EventSearchResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('AppCreatedEvent'))
        obj.AppCreatedEvent = ApiClient.convertToType(data['AppCreatedEvent'], [AppCreatedEvent]);
      if (data.hasOwnProperty('AppUpdatedEvent'))
        obj.AppUpdatedEvent = ApiClient.convertToType(data['AppUpdatedEvent'], [AppUpdatedEvent]);
      if (data.hasOwnProperty('AnalyticsClientEvent'))
        obj.AnalyticsClientEvent = ApiClient.convertToType(data['AnalyticsClientEvent'], [AnalyticsClientEvent]);
      if (data.hasOwnProperty('OrderAcceptedEvent'))
        obj.OrderAcceptedEvent = ApiClient.convertToType(data['OrderAcceptedEvent'], [OrderAcceptedEvent]);
      if (data.hasOwnProperty('OrderDispatchedEvent'))
        obj.OrderDispatchedEvent = ApiClient.convertToType(data['OrderDispatchedEvent'], [OrderDispatchedEvent]);
      if (data.hasOwnProperty('OrderCustomerTrackingCreatedEvent'))
        obj.OrderCustomerTrackingCreatedEvent = ApiClient.convertToType(data['OrderCustomerTrackingCreatedEvent'], [OrderCustomerTrackingCreatedEvent]);
      if (data.hasOwnProperty('OrderDeliveryTrackingStatusUpdatedEvent'))
        obj.OrderDeliveryTrackingStatusUpdatedEvent = ApiClient.convertToType(data['OrderDeliveryTrackingStatusUpdatedEvent'], [OrderDeliveryTrackingStatusUpdatedEvent]);
      if (data.hasOwnProperty('OrderCreatedEvent'))
        obj.OrderCreatedEvent = ApiClient.convertToType(data['OrderCreatedEvent'], [OrderCreatedEvent]);
      if (data.hasOwnProperty('OrderRatingUpdatedEvent'))
        obj.OrderRatingUpdatedEvent = ApiClient.convertToType(data['OrderRatingUpdatedEvent'], [OrderRatingUpdatedEvent]);
      if (data.hasOwnProperty('OrderRefundedEvent'))
        obj.OrderRefundedEvent = ApiClient.convertToType(data['OrderRefundedEvent'], [OrderRefundedEvent]);
      if (data.hasOwnProperty('OrderRejectedEvent'))
        obj.OrderRejectedEvent = ApiClient.convertToType(data['OrderRejectedEvent'], [OrderRejectedEvent]);
      if (data.hasOwnProperty('OrderTipUpdatedEvent'))
        obj.OrderTipUpdatedEvent = ApiClient.convertToType(data['OrderTipUpdatedEvent'], [OrderTipUpdatedEvent]);
      if (data.hasOwnProperty('OrderTerminalNotifications'))
        obj.OrderTerminalNotifications = ApiClient.convertToType(data['OrderTerminalNotifications'], [EmvNotificationEvent]);
      if (data.hasOwnProperty('StoreCreatedEvent'))
        obj.StoreCreatedEvent = ApiClient.convertToType(data['StoreCreatedEvent'], [StoreCreatedEvent]);
      if (data.hasOwnProperty('StoreDeletedEvent'))
        obj.StoreDeletedEvent = ApiClient.convertToType(data['StoreDeletedEvent'], [StoreDeletedEvent]);
      if (data.hasOwnProperty('StoreAddressUpdatedEvent'))
        obj.StoreAddressUpdatedEvent = ApiClient.convertToType(data['StoreAddressUpdatedEvent'], [StoreAddressUpdatedEvent]);
      if (data.hasOwnProperty('StoreKioskSettingUpdatedEvent'))
        obj.StoreKioskSettingUpdatedEvent = ApiClient.convertToType(data['StoreKioskSettingUpdatedEvent'], [StoreKioskSettingUpdatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneCreatedEvent'))
        obj.DeliveryZoneCreatedEvent = ApiClient.convertToType(data['DeliveryZoneCreatedEvent'], [DeliveryZoneCreatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneUpdatedEvent'))
        obj.DeliveryZoneUpdatedEvent = ApiClient.convertToType(data['DeliveryZoneUpdatedEvent'], [DeliveryZoneUpdatedEvent]);
      if (data.hasOwnProperty('DeliveryZoneDeletedEvent'))
        obj.DeliveryZoneDeletedEvent = ApiClient.convertToType(data['DeliveryZoneDeletedEvent'], [DeliveryZoneDeletedEvent]);
      if (data.hasOwnProperty('StoreOpeningHoursUpdatedEvent'))
        obj.StoreOpeningHoursUpdatedEvent = ApiClient.convertToType(data['StoreOpeningHoursUpdatedEvent'], [StoreOpeningHoursUpdatedEvent]);
      if (data.hasOwnProperty('StoreMenuAssignedEvent'))
        obj.StoreMenuAssignedEvent = ApiClient.convertToType(data['StoreMenuAssignedEvent'], [StoreMenuAssignedEvent]);
      if (data.hasOwnProperty('StoreBusinessHoursOverrideCreatedEvent'))
        obj.StoreBusinessHoursOverrideCreatedEvent = ApiClient.convertToType(data['StoreBusinessHoursOverrideCreatedEvent'], [StoreBusinessHoursOverrideCreatedEvent]);
      if (data.hasOwnProperty('StoreBusinessHoursOverrideDeletedEvent'))
        obj.StoreBusinessHoursOverrideDeletedEvent = ApiClient.convertToType(data['StoreBusinessHoursOverrideDeletedEvent'], [StoreBusinessHoursOverrideDeletedEvent]);
      if (data.hasOwnProperty('StoreArchivedEvent'))
        obj.StoreArchivedEvent = ApiClient.convertToType(data['StoreArchivedEvent'], [StoreArchivedEvent]);
      if (data.hasOwnProperty('StoreUnarchivedEvent'))
        obj.StoreUnarchivedEvent = ApiClient.convertToType(data['StoreUnarchivedEvent'], [StoreUnarchivedEvent]);
      if (data.hasOwnProperty('StorePublishedEvent'))
        obj.StorePublishedEvent = ApiClient.convertToType(data['StorePublishedEvent'], [StorePublishedEvent]);
      if (data.hasOwnProperty('StoreUnpublishedEvent'))
        obj.StoreUnpublishedEvent = ApiClient.convertToType(data['StoreUnpublishedEvent'], [StoreUnpublishedEvent]);
      if (data.hasOwnProperty('StoreUpdatedEvent'))
        obj.StoreUpdatedEvent = ApiClient.convertToType(data['StoreUpdatedEvent'], [StoreUpdatedEvent]);
      if (data.hasOwnProperty('StorePreOrderConfigUpdatedEvent'))
        obj.StorePreOrderConfigUpdatedEvent = ApiClient.convertToType(data['StorePreOrderConfigUpdatedEvent'], [StorePreOrderConfigUpdatedEvent]);
      if (data.hasOwnProperty('StoreLogoCreatedEvent'))
        obj.StoreLogoCreatedEvent = ApiClient.convertToType(data['StoreLogoCreatedEvent'], [StoreLogoCreatedEvent]);
      if (data.hasOwnProperty('StoreLogoUpdatedEvent'))
        obj.StoreLogoUpdatedEvent = ApiClient.convertToType(data['StoreLogoUpdatedEvent'], [StoreLogoUpdatedEvent]);
      if (data.hasOwnProperty('StoreLogoDeletedEvent'))
        obj.StoreLogoDeletedEvent = ApiClient.convertToType(data['StoreLogoDeletedEvent'], [StoreLogoDeletedEvent]);
      if (data.hasOwnProperty('MenuCreatedEvent'))
        obj.MenuCreatedEvent = ApiClient.convertToType(data['MenuCreatedEvent'], [MenuCreatedEvent]);
      if (data.hasOwnProperty('MenuUpdatedEvent'))
        obj.MenuUpdatedEvent = ApiClient.convertToType(data['MenuUpdatedEvent'], [MenuUpdatedEvent]);
      if (data.hasOwnProperty('MenuUploadedEvent'))
        obj.MenuUploadedEvent = ApiClient.convertToType(data['MenuUploadedEvent'], [MenuUploadedEvent]);
      if (data.hasOwnProperty('MenuBulkEditEvent'))
        obj.MenuBulkEditEvent = ApiClient.convertToType(data['MenuBulkEditEvent'], [MenuBulkEditEvent]);
      if (data.hasOwnProperty('MenuSectionCreatedEvent'))
        obj.MenuSectionCreatedEvent = ApiClient.convertToType(data['MenuSectionCreatedEvent'], [MenuSectionCreatedEvent]);
      if (data.hasOwnProperty('MenuSectionUpdatedEvent'))
        obj.MenuSectionUpdatedEvent = ApiClient.convertToType(data['MenuSectionUpdatedEvent'], [MenuSectionUpdatedEvent]);
      if (data.hasOwnProperty('MenuSectionDeletedEvent'))
        obj.MenuSectionDeletedEvent = ApiClient.convertToType(data['MenuSectionDeletedEvent'], [MenuSectionDeletedEvent]);
      if (data.hasOwnProperty('MenuSectionItemCreatedEvent'))
        obj.MenuSectionItemCreatedEvent = ApiClient.convertToType(data['MenuSectionItemCreatedEvent'], [MenuSectionItemCreatedEvent]);
      if (data.hasOwnProperty('MenuSectionItemUpdatedEvent'))
        obj.MenuSectionItemUpdatedEvent = ApiClient.convertToType(data['MenuSectionItemUpdatedEvent'], [MenuSectionItemUpdatedEvent]);
      if (data.hasOwnProperty('MenuSectionItemDeletedEvent'))
        obj.MenuSectionItemDeletedEvent = ApiClient.convertToType(data['MenuSectionItemDeletedEvent'], [MenuSectionItemDeletedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetCreatedEvent'))
        obj.MenuItemOptionSetCreatedEvent = ApiClient.convertToType(data['MenuItemOptionSetCreatedEvent'], [MenuItemOptionSetCreatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetUpdatedEvent'))
        obj.MenuItemOptionSetUpdatedEvent = ApiClient.convertToType(data['MenuItemOptionSetUpdatedEvent'], [MenuItemOptionSetUpdatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetDeletedEvent'))
        obj.MenuItemOptionSetDeletedEvent = ApiClient.convertToType(data['MenuItemOptionSetDeletedEvent'], [MenuItemOptionSetDeletedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemCreatedEvent'))
        obj.MenuItemOptionSetItemCreatedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemCreatedEvent'], [MenuItemOptionSetItemCreatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemUpdatedEvent'))
        obj.MenuItemOptionSetItemUpdatedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemUpdatedEvent'], [MenuItemOptionSetItemUpdatedEvent]);
      if (data.hasOwnProperty('MenuItemOptionSetItemDeletedEvent'))
        obj.MenuItemOptionSetItemDeletedEvent = ApiClient.convertToType(data['MenuItemOptionSetItemDeletedEvent'], [MenuItemOptionSetItemDeletedEvent]);
      if (data.hasOwnProperty('MenuCheckpointCreatedEvent'))
        obj.MenuCheckpointCreatedEvent = ApiClient.convertToType(data['MenuCheckpointCreatedEvent'], [MenuCheckpointCreatedEvent]);
      if (data.hasOwnProperty('StoreGroupCreatedEvent'))
        obj.StoreGroupCreatedEvent = ApiClient.convertToType(data['StoreGroupCreatedEvent'], [StoreGroupCreatedEvent]);
      if (data.hasOwnProperty('StoreGroupUpdatedEvent'))
        obj.StoreGroupUpdatedEvent = ApiClient.convertToType(data['StoreGroupUpdatedEvent'], [StoreGroupUpdatedEvent]);
      if (data.hasOwnProperty('StoreGroupDeletedEvent'))
        obj.StoreGroupDeletedEvent = ApiClient.convertToType(data['StoreGroupDeletedEvent'], [StoreGroupDeletedEvent]);
      if (data.hasOwnProperty('CustomerCreatedEvent'))
        obj.CustomerCreatedEvent = ApiClient.convertToType(data['CustomerCreatedEvent'], [CustomerCreatedEvent]);
      if (data.hasOwnProperty('CustomerUpdatedEvent'))
        obj.CustomerUpdatedEvent = ApiClient.convertToType(data['CustomerUpdatedEvent'], [CustomerUpdatedEvent]);
      if (data.hasOwnProperty('CustomerConsentUpdatedEvent'))
        obj.CustomerConsentUpdatedEvent = ApiClient.convertToType(data['CustomerConsentUpdatedEvent'], [CustomerConsentUpdatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionCreatedEvent'))
        obj.WebhookSubscriptionCreatedEvent = ApiClient.convertToType(data['WebhookSubscriptionCreatedEvent'], [WebhookSubscriptionCreatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionUpdatedEvent'))
        obj.WebhookSubscriptionUpdatedEvent = ApiClient.convertToType(data['WebhookSubscriptionUpdatedEvent'], [WebhookSubscriptionUpdatedEvent]);
      if (data.hasOwnProperty('WebhookSubscriptionDeletedEvent'))
        obj.WebhookSubscriptionDeletedEvent = ApiClient.convertToType(data['WebhookSubscriptionDeletedEvent'], [WebhookSubscriptionDeletedEvent]);
      if (data.hasOwnProperty('PrinterTurnedOnEvent'))
        obj.PrinterTurnedOnEvent = ApiClient.convertToType(data['PrinterTurnedOnEvent'], [PrinterTurnedOnEvent]);
      if (data.hasOwnProperty('PrinterTurnedOffEvent'))
        obj.PrinterTurnedOffEvent = ApiClient.convertToType(data['PrinterTurnedOffEvent'], [PrinterTurnedOffEvent]);
      if (data.hasOwnProperty('PrinterAssignedToStoreEvent'))
        obj.PrinterAssignedToStoreEvent = ApiClient.convertToType(data['PrinterAssignedToStoreEvent'], [PrinterAssignedToStoreEvent]);
      if (data.hasOwnProperty('PrinterUnassignedFromStoreEvent'))
        obj.PrinterUnassignedFromStoreEvent = ApiClient.convertToType(data['PrinterUnassignedFromStoreEvent'], [PrinterUnassignedFromStoreEvent]);
      if (data.hasOwnProperty('PhoneCallStartedEvent'))
        obj.PhoneCallStartedEvent = ApiClient.convertToType(data['PhoneCallStartedEvent'], [PhoneCallStartedEvent]);
      if (data.hasOwnProperty('PhoneCallEndedEvent'))
        obj.PhoneCallEndedEvent = ApiClient.convertToType(data['PhoneCallEndedEvent'], [PhoneCallEndedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignCreatedEvent'))
        obj.LoyaltyCampaignCreatedEvent = ApiClient.convertToType(data['LoyaltyCampaignCreatedEvent'], [LoyaltyCampaignCreatedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignDeletedEvent'))
        obj.LoyaltyCampaignDeletedEvent = ApiClient.convertToType(data['LoyaltyCampaignDeletedEvent'], [LoyaltyCampaignDeletedEvent]);
      if (data.hasOwnProperty('LoyaltyCampaignUpdatedEvent'))
        obj.LoyaltyCampaignUpdatedEvent = ApiClient.convertToType(data['LoyaltyCampaignUpdatedEvent'], [LoyaltyCampaignUpdatedEvent]);
      if (data.hasOwnProperty('RetentionCampaignCreatedEvent'))
        obj.RetentionCampaignCreatedEvent = ApiClient.convertToType(data['RetentionCampaignCreatedEvent'], [RetentionCampaignCreatedEvent]);
      if (data.hasOwnProperty('RetentionCampaignDeletedEvent'))
        obj.RetentionCampaignDeletedEvent = ApiClient.convertToType(data['RetentionCampaignDeletedEvent'], [RetentionCampaignDeletedEvent]);
      if (data.hasOwnProperty('RetentionCampaignUpdatedEvent'))
        obj.RetentionCampaignUpdatedEvent = ApiClient.convertToType(data['RetentionCampaignUpdatedEvent'], [RetentionCampaignUpdatedEvent]);
      if (data.hasOwnProperty('SmsReceivedEvent'))
        obj.SmsReceivedEvent = ApiClient.convertToType(data['SmsReceivedEvent'], [SmsReceivedEvent]);
      if (data.hasOwnProperty('UserLoginEvent'))
        obj.UserLoginEvent = ApiClient.convertToType(data['UserLoginEvent'], [UserLoginEvent]);
      if (data.hasOwnProperty('UserCreatedEvent'))
        obj.UserCreatedEvent = ApiClient.convertToType(data['UserCreatedEvent'], [UserCreatedEvent]);
      if (data.hasOwnProperty('UserUpdatedEvent'))
        obj.UserUpdatedEvent = ApiClient.convertToType(data['UserUpdatedEvent'], [UserUpdatedEvent]);
      if (data.hasOwnProperty('UserDeletedEvent'))
        obj.UserDeletedEvent = ApiClient.convertToType(data['UserDeletedEvent'], [UserDeletedEvent]);
      if (data.hasOwnProperty('UserCreatedPasswordEvent'))
        obj.UserCreatedPasswordEvent = ApiClient.convertToType(data['UserCreatedPasswordEvent'], [UserPasswordCreatedEvent]);
      if (data.hasOwnProperty('UserAnsweredSignupQuestionsEvent'))
        obj.UserAnsweredSignupQuestionsEvent = ApiClient.convertToType(data['UserAnsweredSignupQuestionsEvent'], [UserAnsweredSignupQuestionsEvent]);
      if (data.hasOwnProperty('VoucherCreatedEvent'))
        obj.VoucherCreatedEvent = ApiClient.convertToType(data['VoucherCreatedEvent'], [VoucherCreatedEvent]);
      if (data.hasOwnProperty('VoucherUpdatedEvent'))
        obj.VoucherUpdatedEvent = ApiClient.convertToType(data['VoucherUpdatedEvent'], [VoucherUpdatedEvent]);
      if (data.hasOwnProperty('VoucherDeletedEvent'))
        obj.VoucherDeletedEvent = ApiClient.convertToType(data['VoucherDeletedEvent'], [VoucherDeletedEvent]);
      if (data.hasOwnProperty('TeammateInviteSentEvent'))
        obj.TeammateInviteSentEvent = ApiClient.convertToType(data['TeammateInviteSentEvent'], [TeammateInviteSentEvent]);
      if (data.hasOwnProperty('TeammateInviteAcceptedEvent'))
        obj.TeammateInviteAcceptedEvent = ApiClient.convertToType(data['TeammateInviteAcceptedEvent'], [TeammateInviteAcceptedEvent]);
      if (data.hasOwnProperty('TeammateUpdatedEvent'))
        obj.TeammateUpdatedEvent = ApiClient.convertToType(data['TeammateUpdatedEvent'], [TeammateUpdatedEvent]);
      if (data.hasOwnProperty('TeammateDeletedEvent'))
        obj.TeammateDeletedEvent = ApiClient.convertToType(data['TeammateDeletedEvent'], [TeammateDeletedEvent]);
      if (data.hasOwnProperty('BankAccountCreatedEvent'))
        obj.BankAccountCreatedEvent = ApiClient.convertToType(data['BankAccountCreatedEvent'], [BankAccountCreatedEvent]);
      if (data.hasOwnProperty('BankAccountUpdatedEvent'))
        obj.BankAccountUpdatedEvent = ApiClient.convertToType(data['BankAccountUpdatedEvent'], [BankAccountUpdatedEvent]);
      if (data.hasOwnProperty('BankAccountDeletedEvent'))
        obj.BankAccountDeletedEvent = ApiClient.convertToType(data['BankAccountDeletedEvent'], [BankAccountDeletedEvent]);
      if (data.hasOwnProperty('BankAccountAssignedEvent'))
        obj.BankAccountAssignedEvent = ApiClient.convertToType(data['BankAccountAssignedEvent'], [BankAccountDeletedEvent]);
      if (data.hasOwnProperty('HydraAssignedEvent'))
        obj.HydraAssignedEvent = ApiClient.convertToType(data['HydraAssignedEvent'], [HydraAssignedEvent]);
      if (data.hasOwnProperty('HydraRequestResetEvent'))
        obj.HydraRequestResetEvent = ApiClient.convertToType(data['HydraRequestResetEvent'], [HydraRequestResetEvent]);
      if (data.hasOwnProperty('HydraStoreAssignedEvent'))
        obj.HydraStoreAssignedEvent = ApiClient.convertToType(data['HydraStoreAssignedEvent'], [HydraStoreAssignedEvent]);
      if (data.hasOwnProperty('HydraStoreUnassignedEvent'))
        obj.HydraStoreUnassignedEvent = ApiClient.convertToType(data['HydraStoreUnassignedEvent'], [HydraStoreUnassignedEvent]);
      if (data.hasOwnProperty('HydraSettingChangedEvent'))
        obj.HydraSettingChangedEvent = ApiClient.convertToType(data['HydraSettingChangedEvent'], [HydraSettingChangedEvent]);
      if (data.hasOwnProperty('HydraUnAssignedEvent'))
        obj.HydraUnAssignedEvent = ApiClient.convertToType(data['HydraUnAssignedEvent'], [HydraUnAssignedEvent]);
      if (data.hasOwnProperty('HydraConnectionStatusChangedEvent'))
        obj.HydraConnectionStatusChangedEvent = ApiClient.convertToType(data['HydraConnectionStatusChangedEvent'], [HydraConnectionStatusChangedEvent]);
      if (data.hasOwnProperty('KioskBluetoothPairingModeEvent'))
        obj.KioskBluetoothPairingModeEvent = ApiClient.convertToType(data['KioskBluetoothPairingModeEvent'], [KioskBluetoothPairingModeEvent]);
      if (data.hasOwnProperty('KioskBluetoothUnpairingModeEvent'))
        obj.KioskBluetoothUnpairingModeEvent = ApiClient.convertToType(data['KioskBluetoothUnpairingModeEvent'], [KioskBluetoothUnpairingModeEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalUnpairedEvent'))
        obj.KioskBluetoothTerminalUnpairedEvent = ApiClient.convertToType(data['KioskBluetoothTerminalUnpairedEvent'], [KioskBluetoothTerminalUnpairedEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalUpdatedEvent'))
        obj.KioskBluetoothTerminalUpdatedEvent = ApiClient.convertToType(data['KioskBluetoothTerminalUpdatedEvent'], [KioskBluetoothTerminalUpdatedEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalInitiateUpdateCheckEvent'))
        obj.KioskBluetoothTerminalInitiateUpdateCheckEvent = ApiClient.convertToType(data['KioskBluetoothTerminalInitiateUpdateCheckEvent'], [KioskBluetoothTerminalInitiateUpdateCheckEvent]);
      if (data.hasOwnProperty('KioskBluetoothInstallUpdateInitiateEvent'))
        obj.KioskBluetoothInstallUpdateInitiateEvent = ApiClient.convertToType(data['KioskBluetoothInstallUpdateInitiateEvent'], [KioskBluetoothInstallUpdateInitiateEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalCancelUpdateEvent'))
        obj.KioskBluetoothTerminalCancelUpdateEvent = ApiClient.convertToType(data['KioskBluetoothTerminalCancelUpdateEvent'], [KioskBluetoothTerminalCancelUpdateEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalFirmwareVersionStatusEvent'))
        obj.KioskBluetoothTerminalFirmwareVersionStatusEvent = ApiClient.convertToType(data['KioskBluetoothTerminalFirmwareVersionStatusEvent'], [KioskBluetoothTerminalFirmwareVersionStatusEvent]);
      if (data.hasOwnProperty('KioskBluetoothTerminalInstallationStatusEvent'))
        obj.KioskBluetoothTerminalInstallationStatusEvent = ApiClient.convertToType(data['KioskBluetoothTerminalInstallationStatusEvent'], [KioskBluetoothTerminalInstallationStatusEvent]);
      if (data.hasOwnProperty('PushNotificationScheduledEvent'))
        obj.PushNotificationScheduledEvent = ApiClient.convertToType(data['PushNotificationScheduledEvent'], [PushNotificationScheduledEvent]);
      if (data.hasOwnProperty('PushNotificationSentEvent'))
        obj.PushNotificationSentEvent = ApiClient.convertToType(data['PushNotificationSentEvent'], [PushNotificationSentEvent]);
      if (data.hasOwnProperty('PushNotificationDeletedEvent'))
        obj.PushNotificationDeletedEvent = ApiClient.convertToType(data['PushNotificationDeletedEvent'], [PushNotificationDeletedEvent]);
      if (data.hasOwnProperty('DnsVerifiedEvent'))
        obj.DnsVerifiedEvent = ApiClient.convertToType(data['DnsVerifiedEvent'], [DnsVerifiedEvent]);
      if (data.hasOwnProperty('CertificateCreatedEvent'))
        obj.CertificateCreatedEvent = ApiClient.convertToType(data['CertificateCreatedEvent'], [CertificateCreatedEvent]);
      if (data.hasOwnProperty('CertificateRenewedEvent'))
        obj.CertificateRenewedEvent = ApiClient.convertToType(data['CertificateRenewedEvent'], [CertificateRenewedEvent]);
      if (data.hasOwnProperty('WebsiteVanityUrlUpdatedEvent'))
        obj.WebsiteVanityUrlUpdatedEvent = ApiClient.convertToType(data['WebsiteVanityUrlUpdatedEvent'], [WebsiteVanityUrlUpdatedEvent]);
      if (data.hasOwnProperty('WebsiteUpdatedEvent'))
        obj.WebsiteUpdatedEvent = ApiClient.convertToType(data['WebsiteUpdatedEvent'], [WebsiteUpdatedEvent]);
      if (data.hasOwnProperty('OrderCapacityUpdatedEvent'))
        obj.OrderCapacityUpdatedEvent = ApiClient.convertToType(data['OrderCapacityUpdatedEvent'], [OrderCapacityConfigUpdatedEvent]);
      if (data.hasOwnProperty('ExternalStoreEvent'))
        obj.ExternalStoreEvent = ApiClient.convertToType(data['ExternalStoreEvent'], [ExternalStoreEvent]);
      if (data.hasOwnProperty('AppStoreConfigCreatedEvent'))
        obj.AppStoreConfigCreatedEvent = ApiClient.convertToType(data['AppStoreConfigCreatedEvent'], [AppStoreConfigCreatedEvent]);
      if (data.hasOwnProperty('AppStoreConfigUpdatedEvent'))
        obj.AppStoreConfigUpdatedEvent = ApiClient.convertToType(data['AppStoreConfigUpdatedEvent'], [AppStoreConfigUpdatedEvent]);
      if (data.hasOwnProperty('AppStoreConfigDeletedEvent'))
        obj.AppStoreConfigDeletedEvent = ApiClient.convertToType(data['AppStoreConfigDeletedEvent'], [AppStoreConfigDeletedEvent]);
      if (data.hasOwnProperty('CatalogItemCreatedEvent'))
        obj.CatalogItemCreatedEvent = ApiClient.convertToType(data['CatalogItemCreatedEvent'], [CatalogItemCreatedEvent]);
      if (data.hasOwnProperty('CatalogItemUpdatedEvent'))
        obj.CatalogItemUpdatedEvent = ApiClient.convertToType(data['CatalogItemUpdatedEvent'], [CatalogItemUpdatedEvent]);
      if (data.hasOwnProperty('CatalogItemArchivedEvent'))
        obj.CatalogItemArchivedEvent = ApiClient.convertToType(data['CatalogItemArchivedEvent'], [CatalogItemArchivedEvent]);
      if (data.hasOwnProperty('CatalogGroupCreatedEvent'))
        obj.CatalogGroupCreatedEvent = ApiClient.convertToType(data['CatalogGroupCreatedEvent'], [CatalogGroupCreatedEvent]);
      if (data.hasOwnProperty('CatalogGroupUpdatedEvent'))
        obj.CatalogGroupUpdatedEvent = ApiClient.convertToType(data['CatalogGroupUpdatedEvent'], [CatalogGroupUpdatedEvent]);
      if (data.hasOwnProperty('CatalogGroupArchivedEvent'))
        obj.CatalogGroupArchivedEvent = ApiClient.convertToType(data['CatalogGroupArchivedEvent'], [CatalogGroupArchivedEvent]);
      if (data.hasOwnProperty('StoreTipUpdatedEvent'))
        obj.StoreTipUpdatedEvent = ApiClient.convertToType(data['StoreTipUpdatedEvent'], [StoreTipUpdatedEvent]);
      if (data.hasOwnProperty('StoreServiceChargeUpdatedEvent'))
        obj.StoreServiceChargeUpdatedEvent = ApiClient.convertToType(data['StoreServiceChargeUpdatedEvent'], [StoreServiceChargeUpdatedEvent]);
    }
    return obj;
  }

  /**
   * App Created Event
   * @member {Array.<module:model/AppCreatedEvent>} AppCreatedEvent
   */
  exports.prototype.AppCreatedEvent = undefined;

  /**
   * App Updated Event
   * @member {Array.<module:model/AppUpdatedEvent>} AppUpdatedEvent
   */
  exports.prototype.AppUpdatedEvent = undefined;

  /**
   * Client Analytics events
   * @member {Array.<module:model/AnalyticsClientEvent>} AnalyticsClientEvent
   */
  exports.prototype.AnalyticsClientEvent = undefined;

  /**
   * Order accepted events
   * @member {Array.<module:model/OrderAcceptedEvent>} OrderAcceptedEvent
   */
  exports.prototype.OrderAcceptedEvent = undefined;

  /**
   * Order dispatched events
   * @member {Array.<module:model/OrderDispatchedEvent>} OrderDispatchedEvent
   */
  exports.prototype.OrderDispatchedEvent = undefined;

  /**
   * Order delivery tracking created events
   * @member {Array.<module:model/OrderCustomerTrackingCreatedEvent>} OrderCustomerTrackingCreatedEvent
   */
  exports.prototype.OrderCustomerTrackingCreatedEvent = undefined;

  /**
   * Order delivery tracking updated events
   * @member {Array.<module:model/OrderDeliveryTrackingStatusUpdatedEvent>} OrderDeliveryTrackingStatusUpdatedEvent
   */
  exports.prototype.OrderDeliveryTrackingStatusUpdatedEvent = undefined;

  /**
   * Order created events
   * @member {Array.<module:model/OrderCreatedEvent>} OrderCreatedEvent
   */
  exports.prototype.OrderCreatedEvent = undefined;

  /**
   * Order rating updated events
   * @member {Array.<module:model/OrderRatingUpdatedEvent>} OrderRatingUpdatedEvent
   */
  exports.prototype.OrderRatingUpdatedEvent = undefined;

  /**
   * Order refunded events
   * @member {Array.<module:model/OrderRefundedEvent>} OrderRefundedEvent
   */
  exports.prototype.OrderRefundedEvent = undefined;

  /**
   * Order rejected events
   * @member {Array.<module:model/OrderRejectedEvent>} OrderRejectedEvent
   */
  exports.prototype.OrderRejectedEvent = undefined;

  /**
   * Order tip updated events
   * @member {Array.<module:model/OrderTipUpdatedEvent>} OrderTipUpdatedEvent
   */
  exports.prototype.OrderTipUpdatedEvent = undefined;

  /**
   * Order Terminal Notification events
   * @member {Array.<module:model/EmvNotificationEvent>} OrderTerminalNotifications
   */
  exports.prototype.OrderTerminalNotifications = undefined;

  /**
   * Store created events
   * @member {Array.<module:model/StoreCreatedEvent>} StoreCreatedEvent
   */
  exports.prototype.StoreCreatedEvent = undefined;

  /**
   * Store deleted events
   * @member {Array.<module:model/StoreDeletedEvent>} StoreDeletedEvent
   */
  exports.prototype.StoreDeletedEvent = undefined;

  /**
   * Store address updated events
   * @member {Array.<module:model/StoreAddressUpdatedEvent>} StoreAddressUpdatedEvent
   */
  exports.prototype.StoreAddressUpdatedEvent = undefined;

  /**
   * Store kiosk setting updated events
   * @member {Array.<module:model/StoreKioskSettingUpdatedEvent>} StoreKioskSettingUpdatedEvent
   */
  exports.prototype.StoreKioskSettingUpdatedEvent = undefined;

  /**
   * Store delivery zone created events
   * @member {Array.<module:model/DeliveryZoneCreatedEvent>} DeliveryZoneCreatedEvent
   */
  exports.prototype.DeliveryZoneCreatedEvent = undefined;

  /**
   * Store delivery zone updated events
   * @member {Array.<module:model/DeliveryZoneUpdatedEvent>} DeliveryZoneUpdatedEvent
   */
  exports.prototype.DeliveryZoneUpdatedEvent = undefined;

  /**
   * Store delivery zone deleted events
   * @member {Array.<module:model/DeliveryZoneDeletedEvent>} DeliveryZoneDeletedEvent
   */
  exports.prototype.DeliveryZoneDeletedEvent = undefined;

  /**
   * Store opening hours updated events
   * @member {Array.<module:model/StoreOpeningHoursUpdatedEvent>} StoreOpeningHoursUpdatedEvent
   */
  exports.prototype.StoreOpeningHoursUpdatedEvent = undefined;

  /**
   * Store opening hours updated events
   * @member {Array.<module:model/StoreMenuAssignedEvent>} StoreMenuAssignedEvent
   */
  exports.prototype.StoreMenuAssignedEvent = undefined;

  /**
   * Store business hours override created events
   * @member {Array.<module:model/StoreBusinessHoursOverrideCreatedEvent>} StoreBusinessHoursOverrideCreatedEvent
   */
  exports.prototype.StoreBusinessHoursOverrideCreatedEvent = undefined;

  /**
   * Store business hours override deleted events
   * @member {Array.<module:model/StoreBusinessHoursOverrideDeletedEvent>} StoreBusinessHoursOverrideDeletedEvent
   */
  exports.prototype.StoreBusinessHoursOverrideDeletedEvent = undefined;

  /**
   * Store archived events
   * @member {Array.<module:model/StoreArchivedEvent>} StoreArchivedEvent
   */
  exports.prototype.StoreArchivedEvent = undefined;

  /**
   * Store unarchived events
   * @member {Array.<module:model/StoreUnarchivedEvent>} StoreUnarchivedEvent
   */
  exports.prototype.StoreUnarchivedEvent = undefined;

  /**
   * Store published events
   * @member {Array.<module:model/StorePublishedEvent>} StorePublishedEvent
   */
  exports.prototype.StorePublishedEvent = undefined;

  /**
   * Store unpublished events
   * @member {Array.<module:model/StoreUnpublishedEvent>} StoreUnpublishedEvent
   */
  exports.prototype.StoreUnpublishedEvent = undefined;

  /**
   * Store updated events
   * @member {Array.<module:model/StoreUpdatedEvent>} StoreUpdatedEvent
   */
  exports.prototype.StoreUpdatedEvent = undefined;

  /**
   * Store updated events
   * @member {Array.<module:model/StorePreOrderConfigUpdatedEvent>} StorePreOrderConfigUpdatedEvent
   */
  exports.prototype.StorePreOrderConfigUpdatedEvent = undefined;

  /**
   * Store logo created events
   * @member {Array.<module:model/StoreLogoCreatedEvent>} StoreLogoCreatedEvent
   */
  exports.prototype.StoreLogoCreatedEvent = undefined;

  /**
   * Store logo updated events
   * @member {Array.<module:model/StoreLogoUpdatedEvent>} StoreLogoUpdatedEvent
   */
  exports.prototype.StoreLogoUpdatedEvent = undefined;

  /**
   * Store logo deleted events
   * @member {Array.<module:model/StoreLogoDeletedEvent>} StoreLogoDeletedEvent
   */
  exports.prototype.StoreLogoDeletedEvent = undefined;

  /**
   * Menu created events
   * @member {Array.<module:model/MenuCreatedEvent>} MenuCreatedEvent
   */
  exports.prototype.MenuCreatedEvent = undefined;

  /**
   * Menu updated events
   * @member {Array.<module:model/MenuUpdatedEvent>} MenuUpdatedEvent
   */
  exports.prototype.MenuUpdatedEvent = undefined;

  /**
   * Menu uploaded events
   * @member {Array.<module:model/MenuUploadedEvent>} MenuUploadedEvent
   */
  exports.prototype.MenuUploadedEvent = undefined;

  /**
   * Menu bulk events
   * @member {Array.<module:model/MenuBulkEditEvent>} MenuBulkEditEvent
   */
  exports.prototype.MenuBulkEditEvent = undefined;

  /**
   * Menu section created events
   * @member {Array.<module:model/MenuSectionCreatedEvent>} MenuSectionCreatedEvent
   */
  exports.prototype.MenuSectionCreatedEvent = undefined;

  /**
   * Menu section updated events
   * @member {Array.<module:model/MenuSectionUpdatedEvent>} MenuSectionUpdatedEvent
   */
  exports.prototype.MenuSectionUpdatedEvent = undefined;

  /**
   * Menu section deleted events
   * @member {Array.<module:model/MenuSectionDeletedEvent>} MenuSectionDeletedEvent
   */
  exports.prototype.MenuSectionDeletedEvent = undefined;

  /**
   * Menu section item created events
   * @member {Array.<module:model/MenuSectionItemCreatedEvent>} MenuSectionItemCreatedEvent
   */
  exports.prototype.MenuSectionItemCreatedEvent = undefined;

  /**
   * Menu section item updated events
   * @member {Array.<module:model/MenuSectionItemUpdatedEvent>} MenuSectionItemUpdatedEvent
   */
  exports.prototype.MenuSectionItemUpdatedEvent = undefined;

  /**
   * Menu section item deleted events
   * @member {Array.<module:model/MenuSectionItemDeletedEvent>} MenuSectionItemDeletedEvent
   */
  exports.prototype.MenuSectionItemDeletedEvent = undefined;

  /**
   * Menu item option set created events
   * @member {Array.<module:model/MenuItemOptionSetCreatedEvent>} MenuItemOptionSetCreatedEvent
   */
  exports.prototype.MenuItemOptionSetCreatedEvent = undefined;

  /**
   * Menu item option set  updated events
   * @member {Array.<module:model/MenuItemOptionSetUpdatedEvent>} MenuItemOptionSetUpdatedEvent
   */
  exports.prototype.MenuItemOptionSetUpdatedEvent = undefined;

  /**
   * Menu item option set deleted events
   * @member {Array.<module:model/MenuItemOptionSetDeletedEvent>} MenuItemOptionSetDeletedEvent
   */
  exports.prototype.MenuItemOptionSetDeletedEvent = undefined;

  /**
   * Menu item option set item created events
   * @member {Array.<module:model/MenuItemOptionSetItemCreatedEvent>} MenuItemOptionSetItemCreatedEvent
   */
  exports.prototype.MenuItemOptionSetItemCreatedEvent = undefined;

  /**
   * Menu item option set item updated events
   * @member {Array.<module:model/MenuItemOptionSetItemUpdatedEvent>} MenuItemOptionSetItemUpdatedEvent
   */
  exports.prototype.MenuItemOptionSetItemUpdatedEvent = undefined;

  /**
   * Menu item option set item deleted events
   * @member {Array.<module:model/MenuItemOptionSetItemDeletedEvent>} MenuItemOptionSetItemDeletedEvent
   */
  exports.prototype.MenuItemOptionSetItemDeletedEvent = undefined;

  /**
   * Menu checkpoint created event
   * @member {Array.<module:model/MenuCheckpointCreatedEvent>} MenuCheckpointCreatedEvent
   */
  exports.prototype.MenuCheckpointCreatedEvent = undefined;

  /**
   * Store group created events
   * @member {Array.<module:model/StoreGroupCreatedEvent>} StoreGroupCreatedEvent
   */
  exports.prototype.StoreGroupCreatedEvent = undefined;

  /**
   * Store group updated events
   * @member {Array.<module:model/StoreGroupUpdatedEvent>} StoreGroupUpdatedEvent
   */
  exports.prototype.StoreGroupUpdatedEvent = undefined;

  /**
   * Store group deleted events
   * @member {Array.<module:model/StoreGroupDeletedEvent>} StoreGroupDeletedEvent
   */
  exports.prototype.StoreGroupDeletedEvent = undefined;

  /**
   * Customer created events
   * @member {Array.<module:model/CustomerCreatedEvent>} CustomerCreatedEvent
   */
  exports.prototype.CustomerCreatedEvent = undefined;

  /**
   * Customer updated events
   * @member {Array.<module:model/CustomerUpdatedEvent>} CustomerUpdatedEvent
   */
  exports.prototype.CustomerUpdatedEvent = undefined;

  /**
   * Customer consent updated events
   * @member {Array.<module:model/CustomerConsentUpdatedEvent>} CustomerConsentUpdatedEvent
   */
  exports.prototype.CustomerConsentUpdatedEvent = undefined;

  /**
   * Webhook subscription created events
   * @member {Array.<module:model/WebhookSubscriptionCreatedEvent>} WebhookSubscriptionCreatedEvent
   */
  exports.prototype.WebhookSubscriptionCreatedEvent = undefined;

  /**
   * Webhook subscription updated events
   * @member {Array.<module:model/WebhookSubscriptionUpdatedEvent>} WebhookSubscriptionUpdatedEvent
   */
  exports.prototype.WebhookSubscriptionUpdatedEvent = undefined;

  /**
   * Webhook subscription deleted events
   * @member {Array.<module:model/WebhookSubscriptionDeletedEvent>} WebhookSubscriptionDeletedEvent
   */
  exports.prototype.WebhookSubscriptionDeletedEvent = undefined;

  /**
   * Printer turned ON event
   * @member {Array.<module:model/PrinterTurnedOnEvent>} PrinterTurnedOnEvent
   */
  exports.prototype.PrinterTurnedOnEvent = undefined;

  /**
   * Printer turned OFF event
   * @member {Array.<module:model/PrinterTurnedOffEvent>} PrinterTurnedOffEvent
   */
  exports.prototype.PrinterTurnedOffEvent = undefined;

  /**
   * Printer assigned to store event
   * @member {Array.<module:model/PrinterAssignedToStoreEvent>} PrinterAssignedToStoreEvent
   */
  exports.prototype.PrinterAssignedToStoreEvent = undefined;

  /**
   * Printer unassigned from store event
   * @member {Array.<module:model/PrinterUnassignedFromStoreEvent>} PrinterUnassignedFromStoreEvent
   */
  exports.prototype.PrinterUnassignedFromStoreEvent = undefined;

  /**
   * Phone call started event
   * @member {Array.<module:model/PhoneCallStartedEvent>} PhoneCallStartedEvent
   */
  exports.prototype.PhoneCallStartedEvent = undefined;

  /**
   * Phone call ended event
   * @member {Array.<module:model/PhoneCallEndedEvent>} PhoneCallEndedEvent
   */
  exports.prototype.PhoneCallEndedEvent = undefined;

  /**
   * Loyalty campaign created event
   * @member {Array.<module:model/LoyaltyCampaignCreatedEvent>} LoyaltyCampaignCreatedEvent
   */
  exports.prototype.LoyaltyCampaignCreatedEvent = undefined;

  /**
   * Loyalty campaign deleted event
   * @member {Array.<module:model/LoyaltyCampaignDeletedEvent>} LoyaltyCampaignDeletedEvent
   */
  exports.prototype.LoyaltyCampaignDeletedEvent = undefined;

  /**
   * Loyalty campaign updated event
   * @member {Array.<module:model/LoyaltyCampaignUpdatedEvent>} LoyaltyCampaignUpdatedEvent
   */
  exports.prototype.LoyaltyCampaignUpdatedEvent = undefined;

  /**
   * Retention campaign created event
   * @member {Array.<module:model/RetentionCampaignCreatedEvent>} RetentionCampaignCreatedEvent
   */
  exports.prototype.RetentionCampaignCreatedEvent = undefined;

  /**
   * Retention campaign deleted event
   * @member {Array.<module:model/RetentionCampaignDeletedEvent>} RetentionCampaignDeletedEvent
   */
  exports.prototype.RetentionCampaignDeletedEvent = undefined;

  /**
   * Retention campaign updated event
   * @member {Array.<module:model/RetentionCampaignUpdatedEvent>} RetentionCampaignUpdatedEvent
   */
  exports.prototype.RetentionCampaignUpdatedEvent = undefined;

  /**
   * Sms received event
   * @member {Array.<module:model/SmsReceivedEvent>} SmsReceivedEvent
   */
  exports.prototype.SmsReceivedEvent = undefined;

  /**
   * User login event
   * @member {Array.<module:model/UserLoginEvent>} UserLoginEvent
   */
  exports.prototype.UserLoginEvent = undefined;

  /**
   * User created event
   * @member {Array.<module:model/UserCreatedEvent>} UserCreatedEvent
   */
  exports.prototype.UserCreatedEvent = undefined;

  /**
   * User updated event
   * @member {Array.<module:model/UserUpdatedEvent>} UserUpdatedEvent
   */
  exports.prototype.UserUpdatedEvent = undefined;

  /**
   * User deleted event
   * @member {Array.<module:model/UserDeletedEvent>} UserDeletedEvent
   */
  exports.prototype.UserDeletedEvent = undefined;

  /**
   * User password created event
   * @member {Array.<module:model/UserPasswordCreatedEvent>} UserCreatedPasswordEvent
   */
  exports.prototype.UserCreatedPasswordEvent = undefined;

  /**
   * User answered signup questions event
   * @member {Array.<module:model/UserAnsweredSignupQuestionsEvent>} UserAnsweredSignupQuestionsEvent
   */
  exports.prototype.UserAnsweredSignupQuestionsEvent = undefined;

  /**
   * Voucher created event
   * @member {Array.<module:model/VoucherCreatedEvent>} VoucherCreatedEvent
   */
  exports.prototype.VoucherCreatedEvent = undefined;

  /**
   * Voucher updated event
   * @member {Array.<module:model/VoucherUpdatedEvent>} VoucherUpdatedEvent
   */
  exports.prototype.VoucherUpdatedEvent = undefined;

  /**
   * Voucher deleted event
   * @member {Array.<module:model/VoucherDeletedEvent>} VoucherDeletedEvent
   */
  exports.prototype.VoucherDeletedEvent = undefined;

  /**
   * Teammate invite sent event
   * @member {Array.<module:model/TeammateInviteSentEvent>} TeammateInviteSentEvent
   */
  exports.prototype.TeammateInviteSentEvent = undefined;

  /**
   * Teammate invite accepted event
   * @member {Array.<module:model/TeammateInviteAcceptedEvent>} TeammateInviteAcceptedEvent
   */
  exports.prototype.TeammateInviteAcceptedEvent = undefined;

  /**
   * Teammate updated event
   * @member {Array.<module:model/TeammateUpdatedEvent>} TeammateUpdatedEvent
   */
  exports.prototype.TeammateUpdatedEvent = undefined;

  /**
   * Teammate deleted event
   * @member {Array.<module:model/TeammateDeletedEvent>} TeammateDeletedEvent
   */
  exports.prototype.TeammateDeletedEvent = undefined;

  /**
   * Bank account created event
   * @member {Array.<module:model/BankAccountCreatedEvent>} BankAccountCreatedEvent
   */
  exports.prototype.BankAccountCreatedEvent = undefined;

  /**
   * Bank account updated event
   * @member {Array.<module:model/BankAccountUpdatedEvent>} BankAccountUpdatedEvent
   */
  exports.prototype.BankAccountUpdatedEvent = undefined;

  /**
   * Bank account updated event
   * @member {Array.<module:model/BankAccountDeletedEvent>} BankAccountDeletedEvent
   */
  exports.prototype.BankAccountDeletedEvent = undefined;

  /**
   * Bank account assigned event
   * @member {Array.<module:model/BankAccountDeletedEvent>} BankAccountAssignedEvent
   */
  exports.prototype.BankAccountAssignedEvent = undefined;

  /**
   * Hydra assigned event
   * @member {Array.<module:model/HydraAssignedEvent>} HydraAssignedEvent
   */
  exports.prototype.HydraAssignedEvent = undefined;

  /**
   * Hydra reset requested event
   * @member {Array.<module:model/HydraRequestResetEvent>} HydraRequestResetEvent
   */
  exports.prototype.HydraRequestResetEvent = undefined;

  /**
   * Hydra store assigned event
   * @member {Array.<module:model/HydraStoreAssignedEvent>} HydraStoreAssignedEvent
   */
  exports.prototype.HydraStoreAssignedEvent = undefined;

  /**
   * Hydra store unassigned
   * @member {Array.<module:model/HydraStoreUnassignedEvent>} HydraStoreUnassignedEvent
   */
  exports.prototype.HydraStoreUnassignedEvent = undefined;

  /**
   * Hydra settings changed event
   * @member {Array.<module:model/HydraSettingChangedEvent>} HydraSettingChangedEvent
   */
  exports.prototype.HydraSettingChangedEvent = undefined;

  /**
   * Hydra un-assigned event
   * @member {Array.<module:model/HydraUnAssignedEvent>} HydraUnAssignedEvent
   */
  exports.prototype.HydraUnAssignedEvent = undefined;

  /**
   * Hydra connection state change
   * @member {Array.<module:model/HydraConnectionStatusChangedEvent>} HydraConnectionStatusChangedEvent
   */
  exports.prototype.HydraConnectionStatusChangedEvent = undefined;

  /**
   * Bluetooth Pairing Mode initiated
   * @member {Array.<module:model/KioskBluetoothPairingModeEvent>} KioskBluetoothPairingModeEvent
   */
  exports.prototype.KioskBluetoothPairingModeEvent = undefined;

  /**
   * Bluetooth Unpairing Mode initiated
   * @member {Array.<module:model/KioskBluetoothUnpairingModeEvent>} KioskBluetoothUnpairingModeEvent
   */
  exports.prototype.KioskBluetoothUnpairingModeEvent = undefined;

  /**
   * Bluetooth Terminal Unpaired with Kiosk
   * @member {Array.<module:model/KioskBluetoothTerminalUnpairedEvent>} KioskBluetoothTerminalUnpairedEvent
   */
  exports.prototype.KioskBluetoothTerminalUnpairedEvent = undefined;

  /**
   * Bluetooth Terminal Updated
   * @member {Array.<module:model/KioskBluetoothTerminalUpdatedEvent>} KioskBluetoothTerminalUpdatedEvent
   */
  exports.prototype.KioskBluetoothTerminalUpdatedEvent = undefined;

  /**
   * Trigger bluetooth payment terminal update checker
   * @member {Array.<module:model/KioskBluetoothTerminalInitiateUpdateCheckEvent>} KioskBluetoothTerminalInitiateUpdateCheckEvent
   */
  exports.prototype.KioskBluetoothTerminalInitiateUpdateCheckEvent = undefined;

  /**
   * Bluetooth Terminal Initiate Update
   * @member {Array.<module:model/KioskBluetoothInstallUpdateInitiateEvent>} KioskBluetoothInstallUpdateInitiateEvent
   */
  exports.prototype.KioskBluetoothInstallUpdateInitiateEvent = undefined;

  /**
   * Bluetooth Terminal Cancel Update Install
   * @member {Array.<module:model/KioskBluetoothTerminalCancelUpdateEvent>} KioskBluetoothTerminalCancelUpdateEvent
   */
  exports.prototype.KioskBluetoothTerminalCancelUpdateEvent = undefined;

  /**
   * Bluetooth Payment Terminal Firmware Version Status Info
   * @member {Array.<module:model/KioskBluetoothTerminalFirmwareVersionStatusEvent>} KioskBluetoothTerminalFirmwareVersionStatusEvent
   */
  exports.prototype.KioskBluetoothTerminalFirmwareVersionStatusEvent = undefined;

  /**
   * Bluetooth Terminal Update Installation Status
   * @member {Array.<module:model/KioskBluetoothTerminalInstallationStatusEvent>} KioskBluetoothTerminalInstallationStatusEvent
   */
  exports.prototype.KioskBluetoothTerminalInstallationStatusEvent = undefined;

  /**
   * Push notification scheduled event
   * @member {Array.<module:model/PushNotificationScheduledEvent>} PushNotificationScheduledEvent
   */
  exports.prototype.PushNotificationScheduledEvent = undefined;

  /**
   * Push notification sent event
   * @member {Array.<module:model/PushNotificationSentEvent>} PushNotificationSentEvent
   */
  exports.prototype.PushNotificationSentEvent = undefined;

  /**
   * Push notification deleted event
   * @member {Array.<module:model/PushNotificationDeletedEvent>} PushNotificationDeletedEvent
   */
  exports.prototype.PushNotificationDeletedEvent = undefined;

  /**
   * DNS Verified
   * @member {Array.<module:model/DnsVerifiedEvent>} DnsVerifiedEvent
   */
  exports.prototype.DnsVerifiedEvent = undefined;

  /**
   * Certificate created
   * @member {Array.<module:model/CertificateCreatedEvent>} CertificateCreatedEvent
   */
  exports.prototype.CertificateCreatedEvent = undefined;

  /**
   * Certificate renewed
   * @member {Array.<module:model/CertificateRenewedEvent>} CertificateRenewedEvent
   */
  exports.prototype.CertificateRenewedEvent = undefined;

  /**
   * Panacea vanity url updated
   * @member {Array.<module:model/WebsiteVanityUrlUpdatedEvent>} WebsiteVanityUrlUpdatedEvent
   */
  exports.prototype.WebsiteVanityUrlUpdatedEvent = undefined;

  /**
   * Website updated
   * @member {Array.<module:model/WebsiteUpdatedEvent>} WebsiteUpdatedEvent
   */
  exports.prototype.WebsiteUpdatedEvent = undefined;

  /**
   * Order capacity config updated
   * @member {Array.<module:model/OrderCapacityConfigUpdatedEvent>} OrderCapacityUpdatedEvent
   */
  exports.prototype.OrderCapacityUpdatedEvent = undefined;

  /**
   * External event
   * @member {Array.<module:model/ExternalStoreEvent>} ExternalStoreEvent
   */
  exports.prototype.ExternalStoreEvent = undefined;

  /**
   * App Store Config Created
   * @member {Array.<module:model/AppStoreConfigCreatedEvent>} AppStoreConfigCreatedEvent
   */
  exports.prototype.AppStoreConfigCreatedEvent = undefined;

  /**
   * App Store Config Updated
   * @member {Array.<module:model/AppStoreConfigUpdatedEvent>} AppStoreConfigUpdatedEvent
   */
  exports.prototype.AppStoreConfigUpdatedEvent = undefined;

  /**
   * App Store Config Deleted
   * @member {Array.<module:model/AppStoreConfigDeletedEvent>} AppStoreConfigDeletedEvent
   */
  exports.prototype.AppStoreConfigDeletedEvent = undefined;

  /**
   * Catalog Item Created
   * @member {Array.<module:model/CatalogItemCreatedEvent>} CatalogItemCreatedEvent
   */
  exports.prototype.CatalogItemCreatedEvent = undefined;

  /**
   * Catalog Item Updated
   * @member {Array.<module:model/CatalogItemUpdatedEvent>} CatalogItemUpdatedEvent
   */
  exports.prototype.CatalogItemUpdatedEvent = undefined;

  /**
   * Catalog Item Archived
   * @member {Array.<module:model/CatalogItemArchivedEvent>} CatalogItemArchivedEvent
   */
  exports.prototype.CatalogItemArchivedEvent = undefined;

  /**
   * Catalog Group Created
   * @member {Array.<module:model/CatalogGroupCreatedEvent>} CatalogGroupCreatedEvent
   */
  exports.prototype.CatalogGroupCreatedEvent = undefined;

  /**
   * Catalog Group Updated
   * @member {Array.<module:model/CatalogGroupUpdatedEvent>} CatalogGroupUpdatedEvent
   */
  exports.prototype.CatalogGroupUpdatedEvent = undefined;

  /**
   * Catalog Group Archived
   * @member {Array.<module:model/CatalogGroupArchivedEvent>} CatalogGroupArchivedEvent
   */
  exports.prototype.CatalogGroupArchivedEvent = undefined;

  /**
   * Store Tip Updated Event
   * @member {Array.<module:model/StoreTipUpdatedEvent>} StoreTipUpdatedEvent
   */
  exports.prototype.StoreTipUpdatedEvent = undefined;

  /**
   * Service Charge Updated Event
   * @member {Array.<module:model/StoreServiceChargeUpdatedEvent>} StoreServiceChargeUpdatedEvent
   */
  exports.prototype.StoreServiceChargeUpdatedEvent = undefined;


  return exports;

}));
