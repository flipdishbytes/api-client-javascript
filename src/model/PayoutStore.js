/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BalanceDetails', 'model/ChargebackDetails', 'model/FlipdishFeesDetails', 'model/OtherChargesDetails', 'model/RevenueAdjustmentsDetails', 'model/RevenueDetail'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BalanceDetails'), require('./ChargebackDetails'), require('./FlipdishFeesDetails'), require('./OtherChargesDetails'), require('./RevenueAdjustmentsDetails'), require('./RevenueDetail'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.PayoutStore = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.BalanceDetails, root.FlipdishOpenApiV10.ChargebackDetails, root.FlipdishOpenApiV10.FlipdishFeesDetails, root.FlipdishOpenApiV10.OtherChargesDetails, root.FlipdishOpenApiV10.RevenueAdjustmentsDetails, root.FlipdishOpenApiV10.RevenueDetail);
  }
}(this, function(ApiClient, BalanceDetails, ChargebackDetails, FlipdishFeesDetails, OtherChargesDetails, RevenueAdjustmentsDetails, RevenueDetail) {
  'use strict';

  /**
   * The PayoutStore model module.
   * @module model/PayoutStore
   * @version v1.0
   */

  /**
   * Constructs a new <code>PayoutStore</code>.
   * Payout details for a single store
   * @alias module:model/PayoutStore
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PayoutStore</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PayoutStore} obj Optional instance to populate.
   * @return {module:model/PayoutStore} The populated <code>PayoutStore</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('StoreId'))
        obj.storeId = ApiClient.convertToType(data['StoreId'], 'Number');
      if (data.hasOwnProperty('StoreName'))
        obj.storeName = ApiClient.convertToType(data['StoreName'], 'String');
      if (data.hasOwnProperty('Amount'))
        obj.amount = ApiClient.convertToType(data['Amount'], 'Number');
      if (data.hasOwnProperty('OnlineRevenue'))
        obj.onlineRevenue = RevenueDetail.constructFromObject(data['OnlineRevenue']);
      if (data.hasOwnProperty('Revenue'))
        obj.revenue = RevenueDetail.constructFromObject(data['Revenue']);
      if (data.hasOwnProperty('RevenueAdjustments'))
        obj.revenueAdjustments = RevenueAdjustmentsDetails.constructFromObject(data['RevenueAdjustments']);
      if (data.hasOwnProperty('FlipdishFees'))
        obj.flipdishFees = FlipdishFeesDetails.constructFromObject(data['FlipdishFees']);
      if (data.hasOwnProperty('Chargebacks'))
        obj.chargebacks = ChargebackDetails.constructFromObject(data['Chargebacks']);
      if (data.hasOwnProperty('OtherCharges'))
        obj.otherCharges = OtherChargesDetails.constructFromObject(data['OtherCharges']);
      if (data.hasOwnProperty('Balance'))
        obj.balance = BalanceDetails.constructFromObject(data['Balance']);
    }
    return obj;
  }

  /**
   * The id of the Store.
   * @member {Number} storeId
   */
  exports.prototype.storeId = undefined;

  /**
   * Name of the store
   * @member {String} storeName
   */
  exports.prototype.storeName = undefined;

  /**
   * Amount of the payout for this Store
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * Revenue details (DEPRECATED: Use Revenue)
   * @member {module:model/RevenueDetail} onlineRevenue
   */
  exports.prototype.onlineRevenue = undefined;

  /**
   * Revenue details
   * @member {module:model/RevenueDetail} revenue
   */
  exports.prototype.revenue = undefined;

  /**
   * Revenue Adjustments breakdown
   * @member {module:model/RevenueAdjustmentsDetails} revenueAdjustments
   */
  exports.prototype.revenueAdjustments = undefined;

  /**
   * Fees breakdown
   * @member {module:model/FlipdishFeesDetails} flipdishFees
   */
  exports.prototype.flipdishFees = undefined;

  /**
   * Chargebacks breakdown
   * @member {module:model/ChargebackDetails} chargebacks
   */
  exports.prototype.chargebacks = undefined;

  /**
   * Breakdown of other charges
   * @member {module:model/OtherChargesDetails} otherCharges
   */
  exports.prototype.otherCharges = undefined;

  /**
   * Period opening and closing balance
   * @member {module:model/BalanceDetails} balance
   */
  exports.prototype.balance = undefined;


  return exports;

}));
