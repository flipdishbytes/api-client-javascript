/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CspReport model module.
 * @module model/CspReport
 * @version 1.0.0
 */
class CspReport {
    /**
     * Constructs a new <code>CspReport</code>.
     * @alias module:model/CspReport
     */
    constructor() { 
        
        CspReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CspReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CspReport} obj Optional instance to populate.
     * @return {module:model/CspReport} The populated <code>CspReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CspReport();

            if (data.hasOwnProperty('Document-uri')) {
                obj['Document-uri'] = ApiClient.convertToType(data['Document-uri'], 'String');
            }
            if (data.hasOwnProperty('Referrer')) {
                obj['Referrer'] = ApiClient.convertToType(data['Referrer'], 'String');
            }
            if (data.hasOwnProperty('Violated-directive')) {
                obj['Violated-directive'] = ApiClient.convertToType(data['Violated-directive'], 'String');
            }
            if (data.hasOwnProperty('Effective-directive')) {
                obj['Effective-directive'] = ApiClient.convertToType(data['Effective-directive'], 'String');
            }
            if (data.hasOwnProperty('Original-policy')) {
                obj['Original-policy'] = ApiClient.convertToType(data['Original-policy'], 'String');
            }
            if (data.hasOwnProperty('Blocked-uri')) {
                obj['Blocked-uri'] = ApiClient.convertToType(data['Blocked-uri'], 'String');
            }
            if (data.hasOwnProperty('Status-code')) {
                obj['Status-code'] = ApiClient.convertToType(data['Status-code'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Document-uri
 */
CspReport.prototype['Document-uri'] = undefined;

/**
 * @member {String} Referrer
 */
CspReport.prototype['Referrer'] = undefined;

/**
 * @member {String} Violated-directive
 */
CspReport.prototype['Violated-directive'] = undefined;

/**
 * @member {String} Effective-directive
 */
CspReport.prototype['Effective-directive'] = undefined;

/**
 * @member {String} Original-policy
 */
CspReport.prototype['Original-policy'] = undefined;

/**
 * @member {String} Blocked-uri
 */
CspReport.prototype['Blocked-uri'] = undefined;

/**
 * @member {Number} Status-code
 */
CspReport.prototype['Status-code'] = undefined;






export default CspReport;

