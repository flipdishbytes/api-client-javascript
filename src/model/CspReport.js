/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.CspReport = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The CspReport model module.
   * @module model/CspReport
   * @version v1.0
   */

  /**
   * Constructs a new <code>CspReport</code>.
   * @alias module:model/CspReport
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CspReport</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CspReport} obj Optional instance to populate.
   * @return {module:model/CspReport} The populated <code>CspReport</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Document-uri'))
        obj.documentUri = ApiClient.convertToType(data['Document-uri'], 'String');
      if (data.hasOwnProperty('Referrer'))
        obj.referrer = ApiClient.convertToType(data['Referrer'], 'String');
      if (data.hasOwnProperty('Violated-directive'))
        obj.violatedDirective = ApiClient.convertToType(data['Violated-directive'], 'String');
      if (data.hasOwnProperty('Effective-directive'))
        obj.effectiveDirective = ApiClient.convertToType(data['Effective-directive'], 'String');
      if (data.hasOwnProperty('Original-policy'))
        obj.originalPolicy = ApiClient.convertToType(data['Original-policy'], 'String');
      if (data.hasOwnProperty('Blocked-uri'))
        obj.blockedUri = ApiClient.convertToType(data['Blocked-uri'], 'String');
      if (data.hasOwnProperty('Status-code'))
        obj.statusCode = ApiClient.convertToType(data['Status-code'], 'Number');
    }
    return obj;
  }

  /**
   * @member {String} documentUri
   */
  exports.prototype.documentUri = undefined;

  /**
   * @member {String} referrer
   */
  exports.prototype.referrer = undefined;

  /**
   * @member {String} violatedDirective
   */
  exports.prototype.violatedDirective = undefined;

  /**
   * @member {String} effectiveDirective
   */
  exports.prototype.effectiveDirective = undefined;

  /**
   * @member {String} originalPolicy
   */
  exports.prototype.originalPolicy = undefined;

  /**
   * @member {String} blockedUri
   */
  exports.prototype.blockedUri = undefined;

  /**
   * @member {Number} statusCode
   */
  exports.prototype.statusCode = undefined;


  return exports;

}));
