/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MenuElementEditResponse model module.
 * @module model/MenuElementEditResponse
 * @version 1.0.0
 */
class MenuElementEditResponse {
    /**
     * Constructs a new <code>MenuElementEditResponse</code>.
     * Response with any menu elements that had issues being hidden/shown
     * @alias module:model/MenuElementEditResponse
     */
    constructor() { 
        
        MenuElementEditResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MenuElementEditResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MenuElementEditResponse} obj Optional instance to populate.
     * @return {module:model/MenuElementEditResponse} The populated <code>MenuElementEditResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MenuElementEditResponse();

            if (data.hasOwnProperty('SectionName')) {
                obj['SectionName'] = ApiClient.convertToType(data['SectionName'], 'String');
            }
            if (data.hasOwnProperty('ItemName')) {
                obj['ItemName'] = ApiClient.convertToType(data['ItemName'], 'String');
            }
            if (data.hasOwnProperty('OptionSetName')) {
                obj['OptionSetName'] = ApiClient.convertToType(data['OptionSetName'], 'String');
            }
            if (data.hasOwnProperty('OptionSetItemName')) {
                obj['OptionSetItemName'] = ApiClient.convertToType(data['OptionSetItemName'], 'String');
            }
            if (data.hasOwnProperty('MenuElementId')) {
                obj['MenuElementId'] = ApiClient.convertToType(data['MenuElementId'], 'Number');
            }
            if (data.hasOwnProperty('MenuElementType')) {
                obj['MenuElementType'] = ApiClient.convertToType(data['MenuElementType'], 'String');
            }
            if (data.hasOwnProperty('ValidationCode')) {
                obj['ValidationCode'] = ApiClient.convertToType(data['ValidationCode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Section name
 * @member {String} SectionName
 */
MenuElementEditResponse.prototype['SectionName'] = undefined;

/**
 * Item name
 * @member {String} ItemName
 */
MenuElementEditResponse.prototype['ItemName'] = undefined;

/**
 * Option Set name
 * @member {String} OptionSetName
 */
MenuElementEditResponse.prototype['OptionSetName'] = undefined;

/**
 * Element name
 * @member {String} OptionSetItemName
 */
MenuElementEditResponse.prototype['OptionSetItemName'] = undefined;

/**
 * Holds the information for the A and CNAME Records of a domain.
 * @member {Number} MenuElementId
 */
MenuElementEditResponse.prototype['MenuElementId'] = undefined;

/**
 * Type of menu element
 * @member {module:model/MenuElementEditResponse.MenuElementTypeEnum} MenuElementType
 */
MenuElementEditResponse.prototype['MenuElementType'] = undefined;

/**
 * Validation message for menu element issue
 * @member {module:model/MenuElementEditResponse.ValidationCodeEnum} ValidationCode
 */
MenuElementEditResponse.prototype['ValidationCode'] = undefined;





/**
 * Allowed values for the <code>MenuElementType</code> property.
 * @enum {String}
 * @readonly
 */
MenuElementEditResponse['MenuElementTypeEnum'] = {

    /**
     * value: "Item"
     * @const
     */
    "Item": "Item",

    /**
     * value: "OptionSetItem"
     * @const
     */
    "OptionSetItem": "OptionSetItem"
};


/**
 * Allowed values for the <code>ValidationCode</code> property.
 * @enum {String}
 * @readonly
 */
MenuElementEditResponse['ValidationCodeEnum'] = {

    /**
     * value: "Success"
     * @const
     */
    "Success": "Success",

    /**
     * value: "MinimumCountViolation"
     * @const
     */
    "MinimumCountViolation": "MinimumCountViolation",

    /**
     * value: "MasterOptionSetViolation"
     * @const
     */
    "MasterOptionSetViolation": "MasterOptionSetViolation",

    /**
     * value: "IncorrectElementTypeInMenu"
     * @const
     */
    "IncorrectElementTypeInMenu": "IncorrectElementTypeInMenu",

    /**
     * value: "DBFailed"
     * @const
     */
    "DBFailed": "DBFailed"
};



export default MenuElementEditResponse;

