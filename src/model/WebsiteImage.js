/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebsiteImage model module.
 * @module model/WebsiteImage
 * @version 1.0.0
 */
class WebsiteImage {
    /**
     * Constructs a new <code>WebsiteImage</code>.
     * Represents a website image
     * @alias module:model/WebsiteImage
     */
    constructor() { 
        
        WebsiteImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebsiteImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebsiteImage} obj Optional instance to populate.
     * @return {module:model/WebsiteImage} The populated <code>WebsiteImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebsiteImage();

            if (data.hasOwnProperty('ImageId')) {
                obj['ImageId'] = ApiClient.convertToType(data['ImageId'], 'Number');
            }
            if (data.hasOwnProperty('ImageLocation')) {
                obj['ImageLocation'] = ApiClient.convertToType(data['ImageLocation'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Represents the id of the image
 * @member {Number} ImageId
 */
WebsiteImage.prototype['ImageId'] = undefined;

/**
 * Represents the location of the image
 * @member {module:model/WebsiteImage.ImageLocationEnum} ImageLocation
 */
WebsiteImage.prototype['ImageLocation'] = undefined;

/**
 * Represents the image url
 * @member {String} ImageUrl
 */
WebsiteImage.prototype['ImageUrl'] = undefined;





/**
 * Allowed values for the <code>ImageLocation</code> property.
 * @enum {String}
 * @readonly
 */
WebsiteImage['ImageLocationEnum'] = {

    /**
     * value: "IndexHeader"
     * @const
     */
    "IndexHeader": "IndexHeader",

    /**
     * value: "IndexAboutSectionLeft"
     * @const
     */
    "IndexAboutSectionLeft": "IndexAboutSectionLeft",

    /**
     * value: "IndexAboutSectionRight"
     * @const
     */
    "IndexAboutSectionRight": "IndexAboutSectionRight",

    /**
     * value: "IndexGallery"
     * @const
     */
    "IndexGallery": "IndexGallery",

    /**
     * value: "IndexOpeningHoursHeader"
     * @const
     */
    "IndexOpeningHoursHeader": "IndexOpeningHoursHeader",

    /**
     * value: "IndexTestimonialsHeader"
     * @const
     */
    "IndexTestimonialsHeader": "IndexTestimonialsHeader"
};



export default WebsiteImage;

