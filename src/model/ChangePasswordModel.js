/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChangePasswordModel model module.
 * @module model/ChangePasswordModel
 * @version 1.0.0
 */
class ChangePasswordModel {
    /**
     * Constructs a new <code>ChangePasswordModel</code>.
     * Change password model
     * @alias module:model/ChangePasswordModel
     * @param OldPassword {String} Old password
     * @param NewPassword {String} New password
     */
    constructor(OldPassword, NewPassword) { 
        
        ChangePasswordModel.initialize(this, OldPassword, NewPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, OldPassword, NewPassword) { 
        obj['OldPassword'] = OldPassword;
        obj['NewPassword'] = NewPassword;
    }

    /**
     * Constructs a <code>ChangePasswordModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangePasswordModel} obj Optional instance to populate.
     * @return {module:model/ChangePasswordModel} The populated <code>ChangePasswordModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangePasswordModel();

            if (data.hasOwnProperty('OldPassword')) {
                obj['OldPassword'] = ApiClient.convertToType(data['OldPassword'], 'String');
            }
            if (data.hasOwnProperty('NewPassword')) {
                obj['NewPassword'] = ApiClient.convertToType(data['NewPassword'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Old password
 * @member {String} OldPassword
 */
ChangePasswordModel.prototype['OldPassword'] = undefined;

/**
 * New password
 * @member {String} NewPassword
 */
ChangePasswordModel.prototype['NewPassword'] = undefined;






export default ChangePasswordModel;

