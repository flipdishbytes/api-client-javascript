/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WhiteLabelConfig from './WhiteLabelConfig';

/**
 * The Restaurant model module.
 * @module model/Restaurant
 * @version 1.0.0
 */
class Restaurant {
    /**
     * Constructs a new <code>Restaurant</code>.
     * Restaurant search result
     * @alias module:model/Restaurant
     */
    constructor() { 
        
        Restaurant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Restaurant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Restaurant} obj Optional instance to populate.
     * @return {module:model/Restaurant} The populated <code>Restaurant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Restaurant();

            if (data.hasOwnProperty('WhiteLabelConfigs')) {
                obj['WhiteLabelConfigs'] = ApiClient.convertToType(data['WhiteLabelConfigs'], [WhiteLabelConfig]);
            }
            if (data.hasOwnProperty('VirtualRestaurantId')) {
                obj['VirtualRestaurantId'] = ApiClient.convertToType(data['VirtualRestaurantId'], 'Number');
            }
            if (data.hasOwnProperty('VirtualRestaurantName')) {
                obj['VirtualRestaurantName'] = ApiClient.convertToType(data['VirtualRestaurantName'], 'String');
            }
            if (data.hasOwnProperty('VirtualRestaurantUrl')) {
                obj['VirtualRestaurantUrl'] = ApiClient.convertToType(data['VirtualRestaurantUrl'], 'String');
            }
            if (data.hasOwnProperty('PhysicalRestaurantId')) {
                obj['PhysicalRestaurantId'] = ApiClient.convertToType(data['PhysicalRestaurantId'], 'Number');
            }
            if (data.hasOwnProperty('PhysicalRestaurantName')) {
                obj['PhysicalRestaurantName'] = ApiClient.convertToType(data['PhysicalRestaurantName'], 'String');
            }
            if (data.hasOwnProperty('PhysicalRestaurantAddress')) {
                obj['PhysicalRestaurantAddress'] = ApiClient.convertToType(data['PhysicalRestaurantAddress'], 'String');
            }
            if (data.hasOwnProperty('MenuId')) {
                obj['MenuId'] = ApiClient.convertToType(data['MenuId'], 'Number');
            }
            if (data.hasOwnProperty('IsArchived')) {
                obj['IsArchived'] = ApiClient.convertToType(data['IsArchived'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPublished')) {
                obj['IsPublished'] = ApiClient.convertToType(data['IsPublished'], 'Boolean');
            }
            if (data.hasOwnProperty('FlipdishStripeCustomConnectedAccounts')) {
                obj['FlipdishStripeCustomConnectedAccounts'] = ApiClient.convertToType(data['FlipdishStripeCustomConnectedAccounts'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * Collection of white label configurations
 * @member {Array.<module:model/WhiteLabelConfig>} WhiteLabelConfigs
 */
Restaurant.prototype['WhiteLabelConfigs'] = undefined;

/**
 * Virtual restaurant identifier
 * @member {Number} VirtualRestaurantId
 */
Restaurant.prototype['VirtualRestaurantId'] = undefined;

/**
 * Virtual restaurant name
 * @member {String} VirtualRestaurantName
 */
Restaurant.prototype['VirtualRestaurantName'] = undefined;

/**
 * Virtual restaurant URL
 * @member {String} VirtualRestaurantUrl
 */
Restaurant.prototype['VirtualRestaurantUrl'] = undefined;

/**
 * Physical restaurant identifier
 * @member {Number} PhysicalRestaurantId
 */
Restaurant.prototype['PhysicalRestaurantId'] = undefined;

/**
 * Physical restaurant name
 * @member {String} PhysicalRestaurantName
 */
Restaurant.prototype['PhysicalRestaurantName'] = undefined;

/**
 * Physical restaurant address
 * @member {String} PhysicalRestaurantAddress
 */
Restaurant.prototype['PhysicalRestaurantAddress'] = undefined;

/**
 * Menu identifier
 * @member {Number} MenuId
 */
Restaurant.prototype['MenuId'] = undefined;

/**
 * Indicates if the restaurant is archived
 * @member {Boolean} IsArchived
 */
Restaurant.prototype['IsArchived'] = undefined;

/**
 * Indicates if the restaurant is published
 * @member {Boolean} IsPublished
 */
Restaurant.prototype['IsPublished'] = undefined;

/**
 * List of Flipdish Stripe custom connected account identifiers
 * @member {Array.<Number>} FlipdishStripeCustomConnectedAccounts
 */
Restaurant.prototype['FlipdishStripeCustomConnectedAccounts'] = undefined;






export default Restaurant;

