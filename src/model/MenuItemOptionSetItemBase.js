/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MenuItemOptionSetItemBase model module.
 * @module model/MenuItemOptionSetItemBase
 * @version 1.0.0
 */
class MenuItemOptionSetItemBase {
    /**
     * Constructs a new <code>MenuItemOptionSetItemBase</code>.
     * Menu item option set item
     * @alias module:model/MenuItemOptionSetItemBase
     */
    constructor() { 
        
        MenuItemOptionSetItemBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MenuItemOptionSetItemBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MenuItemOptionSetItemBase} obj Optional instance to populate.
     * @return {module:model/MenuItemOptionSetItemBase} The populated <code>MenuItemOptionSetItemBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MenuItemOptionSetItemBase();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Price')) {
                obj['Price'] = ApiClient.convertToType(data['Price'], 'Number');
            }
            if (data.hasOwnProperty('DepositReturnFee')) {
                obj['DepositReturnFee'] = ApiClient.convertToType(data['DepositReturnFee'], 'Number');
            }
            if (data.hasOwnProperty('IsAvailable')) {
                obj['IsAvailable'] = ApiClient.convertToType(data['IsAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('DisplayOrder')) {
                obj['DisplayOrder'] = ApiClient.convertToType(data['DisplayOrder'], 'Number');
            }
            if (data.hasOwnProperty('CellLayoutType')) {
                obj['CellLayoutType'] = ApiClient.convertToType(data['CellLayoutType'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('PublicId')) {
                obj['PublicId'] = ApiClient.convertToType(data['PublicId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name
 * @member {String} Name
 */
MenuItemOptionSetItemBase.prototype['Name'] = undefined;

/**
 * Price
 * @member {Number} Price
 */
MenuItemOptionSetItemBase.prototype['Price'] = undefined;

/**
 * An optional fee that can be added to the price of the item.
 * @member {Number} DepositReturnFee
 */
MenuItemOptionSetItemBase.prototype['DepositReturnFee'] = undefined;

/**
 * Is available
 * @member {Boolean} IsAvailable
 */
MenuItemOptionSetItemBase.prototype['IsAvailable'] = undefined;

/**
 * Display order. Displayed in ascending order.
 * @member {Number} DisplayOrder
 */
MenuItemOptionSetItemBase.prototype['DisplayOrder'] = undefined;

/**
 * Small | Medium | Large  Affects the layout of the menu.
 * @member {module:model/MenuItemOptionSetItemBase.CellLayoutTypeEnum} CellLayoutType
 */
MenuItemOptionSetItemBase.prototype['CellLayoutType'] = undefined;

/**
 * Image url
 * @member {String} ImageUrl
 */
MenuItemOptionSetItemBase.prototype['ImageUrl'] = undefined;

/**
 * Permanent reference to the item.
 * @member {String} PublicId
 */
MenuItemOptionSetItemBase.prototype['PublicId'] = undefined;





/**
 * Allowed values for the <code>CellLayoutType</code> property.
 * @enum {String}
 * @readonly
 */
MenuItemOptionSetItemBase['CellLayoutTypeEnum'] = {

    /**
     * value: "Small"
     * @const
     */
    "Small": "Small",

    /**
     * value: "Medium"
     * @const
     */
    "Medium": "Medium",

    /**
     * value: "Large"
     * @const
     */
    "Large": "Large",

    /**
     * value: "HiddenImage"
     * @const
     */
    "HiddenImage": "HiddenImage"
};



export default MenuItemOptionSetItemBase;

