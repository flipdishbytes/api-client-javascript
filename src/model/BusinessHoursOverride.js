/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.BusinessHoursOverride = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The BusinessHoursOverride model module.
   * @module model/BusinessHoursOverride
   * @version v1.0
   */

  /**
   * Constructs a new <code>BusinessHoursOverride</code>.
   * 
   * @alias module:model/BusinessHoursOverride
   * @class
   * @param startTime {Date} Date and time in ISO 8601 format.
   * @param endTime {Date} Date and time in ISO 8601 format.
   */
  var exports = function(startTime, endTime) {
    this.startTime = startTime;
    this.endTime = endTime;
  };

  /**
   * Constructs a <code>BusinessHoursOverride</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BusinessHoursOverride} obj Optional instance to populate.
   * @return {module:model/BusinessHoursOverride} The populated <code>BusinessHoursOverride</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('BusinessHoursOverrideId'))
        obj.businessHoursOverrideId = ApiClient.convertToType(data['BusinessHoursOverrideId'], 'Number');
      if (data.hasOwnProperty('DeliveryType'))
        obj.deliveryType = ApiClient.convertToType(data['DeliveryType'], 'String');
      if (data.hasOwnProperty('StartTime'))
        obj.startTime = ApiClient.convertToType(data['StartTime'], 'Date');
      if (data.hasOwnProperty('EndTime'))
        obj.endTime = ApiClient.convertToType(data['EndTime'], 'Date');
      if (data.hasOwnProperty('Type'))
        obj.type = ApiClient.convertToType(data['Type'], 'String');
    }
    return obj;
  }

  /**
   * Unique identifier
   * @member {Number} businessHoursOverrideId
   */
  exports.prototype.businessHoursOverrideId = undefined;

  /**
   * Delivery or Pickup
   * @member {module:model/BusinessHoursOverride.DeliveryTypeEnum} deliveryType
   */
  exports.prototype.deliveryType = undefined;

  /**
   * Date and time in ISO 8601 format.
   * @member {Date} startTime
   */
  exports.prototype.startTime = undefined;

  /**
   * Date and time in ISO 8601 format.
   * @member {Date} endTime
   */
  exports.prototype.endTime = undefined;

  /**
   * Open, Closed or ClosedAllowPreOrders
   * @member {module:model/BusinessHoursOverride.TypeEnum} type
   */
  exports.prototype.type = undefined;



  /**
   * Allowed values for the <code>deliveryType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeliveryTypeEnum = {
    /**
     * value: "Delivery"
     * @const
     */
    delivery: "Delivery",

    /**
     * value: "Pickup"
     * @const
     */
    pickup: "Pickup"
  };


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "Open"
     * @const
     */
    open: "Open",

    /**
     * value: "Closed"
     * @const
     */
    closed: "Closed",

    /**
     * value: "ClosedAllowPreOrders"
     * @const
     */
    closedAllowPreOrders: "ClosedAllowPreOrders"
  };

  return exports;

}));
