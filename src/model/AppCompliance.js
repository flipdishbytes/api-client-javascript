/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppCompliance model module.
 * @module model/AppCompliance
 * @version 1.0.0
 */
class AppCompliance {
    /**
     * Constructs a new <code>AppCompliance</code>.
     * Application compliance model
     * @alias module:model/AppCompliance
     */
    constructor() { 
        
        AppCompliance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppCompliance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppCompliance} obj Optional instance to populate.
     * @return {module:model/AppCompliance} The populated <code>AppCompliance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppCompliance();

            if (data.hasOwnProperty('AppId')) {
                obj['AppId'] = ApiClient.convertToType(data['AppId'], 'String');
            }
            if (data.hasOwnProperty('ComplianceType')) {
                obj['ComplianceType'] = ApiClient.convertToType(data['ComplianceType'], 'String');
            }
            if (data.hasOwnProperty('AllowDisablingOfGdpr')) {
                obj['AllowDisablingOfGdpr'] = ApiClient.convertToType(data['AllowDisablingOfGdpr'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * App ID
 * @member {String} AppId
 */
AppCompliance.prototype['AppId'] = undefined;

/**
 * Type of compliance.  This controls if the Flipdish websites and apps display cookie consent banners and adjust cookies to be inline with various regulations.   You should set this correctly based on your region.
 * @member {module:model/AppCompliance.ComplianceTypeEnum} ComplianceType
 */
AppCompliance.prototype['ComplianceType'] = undefined;

/**
 * For EU countries, we should not allow to change the option to “Default banner”, but all other countries should be able to do so.
 * @member {Boolean} AllowDisablingOfGdpr
 */
AppCompliance.prototype['AllowDisablingOfGdpr'] = undefined;





/**
 * Allowed values for the <code>ComplianceType</code> property.
 * @enum {String}
 * @readonly
 */
AppCompliance['ComplianceTypeEnum'] = {

    /**
     * value: "Default"
     * @const
     */
    "Default": "Default",

    /**
     * value: "GdprCompliance"
     * @const
     */
    "GdprCompliance": "GdprCompliance"
};



export default AppCompliance;

