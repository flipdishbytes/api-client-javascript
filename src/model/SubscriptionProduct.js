/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SubscriptionStore'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SubscriptionStore'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.SubscriptionProduct = factory(root.Flipdish.ApiClient, root.Flipdish.SubscriptionStore);
  }
}(this, function(ApiClient, SubscriptionStore) {
  'use strict';

  /**
   * The SubscriptionProduct model module.
   * @module model/SubscriptionProduct
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>SubscriptionProduct</code>.
   * Product
   * @alias module:model/SubscriptionProduct
   * @class
   * @param ProductId {String} Product Identifier
   * @param Name {String} Name
   * @param Quantity {Number} Quantity
   * @param PaymentFrequency {module:model/SubscriptionProduct.PaymentFrequencyEnum} Payment Frequency
   */
  var exports = function(ProductId, Name, Quantity, PaymentFrequency) {
    this.ProductId = ProductId;
    this.Name = Name;
    this.Quantity = Quantity;
    this.PaymentFrequency = PaymentFrequency;
  };

  /**
   * Constructs a <code>SubscriptionProduct</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubscriptionProduct} obj Optional instance to populate.
   * @return {module:model/SubscriptionProduct} The populated <code>SubscriptionProduct</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('ProductId'))
        obj.ProductId = ApiClient.convertToType(data['ProductId'], 'String');
      if (data.hasOwnProperty('Name'))
        obj.Name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('Quantity'))
        obj.Quantity = ApiClient.convertToType(data['Quantity'], 'Number');
      if (data.hasOwnProperty('PricePerUnit'))
        obj.PricePerUnit = ApiClient.convertToType(data['PricePerUnit'], 'Number');
      if (data.hasOwnProperty('PriceTotal'))
        obj.PriceTotal = ApiClient.convertToType(data['PriceTotal'], 'Number');
      if (data.hasOwnProperty('PaymentFrequency'))
        obj.PaymentFrequency = ApiClient.convertToType(data['PaymentFrequency'], 'String');
      if (data.hasOwnProperty('Stores'))
        obj.Stores = ApiClient.convertToType(data['Stores'], [SubscriptionStore]);
    }
    return obj;
  }

  /**
   * Product Identifier
   * @member {String} ProductId
   */
  exports.prototype.ProductId = undefined;

  /**
   * Name
   * @member {String} Name
   */
  exports.prototype.Name = undefined;

  /**
   * Quantity
   * @member {Number} Quantity
   */
  exports.prototype.Quantity = undefined;

  /**
   * Price Per Unit
   * @member {Number} PricePerUnit
   */
  exports.prototype.PricePerUnit = undefined;

  /**
   * Price Total
   * @member {Number} PriceTotal
   */
  exports.prototype.PriceTotal = undefined;

  /**
   * Payment Frequency
   * @member {module:model/SubscriptionProduct.PaymentFrequencyEnum} PaymentFrequency
   */
  exports.prototype.PaymentFrequency = undefined;

  /**
   * Stores
   * @member {Array.<module:model/SubscriptionStore>} Stores
   */
  exports.prototype.Stores = undefined;



  /**
   * Allowed values for the <code>PaymentFrequency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PaymentFrequencyEnum = {
    /**
     * value: "day"
     * @const
     */
    day: "day",

    /**
     * value: "week"
     * @const
     */
    week: "week",

    /**
     * value: "month"
     * @const
     */
    month: "month",

    /**
     * value: "year"
     * @const
     */
    year: "year"
  };

  return exports;

}));
