/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HttpRequestAndResponseLog model module.
 * @module model/HttpRequestAndResponseLog
 * @version 1.0.0
 */
class HttpRequestAndResponseLog {
    /**
     * Constructs a new <code>HttpRequestAndResponseLog</code>.
     * Http Request and Response Log
     * @alias module:model/HttpRequestAndResponseLog
     */
    constructor() { 
        
        HttpRequestAndResponseLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HttpRequestAndResponseLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HttpRequestAndResponseLog} obj Optional instance to populate.
     * @return {module:model/HttpRequestAndResponseLog} The populated <code>HttpRequestAndResponseLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HttpRequestAndResponseLog();

            if (data.hasOwnProperty('Guid')) {
                obj['Guid'] = ApiClient.convertToType(data['Guid'], 'String');
            }
            if (data.hasOwnProperty('Verb')) {
                obj['Verb'] = ApiClient.convertToType(data['Verb'], 'String');
            }
            if (data.hasOwnProperty('RequestUri')) {
                obj['RequestUri'] = ApiClient.convertToType(data['RequestUri'], 'String');
            }
            if (data.hasOwnProperty('StatusCode')) {
                obj['StatusCode'] = ApiClient.convertToType(data['StatusCode'], 'Number');
            }
            if (data.hasOwnProperty('ReasonPhrase')) {
                obj['ReasonPhrase'] = ApiClient.convertToType(data['ReasonPhrase'], 'String');
            }
            if (data.hasOwnProperty('CallDurationInMilliseconds')) {
                obj['CallDurationInMilliseconds'] = ApiClient.convertToType(data['CallDurationInMilliseconds'], 'Number');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
            if (data.hasOwnProperty('IpAddress')) {
                obj['IpAddress'] = ApiClient.convertToType(data['IpAddress'], 'String');
            }
            if (data.hasOwnProperty('CreatedDateTime')) {
                obj['CreatedDateTime'] = ApiClient.convertToType(data['CreatedDateTime'], 'String');
            }
            if (data.hasOwnProperty('RequestHeaders')) {
                obj['RequestHeaders'] = ApiClient.convertToType(data['RequestHeaders'], {'String': 'String'});
            }
            if (data.hasOwnProperty('RequestBody')) {
                obj['RequestBody'] = ApiClient.convertToType(data['RequestBody'], 'String');
            }
            if (data.hasOwnProperty('RequestLength')) {
                obj['RequestLength'] = ApiClient.convertToType(data['RequestLength'], 'Number');
            }
            if (data.hasOwnProperty('ResponseHeaders')) {
                obj['ResponseHeaders'] = ApiClient.convertToType(data['ResponseHeaders'], {'String': 'String'});
            }
            if (data.hasOwnProperty('ResponseBody')) {
                obj['ResponseBody'] = ApiClient.convertToType(data['ResponseBody'], 'String');
            }
            if (data.hasOwnProperty('ResponseLength')) {
                obj['ResponseLength'] = ApiClient.convertToType(data['ResponseLength'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Id of the log
 * @member {String} Guid
 */
HttpRequestAndResponseLog.prototype['Guid'] = undefined;

/**
 * Verb associated with the HTTP call.
 * @member {String} Verb
 */
HttpRequestAndResponseLog.prototype['Verb'] = undefined;

/**
 * Http request URI.
 * @member {String} RequestUri
 */
HttpRequestAndResponseLog.prototype['RequestUri'] = undefined;

/**
 * Http response status code.
 * @member {Number} StatusCode
 */
HttpRequestAndResponseLog.prototype['StatusCode'] = undefined;

/**
 * Http response status line.
 * @member {String} ReasonPhrase
 */
HttpRequestAndResponseLog.prototype['ReasonPhrase'] = undefined;

/**
 * Call duration representing the duration of the HTTP call in milliseconds.
 * @member {Number} CallDurationInMilliseconds
 */
HttpRequestAndResponseLog.prototype['CallDurationInMilliseconds'] = undefined;

/**
 * Identity of the caller.
 * @member {String} UserId
 */
HttpRequestAndResponseLog.prototype['UserId'] = undefined;

/**
 * Ip address of the caller
 * @member {String} IpAddress
 */
HttpRequestAndResponseLog.prototype['IpAddress'] = undefined;

/**
 * Timestamp at which the HTTP call took place.
 * @member {String} CreatedDateTime
 */
HttpRequestAndResponseLog.prototype['CreatedDateTime'] = undefined;

/**
 * Http request headers.
 * @member {Object.<String, String>} RequestHeaders
 */
HttpRequestAndResponseLog.prototype['RequestHeaders'] = undefined;

/**
 * Http request body, if any.
 * @member {String} RequestBody
 */
HttpRequestAndResponseLog.prototype['RequestBody'] = undefined;

/**
 * Http request content-length
 * @member {Number} RequestLength
 */
HttpRequestAndResponseLog.prototype['RequestLength'] = undefined;

/**
 * Http response headers.
 * @member {Object.<String, String>} ResponseHeaders
 */
HttpRequestAndResponseLog.prototype['ResponseHeaders'] = undefined;

/**
 * Http response body.
 * @member {String} ResponseBody
 */
HttpRequestAndResponseLog.prototype['ResponseBody'] = undefined;

/**
 * Http response content-length
 * @member {Number} ResponseLength
 */
HttpRequestAndResponseLog.prototype['ResponseLength'] = undefined;






export default HttpRequestAndResponseLog;

