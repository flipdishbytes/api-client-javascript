/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.StoreOrderCapacityPeriod = factory(root.FlipdishOpenApiV10.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The StoreOrderCapacityPeriod model module.
   * @module model/StoreOrderCapacityPeriod
   * @version v1.0
   */

  /**
   * Constructs a new <code>StoreOrderCapacityPeriod</code>.
   * Represents a single order capacity period
   * @alias module:model/StoreOrderCapacityPeriod
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>StoreOrderCapacityPeriod</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreOrderCapacityPeriod} obj Optional instance to populate.
   * @return {module:model/StoreOrderCapacityPeriod} The populated <code>StoreOrderCapacityPeriod</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('MaxOrderNumberPerStoreInterval'))
        obj.maxOrderNumberPerStoreInterval = ApiClient.convertToType(data['MaxOrderNumberPerStoreInterval'], 'Number');
      if (data.hasOwnProperty('DayOfTheWeek'))
        obj.dayOfTheWeek = ApiClient.convertToType(data['DayOfTheWeek'], 'String');
      if (data.hasOwnProperty('PeriodStartHour'))
        obj.periodStartHour = ApiClient.convertToType(data['PeriodStartHour'], 'Number');
      if (data.hasOwnProperty('PeriodStartMinutes'))
        obj.periodStartMinutes = ApiClient.convertToType(data['PeriodStartMinutes'], 'Number');
      if (data.hasOwnProperty('PeriodEndHour'))
        obj.periodEndHour = ApiClient.convertToType(data['PeriodEndHour'], 'Number');
      if (data.hasOwnProperty('PeriodEndMinutes'))
        obj.periodEndMinutes = ApiClient.convertToType(data['PeriodEndMinutes'], 'Number');
    }
    return obj;
  }

  /**
   * The maximum number of orders per each store order interval in this order capacity period.  E.g. for a period from 9:00 till 11:00, if the store's interval is 10 minutes, and MaxOrderNumberPerStoreInterval is set to 5,  it means that within each 10-minute interval between 9:00 and 11:00 (i.e. 9:00-9:10, 9:10-9:20, .. , 10:50-11:00) it will be possible to  request at most 5 orders.
   * @member {Number} maxOrderNumberPerStoreInterval
   */
  exports.prototype.maxOrderNumberPerStoreInterval = undefined;

  /**
   * Day of the week the period pertains to
   * @member {module:model/StoreOrderCapacityPeriod.DayOfTheWeekEnum} dayOfTheWeek
   */
  exports.prototype.dayOfTheWeek = undefined;

  /**
   * The hour the period starts at
   * @member {Number} periodStartHour
   */
  exports.prototype.periodStartHour = undefined;

  /**
   * The minutes after the hour the period starts at
   * @member {Number} periodStartMinutes
   */
  exports.prototype.periodStartMinutes = undefined;

  /**
   * The hour the period ends at
   * @member {Number} periodEndHour
   */
  exports.prototype.periodEndHour = undefined;

  /**
   * The minutes after the hour the period ends at
   * @member {Number} periodEndMinutes
   */
  exports.prototype.periodEndMinutes = undefined;



  /**
   * Allowed values for the <code>dayOfTheWeek</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DayOfTheWeekEnum = {
    /**
     * value: "Sunday"
     * @const
     */
    sunday: "Sunday",

    /**
     * value: "Monday"
     * @const
     */
    monday: "Monday",

    /**
     * value: "Tuesday"
     * @const
     */
    tuesday: "Tuesday",

    /**
     * value: "Wednesday"
     * @const
     */
    wednesday: "Wednesday",

    /**
     * value: "Thursday"
     * @const
     */
    thursday: "Thursday",

    /**
     * value: "Friday"
     * @const
     */
    friday: "Friday",

    /**
     * value: "Saturday"
     * @const
     */
    saturday: "Saturday"
  };

  return exports;

}));
