/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/HydraStoreData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./HydraStoreData'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.HydraDeviceDetails = factory(root.Flipdish.ApiClient, root.Flipdish.HydraStoreData);
  }
}(this, function(ApiClient, HydraStoreData) {
  'use strict';

  /**
   * The HydraDeviceDetails model module.
   * @module model/HydraDeviceDetails
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>HydraDeviceDetails</code>.
   * Hydra device details
   * @alias module:model/HydraDeviceDetails
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>HydraDeviceDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HydraDeviceDetails} obj Optional instance to populate.
   * @return {module:model/HydraDeviceDetails} The populated <code>HydraDeviceDetails</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('HydraConfigId'))
        obj.HydraConfigId = ApiClient.convertToType(data['HydraConfigId'], 'Number');
      if (data.hasOwnProperty('DeviceId'))
        obj.DeviceId = ApiClient.convertToType(data['DeviceId'], 'String');
      if (data.hasOwnProperty('SerialNumber'))
        obj.SerialNumber = ApiClient.convertToType(data['SerialNumber'], 'String');
      if (data.hasOwnProperty('DeviceType'))
        obj.DeviceType = ApiClient.convertToType(data['DeviceType'], 'String');
      if (data.hasOwnProperty('Status'))
        obj.Status = ApiClient.convertToType(data['Status'], 'String');
      if (data.hasOwnProperty('DeviceName'))
        obj.DeviceName = ApiClient.convertToType(data['DeviceName'], 'String');
      if (data.hasOwnProperty('StoreNames'))
        obj.StoreNames = ApiClient.convertToType(data['StoreNames'], [HydraStoreData]);
      if (data.hasOwnProperty('LastPollUtc'))
        obj.LastPollUtc = ApiClient.convertToType(data['LastPollUtc'], 'Date');
      if (data.hasOwnProperty('Version'))
        obj.Version = ApiClient.convertToType(data['Version'], 'String');
      if (data.hasOwnProperty('BuildNumber'))
        obj.BuildNumber = ApiClient.convertToType(data['BuildNumber'], 'String');
      if (data.hasOwnProperty('GitSha'))
        obj.GitSha = ApiClient.convertToType(data['GitSha'], 'String');
      if (data.hasOwnProperty('GitBranch'))
        obj.GitBranch = ApiClient.convertToType(data['GitBranch'], 'String');
    }
    return obj;
  }

  /**
   * Flipdish internal device identifier
   * @member {Number} HydraConfigId
   */
  exports.prototype.HydraConfigId = undefined;

  /**
   * Device Id
   * @member {String} DeviceId
   */
  exports.prototype.DeviceId = undefined;

  /**
   * Serial Number
   * @member {String} SerialNumber
   */
  exports.prototype.SerialNumber = undefined;

  /**
   * Type of the device
   * @member {module:model/HydraDeviceDetails.DeviceTypeEnum} DeviceType
   */
  exports.prototype.DeviceType = undefined;

  /**
   * Status of the device
   * @member {module:model/HydraDeviceDetails.StatusEnum} Status
   */
  exports.prototype.Status = undefined;

  /**
   * Device Name
   * @member {String} DeviceName
   */
  exports.prototype.DeviceName = undefined;

  /**
   * Store Names
   * @member {Array.<module:model/HydraStoreData>} StoreNames
   */
  exports.prototype.StoreNames = undefined;

  /**
   * Last poll time in UTC
   * @member {Date} LastPollUtc
   */
  exports.prototype.LastPollUtc = undefined;

  /**
   * Version of the device
   * @member {String} Version
   */
  exports.prototype.Version = undefined;

  /**
   * Build number of the device
   * @member {String} BuildNumber
   */
  exports.prototype.BuildNumber = undefined;

  /**
   * SHA of the commit
   * @member {String} GitSha
   */
  exports.prototype.GitSha = undefined;

  /**
   * Build branch
   * @member {String} GitBranch
   */
  exports.prototype.GitBranch = undefined;



  /**
   * Allowed values for the <code>DeviceType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeviceTypeEnum = {
    /**
     * value: "Kiosk"
     * @const
     */
    Kiosk: "Kiosk",

    /**
     * value: "Terminal"
     * @const
     */
    Terminal: "Terminal",

    /**
     * value: "LegacyPrinter"
     * @const
     */
    LegacyPrinter: "LegacyPrinter"
  };


  /**
   * Allowed values for the <code>Status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Online"
     * @const
     */
    Online: "Online",

    /**
     * value: "PossiblyOffline"
     * @const
     */
    PossiblyOffline: "PossiblyOffline",

    /**
     * value: "Offline"
     * @const
     */
    Offline: "Offline"
  };

  return exports;

}));
