/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppStoreAppSupportInfo from './AppStoreAppSupportInfo';
import FieldGroup from './FieldGroup';

/**
 * The CreateAppStoreApp model module.
 * @module model/CreateAppStoreApp
 * @version 1.0.0
 */
class CreateAppStoreApp {
    /**
     * Constructs a new <code>CreateAppStoreApp</code>.
     * @alias module:model/CreateAppStoreApp
     * @param Details {String} 
     * @param ConfigurationType {module:model/CreateAppStoreApp.ConfigurationTypeEnum} 
     * @param StoreSelectorType {module:model/CreateAppStoreApp.StoreSelectorTypeEnum} 
     * @param PermissionsType {module:model/CreateAppStoreApp.PermissionsTypeEnum} 
     * @param Name {String} 
     * @param Description {String} 
     * @param Categories {Array.<module:model/CreateAppStoreApp.CategoriesEnum>} 
     * @param Countries {Array.<module:model/CreateAppStoreApp.CountriesEnum>} 
     */
    constructor(Details, ConfigurationType, StoreSelectorType, PermissionsType, Name, Description, Categories, Countries) { 
        
        CreateAppStoreApp.initialize(this, Details, ConfigurationType, StoreSelectorType, PermissionsType, Name, Description, Categories, Countries);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, Details, ConfigurationType, StoreSelectorType, PermissionsType, Name, Description, Categories, Countries) { 
        obj['Details'] = Details;
        obj['ConfigurationType'] = ConfigurationType;
        obj['StoreSelectorType'] = StoreSelectorType;
        obj['PermissionsType'] = PermissionsType;
        obj['Name'] = Name;
        obj['Description'] = Description;
        obj['Categories'] = Categories;
        obj['Countries'] = Countries;
    }

    /**
     * Constructs a <code>CreateAppStoreApp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAppStoreApp} obj Optional instance to populate.
     * @return {module:model/CreateAppStoreApp} The populated <code>CreateAppStoreApp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAppStoreApp();

            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], 'String');
            }
            if (data.hasOwnProperty('ConfigurationType')) {
                obj['ConfigurationType'] = ApiClient.convertToType(data['ConfigurationType'], 'String');
            }
            if (data.hasOwnProperty('StoreSelectorType')) {
                obj['StoreSelectorType'] = ApiClient.convertToType(data['StoreSelectorType'], 'String');
            }
            if (data.hasOwnProperty('FieldGroups')) {
                obj['FieldGroups'] = ApiClient.convertToType(data['FieldGroups'], [FieldGroup]);
            }
            if (data.hasOwnProperty('SetupInstructions')) {
                obj['SetupInstructions'] = ApiClient.convertToType(data['SetupInstructions'], 'String');
            }
            if (data.hasOwnProperty('ExternalSetupLink')) {
                obj['ExternalSetupLink'] = ApiClient.convertToType(data['ExternalSetupLink'], 'String');
            }
            if (data.hasOwnProperty('TeammateAppAccessLevel')) {
                obj['TeammateAppAccessLevel'] = ApiClient.convertToType(data['TeammateAppAccessLevel'], 'String');
            }
            if (data.hasOwnProperty('PermissionsType')) {
                obj['PermissionsType'] = ApiClient.convertToType(data['PermissionsType'], 'String');
            }
            if (data.hasOwnProperty('Support')) {
                obj['Support'] = AppStoreAppSupportInfo.constructFromObject(data['Support']);
            }
            if (data.hasOwnProperty('ExternalFunctionActionUrl')) {
                obj['ExternalFunctionActionUrl'] = ApiClient.convertToType(data['ExternalFunctionActionUrl'], 'String');
            }
            if (data.hasOwnProperty('ExternalFunctionSignatureKey')) {
                obj['ExternalFunctionSignatureKey'] = ApiClient.convertToType(data['ExternalFunctionSignatureKey'], 'String');
            }
            if (data.hasOwnProperty('IsPaid')) {
                obj['IsPaid'] = ApiClient.convertToType(data['IsPaid'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('Categories')) {
                obj['Categories'] = ApiClient.convertToType(data['Categories'], ['String']);
            }
            if (data.hasOwnProperty('Countries')) {
                obj['Countries'] = ApiClient.convertToType(data['Countries'], ['String']);
            }
            if (data.hasOwnProperty('DeveloperName')) {
                obj['DeveloperName'] = ApiClient.convertToType(data['DeveloperName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Details
 */
CreateAppStoreApp.prototype['Details'] = undefined;

/**
 * @member {module:model/CreateAppStoreApp.ConfigurationTypeEnum} ConfigurationType
 */
CreateAppStoreApp.prototype['ConfigurationType'] = undefined;

/**
 * @member {module:model/CreateAppStoreApp.StoreSelectorTypeEnum} StoreSelectorType
 */
CreateAppStoreApp.prototype['StoreSelectorType'] = undefined;

/**
 * @member {Array.<module:model/FieldGroup>} FieldGroups
 */
CreateAppStoreApp.prototype['FieldGroups'] = undefined;

/**
 * @member {String} SetupInstructions
 */
CreateAppStoreApp.prototype['SetupInstructions'] = undefined;

/**
 * @member {String} ExternalSetupLink
 */
CreateAppStoreApp.prototype['ExternalSetupLink'] = undefined;

/**
 * @member {module:model/CreateAppStoreApp.TeammateAppAccessLevelEnum} TeammateAppAccessLevel
 */
CreateAppStoreApp.prototype['TeammateAppAccessLevel'] = undefined;

/**
 * @member {module:model/CreateAppStoreApp.PermissionsTypeEnum} PermissionsType
 */
CreateAppStoreApp.prototype['PermissionsType'] = undefined;

/**
 * @member {module:model/AppStoreAppSupportInfo} Support
 */
CreateAppStoreApp.prototype['Support'] = undefined;

/**
 * @member {String} ExternalFunctionActionUrl
 */
CreateAppStoreApp.prototype['ExternalFunctionActionUrl'] = undefined;

/**
 * @member {String} ExternalFunctionSignatureKey
 */
CreateAppStoreApp.prototype['ExternalFunctionSignatureKey'] = undefined;

/**
 * @member {Boolean} IsPaid
 */
CreateAppStoreApp.prototype['IsPaid'] = undefined;

/**
 * @member {String} Name
 */
CreateAppStoreApp.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
CreateAppStoreApp.prototype['Description'] = undefined;

/**
 * @member {Boolean} IsEnabled
 */
CreateAppStoreApp.prototype['IsEnabled'] = undefined;

/**
 * @member {Array.<module:model/CreateAppStoreApp.CategoriesEnum>} Categories
 */
CreateAppStoreApp.prototype['Categories'] = undefined;

/**
 * @member {Array.<module:model/CreateAppStoreApp.CountriesEnum>} Countries
 */
CreateAppStoreApp.prototype['Countries'] = undefined;

/**
 * @member {String} DeveloperName
 */
CreateAppStoreApp.prototype['DeveloperName'] = undefined;





/**
 * Allowed values for the <code>ConfigurationType</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['ConfigurationTypeEnum'] = {

    /**
     * value: "ExternalLink"
     * @const
     */
    "ExternalLink": "ExternalLink",

    /**
     * value: "FlipdishHosted"
     * @const
     */
    "FlipdishHosted": "FlipdishHosted"
};


/**
 * Allowed values for the <code>StoreSelectorType</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['StoreSelectorTypeEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Single"
     * @const
     */
    "Single": "Single",

    /**
     * value: "Multiple"
     * @const
     */
    "Multiple": "Multiple"
};


/**
 * Allowed values for the <code>TeammateAppAccessLevel</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['TeammateAppAccessLevelEnum'] = {

    /**
     * value: "Owner"
     * @const
     */
    "Owner": "Owner",

    /**
     * value: "StoreOwner"
     * @const
     */
    "StoreOwner": "StoreOwner",

    /**
     * value: "PropertyOwner"
     * @const
     */
    "PropertyOwner": "PropertyOwner",

    /**
     * value: "ManagedOwner"
     * @const
     */
    "ManagedOwner": "ManagedOwner",

    /**
     * value: "Integrator"
     * @const
     */
    "Integrator": "Integrator",

    /**
     * value: "PropertyManager"
     * @const
     */
    "PropertyManager": "PropertyManager",

    /**
     * value: "StoreManager"
     * @const
     */
    "StoreManager": "StoreManager",

    /**
     * value: "StoreStaff"
     * @const
     */
    "StoreStaff": "StoreStaff",

    /**
     * value: "StoreReadOnlyAccess"
     * @const
     */
    "StoreReadOnlyAccess": "StoreReadOnlyAccess",

    /**
     * value: "FinanceManger"
     * @const
     */
    "FinanceManger": "FinanceManger"
};


/**
 * Allowed values for the <code>PermissionsType</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['PermissionsTypeEnum'] = {

    /**
     * value: "Teammate"
     * @const
     */
    "Teammate": "Teammate"
};


/**
 * Allowed values for the <code>Categories</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['CategoriesEnum'] = {

    /**
     * value: "PointOfSale"
     * @const
     */
    "PointOfSale": "PointOfSale",

    /**
     * value: "DeliveryAndLogistics"
     * @const
     */
    "DeliveryAndLogistics": "DeliveryAndLogistics",

    /**
     * value: "CRM"
     * @const
     */
    "CRM": "CRM",

    /**
     * value: "GiftCard"
     * @const
     */
    "GiftCard": "GiftCard",

    /**
     * value: "Accounting"
     * @const
     */
    "Accounting": "Accounting",

    /**
     * value: "LoyaltyAndMarketing"
     * @const
     */
    "LoyaltyAndMarketing": "LoyaltyAndMarketing",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other"
};


/**
 * Allowed values for the <code>Countries</code> property.
 * @enum {String}
 * @readonly
 */
CreateAppStoreApp['CountriesEnum'] = {

    /**
     * value: "GB"
     * @const
     */
    "GB": "GB",

    /**
     * value: "IE"
     * @const
     */
    "IE": "IE",

    /**
     * value: "FR"
     * @const
     */
    "FR": "FR",

    /**
     * value: "ES"
     * @const
     */
    "ES": "ES",

    /**
     * value: "PT"
     * @const
     */
    "PT": "PT",

    /**
     * value: "IT"
     * @const
     */
    "IT": "IT",

    /**
     * value: "DE"
     * @const
     */
    "DE": "DE",

    /**
     * value: "PL"
     * @const
     */
    "PL": "PL",

    /**
     * value: "BE"
     * @const
     */
    "BE": "BE",

    /**
     * value: "LU"
     * @const
     */
    "LU": "LU",

    /**
     * value: "NL"
     * @const
     */
    "NL": "NL",

    /**
     * value: "US"
     * @const
     */
    "US": "US",

    /**
     * value: "CA"
     * @const
     */
    "CA": "CA",

    /**
     * value: "BG"
     * @const
     */
    "BG": "BG",

    /**
     * value: "MX"
     * @const
     */
    "MX": "MX",

    /**
     * value: "AU"
     * @const
     */
    "AU": "AU",

    /**
     * value: "NZ"
     * @const
     */
    "NZ": "NZ"
};



export default CreateAppStoreApp;

