/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidValue from './ValidValue';

/**
 * The Field model module.
 * @module model/Field
 * @version 1.0.0
 */
class Field {
    /**
     * Constructs a new <code>Field</code>.
     * @alias module:model/Field
     * @param Name {String} 
     * @param Description {String} 
     * @param Key {String} 
     * @param Position {Number} 
     * @param FieldType {module:model/Field.FieldTypeEnum} 
     */
    constructor(Name, Description, Key, Position, FieldType) { 
        
        Field.initialize(this, Name, Description, Key, Position, FieldType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, Name, Description, Key, Position, FieldType) { 
        obj['Name'] = Name;
        obj['Description'] = Description;
        obj['Key'] = Key;
        obj['Position'] = Position;
        obj['FieldType'] = FieldType;
    }

    /**
     * Constructs a <code>Field</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Field} obj Optional instance to populate.
     * @return {module:model/Field} The populated <code>Field</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Field();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('Tooltip')) {
                obj['Tooltip'] = ApiClient.convertToType(data['Tooltip'], 'String');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'Number');
            }
            if (data.hasOwnProperty('DefaultValue')) {
                obj['DefaultValue'] = ApiClient.convertToType(data['DefaultValue'], 'String');
            }
            if (data.hasOwnProperty('ValidValues')) {
                obj['ValidValues'] = ApiClient.convertToType(data['ValidValues'], [ValidValue]);
            }
            if (data.hasOwnProperty('ValidationRegex')) {
                obj['ValidationRegex'] = ApiClient.convertToType(data['ValidationRegex'], 'String');
            }
            if (data.hasOwnProperty('FieldType')) {
                obj['FieldType'] = ApiClient.convertToType(data['FieldType'], 'String');
            }
            if (data.hasOwnProperty('IsFlipdishRestricted')) {
                obj['IsFlipdishRestricted'] = ApiClient.convertToType(data['IsFlipdishRestricted'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Name
 */
Field.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
Field.prototype['Description'] = undefined;

/**
 * @member {String} Key
 */
Field.prototype['Key'] = undefined;

/**
 * @member {String} Tooltip
 */
Field.prototype['Tooltip'] = undefined;

/**
 * @member {Number} Position
 */
Field.prototype['Position'] = undefined;

/**
 * @member {String} DefaultValue
 */
Field.prototype['DefaultValue'] = undefined;

/**
 * @member {Array.<module:model/ValidValue>} ValidValues
 */
Field.prototype['ValidValues'] = undefined;

/**
 * @member {String} ValidationRegex
 */
Field.prototype['ValidationRegex'] = undefined;

/**
 * @member {module:model/Field.FieldTypeEnum} FieldType
 */
Field.prototype['FieldType'] = undefined;

/**
 * @member {Boolean} IsFlipdishRestricted
 */
Field.prototype['IsFlipdishRestricted'] = undefined;





/**
 * Allowed values for the <code>FieldType</code> property.
 * @enum {String}
 * @readonly
 */
Field['FieldTypeEnum'] = {

    /**
     * value: "Text"
     * @const
     */
    "Text": "Text",

    /**
     * value: "TextArea"
     * @const
     */
    "TextArea": "TextArea",

    /**
     * value: "Integer"
     * @const
     */
    "Integer": "Integer",

    /**
     * value: "Decimal"
     * @const
     */
    "Decimal": "Decimal",

    /**
     * value: "Date"
     * @const
     */
    "Date": "Date",

    /**
     * value: "DateTime"
     * @const
     */
    "DateTime": "DateTime",

    /**
     * value: "Time"
     * @const
     */
    "Time": "Time",

    /**
     * value: "Select"
     * @const
     */
    "Select": "Select",

    /**
     * value: "Boolean"
     * @const
     */
    "Boolean": "Boolean",

    /**
     * value: "ActionButton"
     * @const
     */
    "ActionButton": "ActionButton"
};



export default Field;

