/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RevenueDetail model module.
 * @module model/RevenueDetail
 * @version 1.0.0
 */
class RevenueDetail {
    /**
     * Constructs a new <code>RevenueDetail</code>.
     * Sales information
     * @alias module:model/RevenueDetail
     */
    constructor() { 
        
        RevenueDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RevenueDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RevenueDetail} obj Optional instance to populate.
     * @return {module:model/RevenueDetail} The populated <code>RevenueDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RevenueDetail();

            if (data.hasOwnProperty('OnlineSalesAmount')) {
                obj['OnlineSalesAmount'] = ApiClient.convertToType(data['OnlineSalesAmount'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesTax')) {
                obj['OnlineSalesTax'] = ApiClient.convertToType(data['OnlineSalesTax'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesIncludingTax')) {
                obj['OnlineSalesIncludingTax'] = ApiClient.convertToType(data['OnlineSalesIncludingTax'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesFeesBaseAmount')) {
                obj['OnlineSalesFeesBaseAmount'] = ApiClient.convertToType(data['OnlineSalesFeesBaseAmount'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesAmount')) {
                obj['CashSalesAmount'] = ApiClient.convertToType(data['CashSalesAmount'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesTax')) {
                obj['CashSalesTax'] = ApiClient.convertToType(data['CashSalesTax'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesIncludingTax')) {
                obj['CashSalesIncludingTax'] = ApiClient.convertToType(data['CashSalesIncludingTax'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesFeesBaseAmount')) {
                obj['CashSalesFeesBaseAmount'] = ApiClient.convertToType(data['CashSalesFeesBaseAmount'], 'Number');
            }
            if (data.hasOwnProperty('TotalSalesIncludingTax')) {
                obj['TotalSalesIncludingTax'] = ApiClient.convertToType(data['TotalSalesIncludingTax'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesDeliveryCharges')) {
                obj['OnlineSalesDeliveryCharges'] = ApiClient.convertToType(data['OnlineSalesDeliveryCharges'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesTips')) {
                obj['OnlineSalesTips'] = ApiClient.convertToType(data['OnlineSalesTips'], 'Number');
            }
            if (data.hasOwnProperty('TotalOnlineRevenue')) {
                obj['TotalOnlineRevenue'] = ApiClient.convertToType(data['TotalOnlineRevenue'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesServiceCharges')) {
                obj['OnlineSalesServiceCharges'] = ApiClient.convertToType(data['OnlineSalesServiceCharges'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Online sales amount
 * @member {Number} OnlineSalesAmount
 */
RevenueDetail.prototype['OnlineSalesAmount'] = undefined;

/**
 * Online sales tax
 * @member {Number} OnlineSalesTax
 */
RevenueDetail.prototype['OnlineSalesTax'] = undefined;

/**
 * Online sales amount plus online sales tax
 * @member {Number} OnlineSalesIncludingTax
 */
RevenueDetail.prototype['OnlineSalesIncludingTax'] = undefined;

/**
 * Online sales base amount to calculate fees
 * @member {Number} OnlineSalesFeesBaseAmount
 */
RevenueDetail.prototype['OnlineSalesFeesBaseAmount'] = undefined;

/**
 * Cash sales amount
 * @member {Number} CashSalesAmount
 */
RevenueDetail.prototype['CashSalesAmount'] = undefined;

/**
 * Cash sales tax
 * @member {Number} CashSalesTax
 */
RevenueDetail.prototype['CashSalesTax'] = undefined;

/**
 * Cash sales amount plus online sales tax
 * @member {Number} CashSalesIncludingTax
 */
RevenueDetail.prototype['CashSalesIncludingTax'] = undefined;

/**
 * Online sales base amount to calculate fees
 * @member {Number} CashSalesFeesBaseAmount
 */
RevenueDetail.prototype['CashSalesFeesBaseAmount'] = undefined;

/**
 * Total Sales (online and cash) including tax
 * @member {Number} TotalSalesIncludingTax
 */
RevenueDetail.prototype['TotalSalesIncludingTax'] = undefined;

/**
 * Delivery charges on online sales
 * @member {Number} OnlineSalesDeliveryCharges
 */
RevenueDetail.prototype['OnlineSalesDeliveryCharges'] = undefined;

/**
 * Tips for online sales
 * @member {Number} OnlineSalesTips
 */
RevenueDetail.prototype['OnlineSalesTips'] = undefined;

/**
 * Online sales plus online delivery charges and tips
 * @member {Number} TotalOnlineRevenue
 */
RevenueDetail.prototype['TotalOnlineRevenue'] = undefined;

/**
 * Service charge on online sales
 * @member {Number} OnlineSalesServiceCharges
 */
RevenueDetail.prototype['OnlineSalesServiceCharges'] = undefined;






export default RevenueDetail;

