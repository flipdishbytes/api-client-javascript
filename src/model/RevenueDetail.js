/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.RevenueDetail = factory(root.Flipdish.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The RevenueDetail model module.
   * @module model/RevenueDetail
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>RevenueDetail</code>.
   * Sales information
   * @alias module:model/RevenueDetail
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RevenueDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RevenueDetail} obj Optional instance to populate.
   * @return {module:model/RevenueDetail} The populated <code>RevenueDetail</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('OnlineSalesAmount'))
        obj.OnlineSalesAmount = ApiClient.convertToType(data['OnlineSalesAmount'], 'Number');
      if (data.hasOwnProperty('OnlineSalesTax'))
        obj.OnlineSalesTax = ApiClient.convertToType(data['OnlineSalesTax'], 'Number');
      if (data.hasOwnProperty('OnlineSalesIncludingTax'))
        obj.OnlineSalesIncludingTax = ApiClient.convertToType(data['OnlineSalesIncludingTax'], 'Number');
      if (data.hasOwnProperty('OnlineSalesFeesBaseAmount'))
        obj.OnlineSalesFeesBaseAmount = ApiClient.convertToType(data['OnlineSalesFeesBaseAmount'], 'Number');
      if (data.hasOwnProperty('CashSalesAmount'))
        obj.CashSalesAmount = ApiClient.convertToType(data['CashSalesAmount'], 'Number');
      if (data.hasOwnProperty('CashSalesTax'))
        obj.CashSalesTax = ApiClient.convertToType(data['CashSalesTax'], 'Number');
      if (data.hasOwnProperty('CashSalesIncludingTax'))
        obj.CashSalesIncludingTax = ApiClient.convertToType(data['CashSalesIncludingTax'], 'Number');
      if (data.hasOwnProperty('CashSalesFeesBaseAmount'))
        obj.CashSalesFeesBaseAmount = ApiClient.convertToType(data['CashSalesFeesBaseAmount'], 'Number');
      if (data.hasOwnProperty('TotalSalesIncludingTax'))
        obj.TotalSalesIncludingTax = ApiClient.convertToType(data['TotalSalesIncludingTax'], 'Number');
      if (data.hasOwnProperty('OnlineSalesDeliveryCharges'))
        obj.OnlineSalesDeliveryCharges = ApiClient.convertToType(data['OnlineSalesDeliveryCharges'], 'Number');
      if (data.hasOwnProperty('OnlineSalesTips'))
        obj.OnlineSalesTips = ApiClient.convertToType(data['OnlineSalesTips'], 'Number');
      if (data.hasOwnProperty('TotalOnlineRevenue'))
        obj.TotalOnlineRevenue = ApiClient.convertToType(data['TotalOnlineRevenue'], 'Number');
      if (data.hasOwnProperty('OnlineSalesServiceCharges'))
        obj.OnlineSalesServiceCharges = ApiClient.convertToType(data['OnlineSalesServiceCharges'], 'Number');
    }
    return obj;
  }

  /**
   * Online sales amount
   * @member {Number} OnlineSalesAmount
   */
  exports.prototype.OnlineSalesAmount = undefined;

  /**
   * Online sales tax
   * @member {Number} OnlineSalesTax
   */
  exports.prototype.OnlineSalesTax = undefined;

  /**
   * Online sales amount plus online sales tax
   * @member {Number} OnlineSalesIncludingTax
   */
  exports.prototype.OnlineSalesIncludingTax = undefined;

  /**
   * Online sales base amount to calculate fees
   * @member {Number} OnlineSalesFeesBaseAmount
   */
  exports.prototype.OnlineSalesFeesBaseAmount = undefined;

  /**
   * Cash sales amount
   * @member {Number} CashSalesAmount
   */
  exports.prototype.CashSalesAmount = undefined;

  /**
   * Cash sales tax
   * @member {Number} CashSalesTax
   */
  exports.prototype.CashSalesTax = undefined;

  /**
   * Cash sales amount plus online sales tax
   * @member {Number} CashSalesIncludingTax
   */
  exports.prototype.CashSalesIncludingTax = undefined;

  /**
   * Online sales base amount to calculate fees
   * @member {Number} CashSalesFeesBaseAmount
   */
  exports.prototype.CashSalesFeesBaseAmount = undefined;

  /**
   * Total Sales (online and cash) including tax
   * @member {Number} TotalSalesIncludingTax
   */
  exports.prototype.TotalSalesIncludingTax = undefined;

  /**
   * Delivery charges on online sales
   * @member {Number} OnlineSalesDeliveryCharges
   */
  exports.prototype.OnlineSalesDeliveryCharges = undefined;

  /**
   * Tips for online sales
   * @member {Number} OnlineSalesTips
   */
  exports.prototype.OnlineSalesTips = undefined;

  /**
   * Online sales plus online delivery charges and tips
   * @member {Number} TotalOnlineRevenue
   */
  exports.prototype.TotalOnlineRevenue = undefined;

  /**
   * Service charge on online sales
   * @member {Number} OnlineSalesServiceCharges
   */
  exports.prototype.OnlineSalesServiceCharges = undefined;


  return exports;

}));
