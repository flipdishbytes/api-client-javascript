/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NextStatusWithOrderType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NextStatusWithOrderType'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.FulfillmentStatusConfigurationItem = factory(root.Flipdish.ApiClient, root.Flipdish.NextStatusWithOrderType);
  }
}(this, function(ApiClient, NextStatusWithOrderType) {
  'use strict';

  /**
   * The FulfillmentStatusConfigurationItem model module.
   * @module model/FulfillmentStatusConfigurationItem
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>FulfillmentStatusConfigurationItem</code>.
   * Fulfillment Status Item
   * @alias module:model/FulfillmentStatusConfigurationItem
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>FulfillmentStatusConfigurationItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FulfillmentStatusConfigurationItem} obj Optional instance to populate.
   * @return {module:model/FulfillmentStatusConfigurationItem} The populated <code>FulfillmentStatusConfigurationItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('StatusId'))
        obj.StatusId = ApiClient.convertToType(data['StatusId'], 'String');
      if (data.hasOwnProperty('StatusName'))
        obj.StatusName = ApiClient.convertToType(data['StatusName'], 'String');
      if (data.hasOwnProperty('Enabled'))
        obj.Enabled = ApiClient.convertToType(data['Enabled'], 'Boolean');
      if (data.hasOwnProperty('DisplayName'))
        obj.DisplayName = ApiClient.convertToType(data['DisplayName'], 'String');
      if (data.hasOwnProperty('Icon'))
        obj.Icon = ApiClient.convertToType(data['Icon'], 'String');
      if (data.hasOwnProperty('PublicDescription'))
        obj.PublicDescription = ApiClient.convertToType(data['PublicDescription'], 'String');
      if (data.hasOwnProperty('Internal'))
        obj.Internal = ApiClient.convertToType(data['Internal'], 'Boolean');
      if (data.hasOwnProperty('NextStatuses'))
        obj.NextStatuses = ApiClient.convertToType(data['NextStatuses'], ['String']);
      if (data.hasOwnProperty('DefaultNextStatus'))
        obj.DefaultNextStatus = ApiClient.convertToType(data['DefaultNextStatus'], [NextStatusWithOrderType]);
      if (data.hasOwnProperty('ChangeType'))
        obj.ChangeType = ApiClient.convertToType(data['ChangeType'], 'String');
      if (data.hasOwnProperty('IncludeInReports'))
        obj.IncludeInReports = ApiClient.convertToType(data['IncludeInReports'], 'Boolean');
      if (data.hasOwnProperty('IsCustom'))
        obj.IsCustom = ApiClient.convertToType(data['IsCustom'], 'Boolean');
      if (data.hasOwnProperty('OrderTypes'))
        obj.OrderTypes = ApiClient.convertToType(data['OrderTypes'], ['String']);
      if (data.hasOwnProperty('Communication'))
        obj.Communication = ApiClient.convertToType(data['Communication'], 'Boolean');
    }
    return obj;
  }

  /**
   * Status Id (no whitespaces)
   * @member {String} StatusId
   */
  exports.prototype.StatusId = undefined;

  /**
   * Status name
   * @member {String} StatusName
   */
  exports.prototype.StatusName = undefined;

  /**
   * Is status enabled
   * @member {Boolean} Enabled
   */
  exports.prototype.Enabled = undefined;

  /**
   * The short status string that is displayed to users in apps, portal. If empty then Order Status Name is displayed instead
   * @member {String} DisplayName
   */
  exports.prototype.DisplayName = undefined;

  /**
   * Icon/Image that represents that status visual
   * @member {String} Icon
   */
  exports.prototype.Icon = undefined;

  /**
   * A string which could be used in notification templates with a placeholder (SMS, email, push, web page with status)
   * @member {String} PublicDescription
   */
  exports.prototype.PublicDescription = undefined;

  /**
   * Is internal state (internal states not shown to customers)
   * @member {Boolean} Internal
   */
  exports.prototype.Internal = undefined;

  /**
   * list of statuses that this status can move to (can be back or forth)
   * @member {Array.<String>} NextStatuses
   */
  exports.prototype.NextStatuses = undefined;

  /**
   * The default next status (on a dropdown or quick button on terminal or portal)
   * @member {Array.<module:model/NextStatusWithOrderType>} DefaultNextStatus
   */
  exports.prototype.DefaultNextStatus = undefined;

  /**
   * How will state change (manually or automated, including timed)
   * @member {module:model/FulfillmentStatusConfigurationItem.ChangeTypeEnum} ChangeType
   */
  exports.prototype.ChangeType = undefined;

  /**
   * Include in reports
   * @member {Boolean} IncludeInReports
   */
  exports.prototype.IncludeInReports = undefined;

  /**
   * Is custom state. If not, then it's a system state
   * @member {Boolean} IsCustom
   */
  exports.prototype.IsCustom = undefined;

  /**
   * If empty then applies to all ordertypes, otherwise a list of order types this state applies to
   * @member {Array.<module:model/FulfillmentStatusConfigurationItem.OrderTypesEnum>} OrderTypes
   */
  exports.prototype.OrderTypes = undefined;

  /**
   * Whether state should fire off a notification to the customer
   * @member {Boolean} Communication
   */
  exports.prototype.Communication = undefined;



  /**
   * Allowed values for the <code>ChangeType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ChangeTypeEnum = {
    /**
     * value: "Manual"
     * @const
     */
    Manual: "Manual",

    /**
     * value: "Automated"
     * @const
     */
    Automated: "Automated",

    /**
     * value: "Integrated"
     * @const
     */
    Integrated: "Integrated"
  };


  /**
   * Allowed values for the <code>OrderTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OrderTypesEnum = {
    /**
     * value: "All"
     * @const
     */
    All: "All",

    /**
     * value: "Delivery"
     * @const
     */
    Delivery: "Delivery",

    /**
     * value: "Collection"
     * @const
     */
    Collection: "Collection",

    /**
     * value: "DineIn"
     * @const
     */
    DineIn: "DineIn"
  };

  return exports;

}));
