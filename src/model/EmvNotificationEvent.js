/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Order'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Order'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.EmvNotificationEvent = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.Order);
  }
}(this, function(ApiClient, Order) {
  'use strict';

  /**
   * The EmvNotificationEvent model module.
   * @module model/EmvNotificationEvent
   * @version v1.0
   */

  /**
   * Constructs a new <code>EmvNotificationEvent</code>.
   * Order Terminal Notification
   * @alias module:model/EmvNotificationEvent
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>EmvNotificationEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EmvNotificationEvent} obj Optional instance to populate.
   * @return {module:model/EmvNotificationEvent} The populated <code>EmvNotificationEvent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('EventName'))
        obj.eventName = ApiClient.convertToType(data['EventName'], 'String');
      if (data.hasOwnProperty('Notification'))
        obj.notification = ApiClient.convertToType(data['Notification'], 'String');
      if (data.hasOwnProperty('Order'))
        obj.order = Order.constructFromObject(data['Order']);
      if (data.hasOwnProperty('TerminalId'))
        obj.terminalId = ApiClient.convertToType(data['TerminalId'], 'String');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('ExpDate'))
        obj.expDate = ApiClient.convertToType(data['ExpDate'], 'String');
      if (data.hasOwnProperty('CardType'))
        obj.cardType = ApiClient.convertToType(data['CardType'], 'String');
      if (data.hasOwnProperty('PaymentMethod'))
        obj.paymentMethod = ApiClient.convertToType(data['PaymentMethod'], 'String');
      if (data.hasOwnProperty('AccountNumber'))
        obj.accountNumber = ApiClient.convertToType(data['AccountNumber'], 'String');
      if (data.hasOwnProperty('AuthCode'))
        obj.authCode = ApiClient.convertToType(data['AuthCode'], 'String');
      if (data.hasOwnProperty('ProviderMessage'))
        obj.providerMessage = ApiClient.convertToType(data['ProviderMessage'], 'String');
      if (data.hasOwnProperty('FlipdishEventId'))
        obj.flipdishEventId = ApiClient.convertToType(data['FlipdishEventId'], 'String');
      if (data.hasOwnProperty('CreateTime'))
        obj.createTime = ApiClient.convertToType(data['CreateTime'], 'Date');
      if (data.hasOwnProperty('Position'))
        obj.position = ApiClient.convertToType(data['Position'], 'Number');
      if (data.hasOwnProperty('AppId'))
        obj.appId = ApiClient.convertToType(data['AppId'], 'String');
    }
    return obj;
  }

  /**
   * The event name
   * @member {String} eventName
   */
  exports.prototype.eventName = undefined;

  /**
   * Notification Sent
   * @member {String} notification
   */
  exports.prototype.notification = undefined;

  /**
   * Order
   * @member {module:model/Order} order
   */
  exports.prototype.order = undefined;

  /**
   * TerminalId
   * @member {String} terminalId
   */
  exports.prototype.terminalId = undefined;

  /**
   * Description
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Expirey Date
   * @member {String} expDate
   */
  exports.prototype.expDate = undefined;

  /**
   * Card Type
   * @member {String} cardType
   */
  exports.prototype.cardType = undefined;

  /**
   * Payment Method
   * @member {String} paymentMethod
   */
  exports.prototype.paymentMethod = undefined;

  /**
   * Masked Account Number
   * @member {String} accountNumber
   */
  exports.prototype.accountNumber = undefined;

  /**
   * Auth Code
   * @member {String} authCode
   */
  exports.prototype.authCode = undefined;

  /**
   * Payment Provider Message
   * @member {String} providerMessage
   */
  exports.prototype.providerMessage = undefined;

  /**
   * The identitfier of the event
   * @member {String} flipdishEventId
   */
  exports.prototype.flipdishEventId = undefined;

  /**
   * The time of creation of the event
   * @member {Date} createTime
   */
  exports.prototype.createTime = undefined;

  /**
   * Position
   * @member {Number} position
   */
  exports.prototype.position = undefined;

  /**
   * App id
   * @member {String} appId
   */
  exports.prototype.appId = undefined;


  return exports;

}));
