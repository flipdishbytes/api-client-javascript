/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MenuSection', 'model/MenuTaxRate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MenuSection'), require('./MenuTaxRate'));
  } else {
    // Browser globals (root is window)
    if (!root.Flipdish) {
      root.Flipdish = {};
    }
    root.Flipdish.Menu = factory(root.Flipdish.ApiClient, root.Flipdish.MenuSection, root.Flipdish.MenuTaxRate);
  }
}(this, function(ApiClient, MenuSection, MenuTaxRate) {
  'use strict';

  /**
   * The Menu model module.
   * @module model/Menu
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Menu</code>.
   * Menu
   * @alias module:model/Menu
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Menu</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Menu} obj Optional instance to populate.
   * @return {module:model/Menu} The populated <code>Menu</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('MenuId'))
        obj.MenuId = ApiClient.convertToType(data['MenuId'], 'Number');
      if (data.hasOwnProperty('ModifiedTime'))
        obj.ModifiedTime = ApiClient.convertToType(data['ModifiedTime'], 'Date');
      if (data.hasOwnProperty('VersionNumber'))
        obj.VersionNumber = ApiClient.convertToType(data['VersionNumber'], 'Number');
      if (data.hasOwnProperty('ImageName'))
        obj.ImageName = ApiClient.convertToType(data['ImageName'], 'String');
      if (data.hasOwnProperty('ImageUrl'))
        obj.ImageUrl = ApiClient.convertToType(data['ImageUrl'], 'String');
      if (data.hasOwnProperty('Name'))
        obj.Name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('Locked'))
        obj.Locked = ApiClient.convertToType(data['Locked'], 'Boolean');
      if (data.hasOwnProperty('MenuSections'))
        obj.MenuSections = ApiClient.convertToType(data['MenuSections'], [MenuSection]);
      if (data.hasOwnProperty('TaxRates'))
        obj.TaxRates = ApiClient.convertToType(data['TaxRates'], [MenuTaxRate]);
      if (data.hasOwnProperty('DisplaySectionLinks'))
        obj.DisplaySectionLinks = ApiClient.convertToType(data['DisplaySectionLinks'], 'Boolean');
      if (data.hasOwnProperty('MenuSectionBehaviour'))
        obj.MenuSectionBehaviour = ApiClient.convertToType(data['MenuSectionBehaviour'], 'String');
      if (data.hasOwnProperty('TaxType'))
        obj.TaxType = ApiClient.convertToType(data['TaxType'], 'String');
    }
    return obj;
  }

  /**
   * Menu identifier
   * @member {Number} MenuId
   */
  exports.prototype.MenuId = undefined;

  /**
   * Last modified time
   * @member {Date} ModifiedTime
   */
  exports.prototype.ModifiedTime = undefined;

  /**
   * Menu version
   * @member {Number} VersionNumber
   */
  exports.prototype.VersionNumber = undefined;

  /**
   * Image Name
   * @member {String} ImageName
   */
  exports.prototype.ImageName = undefined;

  /**
   * Image url
   * @member {String} ImageUrl
   */
  exports.prototype.ImageUrl = undefined;

  /**
   * Name of Menu, only shown in portal
   * @member {String} Name
   */
  exports.prototype.Name = undefined;

  /**
   * Locked: is menu locked against modifcation
   * @member {Boolean} Locked
   */
  exports.prototype.Locked = undefined;

  /**
   * Menu sections (startes, main etc)
   * @member {Array.<module:model/MenuSection>} MenuSections
   */
  exports.prototype.MenuSections = undefined;

  /**
   * Menu tax rates
   * @member {Array.<module:model/MenuTaxRate>} TaxRates
   */
  exports.prototype.TaxRates = undefined;

  /**
   * Display menu section link on UI
   * @member {Boolean} DisplaySectionLinks
   */
  exports.prototype.DisplaySectionLinks = undefined;

  /**
   * Menu section behaviour
   * @member {module:model/Menu.MenuSectionBehaviourEnum} MenuSectionBehaviour
   */
  exports.prototype.MenuSectionBehaviour = undefined;

  /**
   * Tax type
   * @member {module:model/Menu.TaxTypeEnum} TaxType
   */
  exports.prototype.TaxType = undefined;



  /**
   * Allowed values for the <code>MenuSectionBehaviour</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MenuSectionBehaviourEnum = {
    /**
     * value: "ExpandSingle"
     * @const
     */
    ExpandSingle: "ExpandSingle",

    /**
     * value: "ExpandMultiple"
     * @const
     */
    ExpandMultiple: "ExpandMultiple"
  };


  /**
   * Allowed values for the <code>TaxType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TaxTypeEnum = {
    /**
     * value: "IncludedInBasePrice"
     * @const
     */
    IncludedInBasePrice: "IncludedInBasePrice",

    /**
     * value: "ExcludedFromBasePrice"
     * @const
     */
    ExcludedFromBasePrice: "ExcludedFromBasePrice"
  };

  return exports;

}));
