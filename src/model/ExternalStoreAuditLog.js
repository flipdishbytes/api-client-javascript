/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuditLogFieldChangeInformation from './AuditLogFieldChangeInformation';

/**
 * The ExternalStoreAuditLog model module.
 * @module model/ExternalStoreAuditLog
 * @version 1.0.0
 */
class ExternalStoreAuditLog {
    /**
     * Constructs a new <code>ExternalStoreAuditLog</code>.
     * External event
     * @alias module:model/ExternalStoreAuditLog
     */
    constructor() { 
        
        ExternalStoreAuditLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalStoreAuditLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalStoreAuditLog} obj Optional instance to populate.
     * @return {module:model/ExternalStoreAuditLog} The populated <code>ExternalStoreAuditLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalStoreAuditLog();

            if (data.hasOwnProperty('ExternalCreateTime')) {
                obj['ExternalCreateTime'] = ApiClient.convertToType(data['ExternalCreateTime'], 'Date');
            }
            if (data.hasOwnProperty('StoreId')) {
                obj['StoreId'] = ApiClient.convertToType(data['StoreId'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('DescriptionFormat')) {
                obj['DescriptionFormat'] = ApiClient.convertToType(data['DescriptionFormat'], 'String');
            }
            if (data.hasOwnProperty('DescriptionFields')) {
                obj['DescriptionFields'] = ApiClient.convertToType(data['DescriptionFields'], 'String');
            }
            if (data.hasOwnProperty('DescriptionId')) {
                obj['DescriptionId'] = ApiClient.convertToType(data['DescriptionId'], 'String');
            }
            if (data.hasOwnProperty('Ref1')) {
                obj['Ref1'] = ApiClient.convertToType(data['Ref1'], 'String');
            }
            if (data.hasOwnProperty('Ref2')) {
                obj['Ref2'] = ApiClient.convertToType(data['Ref2'], 'String');
            }
            if (data.hasOwnProperty('Ref3')) {
                obj['Ref3'] = ApiClient.convertToType(data['Ref3'], 'String');
            }
            if (data.hasOwnProperty('Ref4')) {
                obj['Ref4'] = ApiClient.convertToType(data['Ref4'], 'String');
            }
            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'Number');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], ['String']);
            }
            if (data.hasOwnProperty('FieldChanges')) {
                obj['FieldChanges'] = ApiClient.convertToType(data['FieldChanges'], [AuditLogFieldChangeInformation]);
            }
        }
        return obj;
    }


}

/**
 * The time of creation of the event
 * @member {Date} ExternalCreateTime
 */
ExternalStoreAuditLog.prototype['ExternalCreateTime'] = undefined;

/**
 * Store Id
 * @member {Number} StoreId
 */
ExternalStoreAuditLog.prototype['StoreId'] = undefined;

/**
 * Description
 * @member {String} Description
 */
ExternalStoreAuditLog.prototype['Description'] = undefined;

/**
 * Identifies the source of the log
 * @member {String} Source
 */
ExternalStoreAuditLog.prototype['Source'] = undefined;

/**
 * Identifies the version of the {Flipdish.PublicModels.V1.AuditLogs.ExternalStoreAuditLog.Source}
 * @member {String} Version
 */
ExternalStoreAuditLog.prototype['Version'] = undefined;

/**
 * Description with format placeholders
 * @member {String} DescriptionFormat
 */
ExternalStoreAuditLog.prototype['DescriptionFormat'] = undefined;

/**
 * Description with format placeholders
 * @member {String} DescriptionFields
 */
ExternalStoreAuditLog.prototype['DescriptionFields'] = undefined;

/**
 * Description
 * @member {String} DescriptionId
 */
ExternalStoreAuditLog.prototype['DescriptionId'] = undefined;

/**
 * Ref (reference field)
 * @member {String} Ref1
 */
ExternalStoreAuditLog.prototype['Ref1'] = undefined;

/**
 * Ref2 (reference field)
 * @member {String} Ref2
 */
ExternalStoreAuditLog.prototype['Ref2'] = undefined;

/**
 * Ref3 (reference field)
 * @member {String} Ref3
 */
ExternalStoreAuditLog.prototype['Ref3'] = undefined;

/**
 * Ref4 (reference field)
 * @member {String} Ref4
 */
ExternalStoreAuditLog.prototype['Ref4'] = undefined;

/**
 * Order Id
 * @member {Number} OrderId
 */
ExternalStoreAuditLog.prototype['OrderId'] = undefined;

/**
 * Tags
 * @member {Array.<String>} Tags
 */
ExternalStoreAuditLog.prototype['Tags'] = undefined;

/**
 * Field changes list
 * @member {Array.<module:model/AuditLogFieldChangeInformation>} FieldChanges
 */
ExternalStoreAuditLog.prototype['FieldChanges'] = undefined;






export default ExternalStoreAuditLog;

