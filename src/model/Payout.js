/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Payout model module.
 * @module model/Payout
 * @version 1.0.0
 */
class Payout {
    /**
     * Constructs a new <code>Payout</code>.
     * Holds the information for a whitelabel payout.
     * @alias module:model/Payout
     */
    constructor() { 
        
        Payout.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Payout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Payout} obj Optional instance to populate.
     * @return {module:model/Payout} The populated <code>Payout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Payout();

            if (data.hasOwnProperty('PayoutId')) {
                obj['PayoutId'] = ApiClient.convertToType(data['PayoutId'], 'Number');
            }
            if (data.hasOwnProperty('PayeeBankAccountId')) {
                obj['PayeeBankAccountId'] = ApiClient.convertToType(data['PayeeBankAccountId'], 'Number');
            }
            if (data.hasOwnProperty('AccountName')) {
                obj['AccountName'] = ApiClient.convertToType(data['AccountName'], 'String');
            }
            if (data.hasOwnProperty('PayoutStatus')) {
                obj['PayoutStatus'] = ApiClient.convertToType(data['PayoutStatus'], 'String');
            }
            if (data.hasOwnProperty('CreatedDate')) {
                obj['CreatedDate'] = ApiClient.convertToType(data['CreatedDate'], 'Date');
            }
            if (data.hasOwnProperty('PeriodStartTime')) {
                obj['PeriodStartTime'] = ApiClient.convertToType(data['PeriodStartTime'], 'Date');
            }
            if (data.hasOwnProperty('PeriodEndTime')) {
                obj['PeriodEndTime'] = ApiClient.convertToType(data['PeriodEndTime'], 'Date');
            }
            if (data.hasOwnProperty('DestinationBank')) {
                obj['DestinationBank'] = ApiClient.convertToType(data['DestinationBank'], 'String');
            }
            if (data.hasOwnProperty('DestinationAccount')) {
                obj['DestinationAccount'] = ApiClient.convertToType(data['DestinationAccount'], 'String');
            }
            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('PayoutType')) {
                obj['PayoutType'] = ApiClient.convertToType(data['PayoutType'], 'String');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('CutoffDate')) {
                obj['CutoffDate'] = ApiClient.convertToType(data['CutoffDate'], 'Date');
            }
            if (data.hasOwnProperty('OnlineSalesAmount')) {
                obj['OnlineSalesAmount'] = ApiClient.convertToType(data['OnlineSalesAmount'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesDeliveryCharges')) {
                obj['OnlineSalesDeliveryCharges'] = ApiClient.convertToType(data['OnlineSalesDeliveryCharges'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesTips')) {
                obj['OnlineSalesTips'] = ApiClient.convertToType(data['OnlineSalesTips'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesServiceCharges')) {
                obj['OnlineSalesServiceCharges'] = ApiClient.convertToType(data['OnlineSalesServiceCharges'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesRefundedFees')) {
                obj['OnlineSalesRefundedFees'] = ApiClient.convertToType(data['OnlineSalesRefundedFees'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesFees')) {
                obj['OnlineSalesFees'] = ApiClient.convertToType(data['OnlineSalesFees'], 'Number');
            }
            if (data.hasOwnProperty('PosSalesFees')) {
                obj['PosSalesFees'] = ApiClient.convertToType(data['PosSalesFees'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesRefundedAmount')) {
                obj['OnlineSalesRefundedAmount'] = ApiClient.convertToType(data['OnlineSalesRefundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('PosSalesRefundedAmount')) {
                obj['PosSalesRefundedAmount'] = ApiClient.convertToType(data['PosSalesRefundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('OnlineSalesTax')) {
                obj['OnlineSalesTax'] = ApiClient.convertToType(data['OnlineSalesTax'], 'Number');
            }
            if (data.hasOwnProperty('TotalOnlineRevenue')) {
                obj['TotalOnlineRevenue'] = ApiClient.convertToType(data['TotalOnlineRevenue'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesFees')) {
                obj['CashSalesFees'] = ApiClient.convertToType(data['CashSalesFees'], 'Number');
            }
            if (data.hasOwnProperty('CashSalesRefundedFees')) {
                obj['CashSalesRefundedFees'] = ApiClient.convertToType(data['CashSalesRefundedFees'], 'Number');
            }
            if (data.hasOwnProperty('CustomerCashFees')) {
                obj['CustomerCashFees'] = ApiClient.convertToType(data['CustomerCashFees'], 'Number');
            }
            if (data.hasOwnProperty('SalesFeesVat')) {
                obj['SalesFeesVat'] = ApiClient.convertToType(data['SalesFeesVat'], 'Number');
            }
            if (data.hasOwnProperty('TotalFees')) {
                obj['TotalFees'] = ApiClient.convertToType(data['TotalFees'], 'Number');
            }
            if (data.hasOwnProperty('TotalOnlineRevenueAdjustments')) {
                obj['TotalOnlineRevenueAdjustments'] = ApiClient.convertToType(data['TotalOnlineRevenueAdjustments'], 'Number');
            }
            if (data.hasOwnProperty('ChargebackAmount')) {
                obj['ChargebackAmount'] = ApiClient.convertToType(data['ChargebackAmount'], 'Number');
            }
            if (data.hasOwnProperty('PosSalesChargebackAmount')) {
                obj['PosSalesChargebackAmount'] = ApiClient.convertToType(data['PosSalesChargebackAmount'], 'Number');
            }
            if (data.hasOwnProperty('ChargebackRefundedFees')) {
                obj['ChargebackRefundedFees'] = ApiClient.convertToType(data['ChargebackRefundedFees'], 'Number');
            }
            if (data.hasOwnProperty('TotalChargebackCost')) {
                obj['TotalChargebackCost'] = ApiClient.convertToType(data['TotalChargebackCost'], 'Number');
            }
            if (data.hasOwnProperty('TotalOtherCharges')) {
                obj['TotalOtherCharges'] = ApiClient.convertToType(data['TotalOtherCharges'], 'Number');
            }
            if (data.hasOwnProperty('OpeningBalance')) {
                obj['OpeningBalance'] = ApiClient.convertToType(data['OpeningBalance'], 'Number');
            }
            if (data.hasOwnProperty('ClosingBalance')) {
                obj['ClosingBalance'] = ApiClient.convertToType(data['ClosingBalance'], 'Number');
            }
            if (data.hasOwnProperty('PayGreenSalesAmount')) {
                obj['PayGreenSalesAmount'] = ApiClient.convertToType(data['PayGreenSalesAmount'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryIntegrationFee')) {
                obj['DeliveryIntegrationFee'] = ApiClient.convertToType(data['DeliveryIntegrationFee'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryIntegrationTipFee')) {
                obj['DeliveryIntegrationTipFee'] = ApiClient.convertToType(data['DeliveryIntegrationTipFee'], 'Number');
            }
            if (data.hasOwnProperty('TotalThirdPartyFees')) {
                obj['TotalThirdPartyFees'] = ApiClient.convertToType(data['TotalThirdPartyFees'], 'Number');
            }
            if (data.hasOwnProperty('PosSalesAmount')) {
                obj['PosSalesAmount'] = ApiClient.convertToType(data['PosSalesAmount'], 'Number');
            }
            if (data.hasOwnProperty('PosSalesTax')) {
                obj['PosSalesTax'] = ApiClient.convertToType(data['PosSalesTax'], 'Number');
            }
            if (data.hasOwnProperty('TipsOnPosSales')) {
                obj['TipsOnPosSales'] = ApiClient.convertToType(data['TipsOnPosSales'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The id of the payout.
 * @member {Number} PayoutId
 */
Payout.prototype['PayoutId'] = undefined;

/**
 * Bank account identifier
 * @member {Number} PayeeBankAccountId
 */
Payout.prototype['PayeeBankAccountId'] = undefined;

/**
 * Account name of the payout destination
 * @member {String} AccountName
 */
Payout.prototype['AccountName'] = undefined;

/**
 * Status of the payout
 * @member {module:model/Payout.PayoutStatusEnum} PayoutStatus
 */
Payout.prototype['PayoutStatus'] = undefined;

/**
 * Date payout was created
 * @member {Date} CreatedDate
 */
Payout.prototype['CreatedDate'] = undefined;

/**
 * This payout includes operations after at this date (inclusive)
 * @member {Date} PeriodStartTime
 */
Payout.prototype['PeriodStartTime'] = undefined;

/**
 * This payout includes operations before at this date (exclusive)
 * @member {Date} PeriodEndTime
 */
Payout.prototype['PeriodEndTime'] = undefined;

/**
 * Destination bank name
 * @member {String} DestinationBank
 */
Payout.prototype['DestinationBank'] = undefined;

/**
 * Last 4 digits of the destination bank IBAN
 * @member {String} DestinationAccount
 */
Payout.prototype['DestinationAccount'] = undefined;

/**
 * Payout amount
 * @member {Number} Amount
 */
Payout.prototype['Amount'] = undefined;

/**
 * Type of payout source
 * @member {module:model/Payout.PayoutTypeEnum} PayoutType
 */
Payout.prototype['PayoutType'] = undefined;

/**
 * Payout currency
 * @member {module:model/Payout.CurrencyEnum} Currency
 */
Payout.prototype['Currency'] = undefined;

/**
 * Payouts before this date do not have a details breakdown
 * @member {Date} CutoffDate
 */
Payout.prototype['CutoffDate'] = undefined;

/**
 * Payout online sales amount
 * @member {Number} OnlineSalesAmount
 */
Payout.prototype['OnlineSalesAmount'] = undefined;

/**
 * Payout online sales delivery charges
 * @member {Number} OnlineSalesDeliveryCharges
 */
Payout.prototype['OnlineSalesDeliveryCharges'] = undefined;

/**
 * Payout online sales tips
 * @member {Number} OnlineSalesTips
 */
Payout.prototype['OnlineSalesTips'] = undefined;

/**
 * Payout online sales service charges
 * @member {Number} OnlineSalesServiceCharges
 */
Payout.prototype['OnlineSalesServiceCharges'] = undefined;

/**
 * Payout online sales refunded fees
 * @member {Number} OnlineSalesRefundedFees
 */
Payout.prototype['OnlineSalesRefundedFees'] = undefined;

/**
 * Payout online sales fees
 * @member {Number} OnlineSalesFees
 */
Payout.prototype['OnlineSalesFees'] = undefined;

/**
 * Payout online sales fees
 * @member {Number} PosSalesFees
 */
Payout.prototype['PosSalesFees'] = undefined;

/**
 * Payout online sales refunded amount
 * @member {Number} OnlineSalesRefundedAmount
 */
Payout.prototype['OnlineSalesRefundedAmount'] = undefined;

/**
 * POS Payout online sales refunded amount
 * @member {Number} PosSalesRefundedAmount
 */
Payout.prototype['PosSalesRefundedAmount'] = undefined;

/**
 * Payout online sales tax
 * @member {Number} OnlineSalesTax
 */
Payout.prototype['OnlineSalesTax'] = undefined;

/**
 * Payout total online revenue
 * @member {Number} TotalOnlineRevenue
 */
Payout.prototype['TotalOnlineRevenue'] = undefined;

/**
 * Payout cash sales fees
 * @member {Number} CashSalesFees
 */
Payout.prototype['CashSalesFees'] = undefined;

/**
 * Payout cash sales refunded fees
 * @member {Number} CashSalesRefundedFees
 */
Payout.prototype['CashSalesRefundedFees'] = undefined;

/**
 * Payout cash fees charged to customer
 * @member {Number} CustomerCashFees
 */
Payout.prototype['CustomerCashFees'] = undefined;

/**
 * Payout sales fees vat
 * @member {Number} SalesFeesVat
 */
Payout.prototype['SalesFeesVat'] = undefined;

/**
 * Payout total fees
 * @member {Number} TotalFees
 */
Payout.prototype['TotalFees'] = undefined;

/**
 * Payout total online revenue adjustments
 * @member {Number} TotalOnlineRevenueAdjustments
 */
Payout.prototype['TotalOnlineRevenueAdjustments'] = undefined;

/**
 * Payout chargeback amount
 * @member {Number} ChargebackAmount
 */
Payout.prototype['ChargebackAmount'] = undefined;

/**
 * POS Payout chargeback amount
 * @member {Number} PosSalesChargebackAmount
 */
Payout.prototype['PosSalesChargebackAmount'] = undefined;

/**
 * Payout chargeback refunded fees
 * @member {Number} ChargebackRefundedFees
 */
Payout.prototype['ChargebackRefundedFees'] = undefined;

/**
 * Payout chargebacks total cost
 * @member {Number} TotalChargebackCost
 */
Payout.prototype['TotalChargebackCost'] = undefined;

/**
 * Payout other charges total
 * @member {Number} TotalOtherCharges
 */
Payout.prototype['TotalOtherCharges'] = undefined;

/**
 * Payout opening balance
 * @member {Number} OpeningBalance
 */
Payout.prototype['OpeningBalance'] = undefined;

/**
 * Payout closing balance
 * @member {Number} ClosingBalance
 */
Payout.prototype['ClosingBalance'] = undefined;

/**
 * Amount of sales through PayGreen (restaurant vouchers)
 * @member {Number} PayGreenSalesAmount
 */
Payout.prototype['PayGreenSalesAmount'] = undefined;

/**
 * Third party integration delivery fee
 * @member {Number} DeliveryIntegrationFee
 */
Payout.prototype['DeliveryIntegrationFee'] = undefined;

/**
 * Third party integration delivery tip fee
 * @member {Number} DeliveryIntegrationTipFee
 */
Payout.prototype['DeliveryIntegrationTipFee'] = undefined;

/**
 * Total third party integration fees
 * @member {Number} TotalThirdPartyFees
 */
Payout.prototype['TotalThirdPartyFees'] = undefined;

/**
 * POS sales amount
 * @member {Number} PosSalesAmount
 */
Payout.prototype['PosSalesAmount'] = undefined;

/**
 * POS sales tax
 * @member {Number} PosSalesTax
 */
Payout.prototype['PosSalesTax'] = undefined;

/**
 * Tips on POS sales
 * @member {Number} TipsOnPosSales
 */
Payout.prototype['TipsOnPosSales'] = undefined;





/**
 * Allowed values for the <code>PayoutStatus</code> property.
 * @enum {String}
 * @readonly
 */
Payout['PayoutStatusEnum'] = {

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",

    /**
     * value: "InTransit"
     * @const
     */
    "InTransit": "InTransit",

    /**
     * value: "Paid"
     * @const
     */
    "Paid": "Paid",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled"
};


/**
 * Allowed values for the <code>PayoutType</code> property.
 * @enum {String}
 * @readonly
 */
Payout['PayoutTypeEnum'] = {

    /**
     * value: "Internal"
     * @const
     */
    "Internal": "Internal",

    /**
     * value: "Stripe"
     * @const
     */
    "Stripe": "Stripe"
};


/**
 * Allowed values for the <code>Currency</code> property.
 * @enum {String}
 * @readonly
 */
Payout['CurrencyEnum'] = {

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "DJF"
     * @const
     */
    "DJF": "DJF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR",

    /**
     * value: "ETB"
     * @const
     */
    "ETB": "ETB",

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "DZD"
     * @const
     */
    "DZD": "DZD",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "IQD"
     * @const
     */
    "IQD": "IQD",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "LBP"
     * @const
     */
    "LBP": "LBP",

    /**
     * value: "LYD"
     * @const
     */
    "LYD": "LYD",

    /**
     * value: "MAD"
     * @const
     */
    "MAD": "MAD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SYP"
     * @const
     */
    "SYP": "SYP",

    /**
     * value: "TND"
     * @const
     */
    "TND": "TND",

    /**
     * value: "YER"
     * @const
     */
    "YER": "YER",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "BYN"
     * @const
     */
    "BYN": "BYN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "NGN"
     * @const
     */
    "NGN": "NGN",

    /**
     * value: "BDT"
     * @const
     */
    "BDT": "BDT",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "BAM"
     * @const
     */
    "BAM": "BAM",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "MVR"
     * @const
     */
    "MVR": "MVR",

    /**
     * value: "BTN"
     * @const
     */
    "BTN": "BTN",

    /**
     * value: "XCD"
     * @const
     */
    "XCD": "XCD",

    /**
     * value: "BZD"
     * @const
     */
    "BZD": "BZD",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "JMD"
     * @const
     */
    "JMD": "JMD",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "PHP"
     * @const
     */
    "PHP": "PHP",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "TTD"
     * @const
     */
    "TTD": "TTD",

    /**
     * value: "XDR"
     * @const
     */
    "XDR": "XDR",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "BOB"
     * @const
     */
    "BOB": "BOB",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CRC"
     * @const
     */
    "CRC": "CRC",

    /**
     * value: "CUP"
     * @const
     */
    "CUP": "CUP",

    /**
     * value: "DOP"
     * @const
     */
    "DOP": "DOP",

    /**
     * value: "GTQ"
     * @const
     */
    "GTQ": "GTQ",

    /**
     * value: "HNL"
     * @const
     */
    "HNL": "HNL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "NIO"
     * @const
     */
    "NIO": "NIO",

    /**
     * value: "PAB"
     * @const
     */
    "PAB": "PAB",

    /**
     * value: "PEN"
     * @const
     */
    "PEN": "PEN",

    /**
     * value: "PYG"
     * @const
     */
    "PYG": "PYG",

    /**
     * value: "UYU"
     * @const
     */
    "UYU": "UYU",

    /**
     * value: "VEF"
     * @const
     */
    "VEF": "VEF",

    /**
     * value: "IRR"
     * @const
     */
    "IRR": "IRR",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "CDF"
     * @const
     */
    "CDF": "CDF",

    /**
     * value: "XAF"
     * @const
     */
    "XAF": "XAF",

    /**
     * value: "HTG"
     * @const
     */
    "HTG": "HTG",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "HRK"
     * @const
     */
    "HRK": "HRK",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "AMD"
     * @const
     */
    "AMD": "AMD",

    /**
     * value: "ISK"
     * @const
     */
    "ISK": "ISK",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "KHR"
     * @const
     */
    "KHR": "KHR",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KGS"
     * @const
     */
    "KGS": "KGS",

    /**
     * value: "LAK"
     * @const
     */
    "LAK": "LAK",

    /**
     * value: "MKD"
     * @const
     */
    "MKD": "MKD",

    /**
     * value: "MNT"
     * @const
     */
    "MNT": "MNT",

    /**
     * value: "BND"
     * @const
     */
    "BND": "BND",

    /**
     * value: "MMK"
     * @const
     */
    "MMK": "MMK",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NPR"
     * @const
     */
    "NPR": "NPR",

    /**
     * value: "PKR"
     * @const
     */
    "PKR": "PKR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "AFN"
     * @const
     */
    "AFN": "AFN",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RWF"
     * @const
     */
    "RWF": "RWF",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "LKR"
     * @const
     */
    "LKR": "LKR",

    /**
     * value: "SOS"
     * @const
     */
    "SOS": "SOS",

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "RSD"
     * @const
     */
    "RSD": "RSD",

    /**
     * value: "KES"
     * @const
     */
    "KES": "KES",

    /**
     * value: "TJS"
     * @const
     */
    "TJS": "TJS",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "ERN"
     * @const
     */
    "ERN": "ERN",

    /**
     * value: "TMT"
     * @const
     */
    "TMT": "TMT",

    /**
     * value: "BWP"
     * @const
     */
    "BWP": "BWP",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "UZS"
     * @const
     */
    "UZS": "UZS",

    /**
     * value: "VND"
     * @const
     */
    "VND": "VND",

    /**
     * value: "MOP"
     * @const
     */
    "MOP": "MOP",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "BMD"
     * @const
     */
    "BMD": "BMD"
};



export default Payout;

