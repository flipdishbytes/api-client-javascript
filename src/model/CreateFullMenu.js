/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateFullMenuSection', 'model/CreateMenuTaxRate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CreateFullMenuSection'), require('./CreateMenuTaxRate'));
  } else {
    // Browser globals (root is window)
    if (!root.FlipdishOpenApiV10) {
      root.FlipdishOpenApiV10 = {};
    }
    root.FlipdishOpenApiV10.CreateFullMenu = factory(root.FlipdishOpenApiV10.ApiClient, root.FlipdishOpenApiV10.CreateFullMenuSection, root.FlipdishOpenApiV10.CreateMenuTaxRate);
  }
}(this, function(ApiClient, CreateFullMenuSection, CreateMenuTaxRate) {
  'use strict';

  /**
   * The CreateFullMenu model module.
   * @module model/CreateFullMenu
   * @version v1.0
   */

  /**
   * Constructs a new <code>CreateFullMenu</code>.
   * Create menu object
   * @alias module:model/CreateFullMenu
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CreateFullMenu</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateFullMenu} obj Optional instance to populate.
   * @return {module:model/CreateFullMenu} The populated <code>CreateFullMenu</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Name'))
        obj.name = ApiClient.convertToType(data['Name'], 'String');
      if (data.hasOwnProperty('ImageUrl'))
        obj.imageUrl = ApiClient.convertToType(data['ImageUrl'], 'String');
      if (data.hasOwnProperty('MenuSections'))
        obj.menuSections = ApiClient.convertToType(data['MenuSections'], [CreateFullMenuSection]);
      if (data.hasOwnProperty('TaxRates'))
        obj.taxRates = ApiClient.convertToType(data['TaxRates'], [CreateMenuTaxRate]);
      if (data.hasOwnProperty('DisplaySectionLinks'))
        obj.displaySectionLinks = ApiClient.convertToType(data['DisplaySectionLinks'], 'Boolean');
      if (data.hasOwnProperty('MenuSectionBehaviour'))
        obj.menuSectionBehaviour = ApiClient.convertToType(data['MenuSectionBehaviour'], 'String');
      if (data.hasOwnProperty('TaxType'))
        obj.taxType = ApiClient.convertToType(data['TaxType'], 'String');
    }
    return obj;
  }

  /**
   * Name of Menu, only shown in portal
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Image url
   * @member {String} imageUrl
   */
  exports.prototype.imageUrl = undefined;

  /**
   * Menu sections (startes, main etc)
   * @member {Array.<module:model/CreateFullMenuSection>} menuSections
   */
  exports.prototype.menuSections = undefined;

  /**
   * Menu tax rates
   * @member {Array.<module:model/CreateMenuTaxRate>} taxRates
   */
  exports.prototype.taxRates = undefined;

  /**
   * Display menu section link on UI
   * @member {Boolean} displaySectionLinks
   */
  exports.prototype.displaySectionLinks = undefined;

  /**
   * Menu section behaviour
   * @member {module:model/CreateFullMenu.MenuSectionBehaviourEnum} menuSectionBehaviour
   */
  exports.prototype.menuSectionBehaviour = undefined;

  /**
   * Tax type
   * @member {module:model/CreateFullMenu.TaxTypeEnum} taxType
   */
  exports.prototype.taxType = undefined;



  /**
   * Allowed values for the <code>menuSectionBehaviour</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MenuSectionBehaviourEnum = {
    /**
     * value: "ExpandSingle"
     * @const
     */
    expandSingle: "ExpandSingle",

    /**
     * value: "ExpandMultiple"
     * @const
     */
    expandMultiple: "ExpandMultiple"
  };


  /**
   * Allowed values for the <code>taxType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TaxTypeEnum = {
    /**
     * value: "IncludedInBasePrice"
     * @const
     */
    includedInBasePrice: "IncludedInBasePrice",

    /**
     * value: "ExcludedFromBasePrice"
     * @const
     */
    excludedFromBasePrice: "ExcludedFromBasePrice"
  };

  return exports;

}));
