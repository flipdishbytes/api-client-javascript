/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFullMenuSection from './CreateFullMenuSection';
import CreateMenuTaxRate from './CreateMenuTaxRate';

/**
 * The CreateFullMenu model module.
 * @module model/CreateFullMenu
 * @version 1.0.0
 */
class CreateFullMenu {
    /**
     * Constructs a new <code>CreateFullMenu</code>.
     * Create menu object
     * @alias module:model/CreateFullMenu
     */
    constructor() { 
        
        CreateFullMenu.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateFullMenu</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFullMenu} obj Optional instance to populate.
     * @return {module:model/CreateFullMenu} The populated <code>CreateFullMenu</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFullMenu();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('MenuSections')) {
                obj['MenuSections'] = ApiClient.convertToType(data['MenuSections'], [CreateFullMenuSection]);
            }
            if (data.hasOwnProperty('TaxRates')) {
                obj['TaxRates'] = ApiClient.convertToType(data['TaxRates'], [CreateMenuTaxRate]);
            }
            if (data.hasOwnProperty('DisplaySectionLinks')) {
                obj['DisplaySectionLinks'] = ApiClient.convertToType(data['DisplaySectionLinks'], 'Boolean');
            }
            if (data.hasOwnProperty('MenuSectionBehaviour')) {
                obj['MenuSectionBehaviour'] = ApiClient.convertToType(data['MenuSectionBehaviour'], 'String');
            }
            if (data.hasOwnProperty('TaxType')) {
                obj['TaxType'] = ApiClient.convertToType(data['TaxType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of Menu, only shown in portal
 * @member {String} Name
 */
CreateFullMenu.prototype['Name'] = undefined;

/**
 * Image url
 * @member {String} ImageUrl
 */
CreateFullMenu.prototype['ImageUrl'] = undefined;

/**
 * Menu sections (starters, main etc)
 * @member {Array.<module:model/CreateFullMenuSection>} MenuSections
 */
CreateFullMenu.prototype['MenuSections'] = undefined;

/**
 * Menu tax rates
 * @member {Array.<module:model/CreateMenuTaxRate>} TaxRates
 */
CreateFullMenu.prototype['TaxRates'] = undefined;

/**
 * Display menu section link on UI
 * @member {Boolean} DisplaySectionLinks
 */
CreateFullMenu.prototype['DisplaySectionLinks'] = undefined;

/**
 * Menu section behaviour
 * @member {module:model/CreateFullMenu.MenuSectionBehaviourEnum} MenuSectionBehaviour
 */
CreateFullMenu.prototype['MenuSectionBehaviour'] = undefined;

/**
 * Tax type
 * @member {module:model/CreateFullMenu.TaxTypeEnum} TaxType
 */
CreateFullMenu.prototype['TaxType'] = undefined;





/**
 * Allowed values for the <code>MenuSectionBehaviour</code> property.
 * @enum {String}
 * @readonly
 */
CreateFullMenu['MenuSectionBehaviourEnum'] = {

    /**
     * value: "ExpandSingle"
     * @const
     */
    "ExpandSingle": "ExpandSingle",

    /**
     * value: "ExpandMultiple"
     * @const
     */
    "ExpandMultiple": "ExpandMultiple"
};


/**
 * Allowed values for the <code>TaxType</code> property.
 * @enum {String}
 * @readonly
 */
CreateFullMenu['TaxTypeEnum'] = {

    /**
     * value: "IncludedInBasePrice"
     * @const
     */
    "IncludedInBasePrice": "IncludedInBasePrice",

    /**
     * value: "ExcludedFromBasePrice"
     * @const
     */
    "ExcludedFromBasePrice": "ExcludedFromBasePrice"
};



export default CreateFullMenu;

