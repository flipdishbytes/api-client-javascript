/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoicePeriod from './InvoicePeriod';

/**
 * The InvoiceItem model module.
 * @module model/InvoiceItem
 * @version 1.0.0
 */
class InvoiceItem {
    /**
     * Constructs a new <code>InvoiceItem</code>.
     * Invoice Item
     * @alias module:model/InvoiceItem
     * @param Description {String} Description
     * @param Quantity {Number} Quantity
     * @param UnitAmountExcludingTax {Number} Unit Amount Excluding Tax
     * @param Tax {Number} Tax
     * @param Amount {Number} Amount
     * @param Period {module:model/InvoicePeriod} 
     */
    constructor(Description, Quantity, UnitAmountExcludingTax, Tax, Amount, Period) { 
        
        InvoiceItem.initialize(this, Description, Quantity, UnitAmountExcludingTax, Tax, Amount, Period);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, Description, Quantity, UnitAmountExcludingTax, Tax, Amount, Period) { 
        obj['Description'] = Description;
        obj['Quantity'] = Quantity;
        obj['UnitAmountExcludingTax'] = UnitAmountExcludingTax;
        obj['Tax'] = Tax;
        obj['Amount'] = Amount;
        obj['Period'] = Period;
    }

    /**
     * Constructs a <code>InvoiceItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceItem} obj Optional instance to populate.
     * @return {module:model/InvoiceItem} The populated <code>InvoiceItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceItem();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('UnitAmountExcludingTax')) {
                obj['UnitAmountExcludingTax'] = ApiClient.convertToType(data['UnitAmountExcludingTax'], 'Number');
            }
            if (data.hasOwnProperty('Tax')) {
                obj['Tax'] = ApiClient.convertToType(data['Tax'], 'Number');
            }
            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('Period')) {
                obj['Period'] = InvoicePeriod.constructFromObject(data['Period']);
            }
        }
        return obj;
    }


}

/**
 * Description
 * @member {String} Description
 */
InvoiceItem.prototype['Description'] = undefined;

/**
 * Quantity
 * @member {Number} Quantity
 */
InvoiceItem.prototype['Quantity'] = undefined;

/**
 * Unit Amount Excluding Tax
 * @member {Number} UnitAmountExcludingTax
 */
InvoiceItem.prototype['UnitAmountExcludingTax'] = undefined;

/**
 * Tax
 * @member {Number} Tax
 */
InvoiceItem.prototype['Tax'] = undefined;

/**
 * Amount
 * @member {Number} Amount
 */
InvoiceItem.prototype['Amount'] = undefined;

/**
 * @member {module:model/InvoicePeriod} Period
 */
InvoiceItem.prototype['Period'] = undefined;






export default InvoiceItem;

