/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.StoreBase();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StoreBase', function() {
    it('should create an instance of StoreBase', function() {
      // uncomment below and update the code to test StoreBase
      //var instane = new Flipdish.StoreBase();
      //expect(instance).to.be.a(Flipdish.StoreBase);
    });

    it('should have the property PhoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property PhoneNumber
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property AlwaysAppearOpen (base name: "AlwaysAppearOpen")', function() {
      // uncomment below and update the code to test the property AlwaysAppearOpen
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property PreOrderEnabled (base name: "PreOrderEnabled")', function() {
      // uncomment below and update the code to test the property PreOrderEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property TakeOutEnabled (base name: "TakeOutEnabled")', function() {
      // uncomment below and update the code to test the property TakeOutEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property TableServiceEnabled (base name: "TableServiceEnabled")', function() {
      // uncomment below and update the code to test the property TableServiceEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property DineInEnabled (base name: "DineInEnabled")', function() {
      // uncomment below and update the code to test the property DineInEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property AllowPreOrdersAndTableService (base name: "AllowPreOrdersAndTableService")', function() {
      // uncomment below and update the code to test the property AllowPreOrdersAndTableService
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property PickupEnabled (base name: "PickupEnabled")', function() {
      // uncomment below and update the code to test the property PickupEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryEnabled (base name: "DeliveryEnabled")', function() {
      // uncomment below and update the code to test the property DeliveryEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property CardOrderDeliveryEnabled (base name: "CardOrderDeliveryEnabled")', function() {
      // uncomment below and update the code to test the property CardOrderDeliveryEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property CashOrdersDeliveryEnabled (base name: "CashOrdersDeliveryEnabled")', function() {
      // uncomment below and update the code to test the property CashOrdersDeliveryEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property CardOrdersPickupEnabled (base name: "CardOrdersPickupEnabled")', function() {
      // uncomment below and update the code to test the property CardOrdersPickupEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property CashOrdersPickupEnabled (base name: "CashOrdersPickupEnabled")', function() {
      // uncomment below and update the code to test the property CashOrdersPickupEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property TipsEnabled (base name: "TipsEnabled")', function() {
      // uncomment below and update the code to test the property TipsEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property AutomaticallyAcceptOrders (base name: "AutomaticallyAcceptOrders")', function() {
      // uncomment below and update the code to test the property AutomaticallyAcceptOrders
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property OpenForDelivery (base name: "OpenForDelivery")', function() {
      // uncomment below and update the code to test the property OpenForDelivery
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property OpenForPickup (base name: "OpenForPickup")', function() {
      // uncomment below and update the code to test the property OpenForPickup
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property MinimumPickupOrderAmount (base name: "MinimumPickupOrderAmount")', function() {
      // uncomment below and update the code to test the property MinimumPickupOrderAmount
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property RequireCustomerNameForPickup (base name: "RequireCustomerNameForPickup")', function() {
      // uncomment below and update the code to test the property RequireCustomerNameForPickup
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property GdprCustomerPhoneNumbers (base name: "GdprCustomerPhoneNumbers")', function() {
      // uncomment below and update the code to test the property GdprCustomerPhoneNumbers
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property RequireCustomerNameForDelivery (base name: "RequireCustomerNameForDelivery")', function() {
      // uncomment below and update the code to test the property RequireCustomerNameForDelivery
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property AllowChefNotes (base name: "AllowChefNotes")', function() {
      // uncomment below and update the code to test the property AllowChefNotes
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property EtaInPickupConfirmationSmsEnabled (base name: "EtaInPickupConfirmationSmsEnabled")', function() {
      // uncomment below and update the code to test the property EtaInPickupConfirmationSmsEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property EtaInDeliveryConfirmationSmsEnabled (base name: "EtaInDeliveryConfirmationSmsEnabled")', function() {
      // uncomment below and update the code to test the property EtaInDeliveryConfirmationSmsEnabled
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property IsArchived (base name: "IsArchived")', function() {
      // uncomment below and update the code to test the property IsArchived
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property IsPublished (base name: "IsPublished")', function() {
      // uncomment below and update the code to test the property IsPublished
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property Name (base name: "Name")', function() {
      // uncomment below and update the code to test the property Name
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property EmailAddress (base name: "EmailAddress")', function() {
      // uncomment below and update the code to test the property EmailAddress
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property StaffLanguage (base name: "StaffLanguage")', function() {
      // uncomment below and update the code to test the property StaffLanguage
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property SalesChannelTypes (base name: "SalesChannelTypes")', function() {
      // uncomment below and update the code to test the property SalesChannelTypes
      //var instance = new Flipdish.StoreBase();
      //expect(instance).to.be();
    });

  });

}));
