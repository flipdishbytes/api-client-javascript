/**
 * Flipdish Open API v1.0
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FlipdishOpenApiV10);
  }
}(this, function(expect, FlipdishOpenApiV10) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FlipdishOpenApiV10.StoreBase();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StoreBase', function() {
    it('should create an instance of StoreBase', function() {
      // uncomment below and update the code to test StoreBase
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be.a(FlipdishOpenApiV10.StoreBase);
    });

    it('should have the property phoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property alwaysAppearOpen (base name: "AlwaysAppearOpen")', function() {
      // uncomment below and update the code to test the property alwaysAppearOpen
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property preOrderEnabled (base name: "PreOrderEnabled")', function() {
      // uncomment below and update the code to test the property preOrderEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property takeOutEnabled (base name: "TakeOutEnabled")', function() {
      // uncomment below and update the code to test the property takeOutEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property tableServiceEnabled (base name: "TableServiceEnabled")', function() {
      // uncomment below and update the code to test the property tableServiceEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property dineInEnabled (base name: "DineInEnabled")', function() {
      // uncomment below and update the code to test the property dineInEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property allowPreOrdersAndTableService (base name: "AllowPreOrdersAndTableService")', function() {
      // uncomment below and update the code to test the property allowPreOrdersAndTableService
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property pickupEnabled (base name: "PickupEnabled")', function() {
      // uncomment below and update the code to test the property pickupEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property deliveryEnabled (base name: "DeliveryEnabled")', function() {
      // uncomment below and update the code to test the property deliveryEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property cardOrderDeliveryEnabled (base name: "CardOrderDeliveryEnabled")', function() {
      // uncomment below and update the code to test the property cardOrderDeliveryEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property cashOrdersDeliveryEnabled (base name: "CashOrdersDeliveryEnabled")', function() {
      // uncomment below and update the code to test the property cashOrdersDeliveryEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property cardOrdersPickupEnabled (base name: "CardOrdersPickupEnabled")', function() {
      // uncomment below and update the code to test the property cardOrdersPickupEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property cashOrdersPickupEnabled (base name: "CashOrdersPickupEnabled")', function() {
      // uncomment below and update the code to test the property cashOrdersPickupEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property tipsEnabled (base name: "TipsEnabled")', function() {
      // uncomment below and update the code to test the property tipsEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property automaticallyAcceptOrders (base name: "AutomaticallyAcceptOrders")', function() {
      // uncomment below and update the code to test the property automaticallyAcceptOrders
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property openForDelivery (base name: "OpenForDelivery")', function() {
      // uncomment below and update the code to test the property openForDelivery
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property openForPickup (base name: "OpenForPickup")', function() {
      // uncomment below and update the code to test the property openForPickup
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property minimumPickupOrderAmount (base name: "MinimumPickupOrderAmount")', function() {
      // uncomment below and update the code to test the property minimumPickupOrderAmount
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property requireCustomerNameForPickup (base name: "RequireCustomerNameForPickup")', function() {
      // uncomment below and update the code to test the property requireCustomerNameForPickup
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property gdprCustomerPhoneNumbers (base name: "GdprCustomerPhoneNumbers")', function() {
      // uncomment below and update the code to test the property gdprCustomerPhoneNumbers
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property requireCustomerNameForDelivery (base name: "RequireCustomerNameForDelivery")', function() {
      // uncomment below and update the code to test the property requireCustomerNameForDelivery
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property allowChefNotes (base name: "AllowChefNotes")', function() {
      // uncomment below and update the code to test the property allowChefNotes
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property etaInPickupConfirmationSmsEnabled (base name: "EtaInPickupConfirmationSmsEnabled")', function() {
      // uncomment below and update the code to test the property etaInPickupConfirmationSmsEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property etaInDeliveryConfirmationSmsEnabled (base name: "EtaInDeliveryConfirmationSmsEnabled")', function() {
      // uncomment below and update the code to test the property etaInDeliveryConfirmationSmsEnabled
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property isArchived (base name: "IsArchived")', function() {
      // uncomment below and update the code to test the property isArchived
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property isPublished (base name: "IsPublished")', function() {
      // uncomment below and update the code to test the property isPublished
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "EmailAddress")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

    it('should have the property staffLanguage (base name: "StaffLanguage")', function() {
      // uncomment below and update the code to test the property staffLanguage
      //var instane = new FlipdishOpenApiV10.StoreBase();
      //expect(instance).to.be();
    });

  });

}));
