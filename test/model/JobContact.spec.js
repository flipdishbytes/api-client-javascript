/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('JobContact', function() {
      beforeEach(function() {
        instance = new Flipdish.JobContact();
      });

      it('should create an instance of JobContact', function() {
        // TODO: update the code to test JobContact
        expect(instance).to.be.a(Flipdish.JobContact);
      });

      it('should have the property Firstname (base name: "Firstname")', function() {
        // TODO: update the code to test the property Firstname
        expect(instance).to.have.property('Firstname');
        // expect(instance.Firstname).to.be(expectedValueLiteral);
      });

      it('should have the property Lastname (base name: "Lastname")', function() {
        // TODO: update the code to test the property Lastname
        expect(instance).to.have.property('Lastname');
        // expect(instance.Lastname).to.be(expectedValueLiteral);
      });

      it('should have the property Phone (base name: "Phone")', function() {
        // TODO: update the code to test the property Phone
        expect(instance).to.have.property('Phone');
        // expect(instance.Phone).to.be(expectedValueLiteral);
      });

      it('should have the property Email (base name: "Email")', function() {
        // TODO: update the code to test the property Email
        expect(instance).to.have.property('Email');
        // expect(instance.Email).to.be(expectedValueLiteral);
      });

      it('should have the property Company (base name: "Company")', function() {
        // TODO: update the code to test the property Company
        expect(instance).to.have.property('Company');
        // expect(instance.Company).to.be(expectedValueLiteral);
      });

      it('should have the property CompanyName (base name: "CompanyName")', function() {
        // TODO: update the code to test the property CompanyName
        expect(instance).to.have.property('CompanyName');
        // expect(instance.CompanyName).to.be(expectedValueLiteral);
      });

    });
  });

}));
