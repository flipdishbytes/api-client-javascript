/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.MenuSectionItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MenuSectionItem', function() {
    it('should create an instance of MenuSectionItem', function() {
      // uncomment below and update the code to test MenuSectionItem
      //var instane = new Flipdish.MenuSectionItem();
      //expect(instance).to.be.a(Flipdish.MenuSectionItem);
    });

    it('should have the property ActualPrice (base name: "ActualPrice")', function() {
      // uncomment below and update the code to test the property ActualPrice
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSets (base name: "MenuItemOptionSets")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSets
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property DailySpecialHours (base name: "DailySpecialHours")', function() {
      // uncomment below and update the code to test the property DailySpecialHours
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property PublicId (base name: "PublicId")', function() {
      // uncomment below and update the code to test the property PublicId
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property TaxRateName (base name: "TaxRateName")', function() {
      // uncomment below and update the code to test the property TaxRateName
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property TaxRateId (base name: "TaxRateId")', function() {
      // uncomment below and update the code to test the property TaxRateId
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property TaxValue (base name: "TaxValue")', function() {
      // uncomment below and update the code to test the property TaxValue
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property ExcludeFromVoucherDiscounting (base name: "ExcludeFromVoucherDiscounting")', function() {
      // uncomment below and update the code to test the property ExcludeFromVoucherDiscounting
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property Metadata (base name: "Metadata")', function() {
      // uncomment below and update the code to test the property Metadata
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property CatalogItemId (base name: "CatalogItemId")', function() {
      // uncomment below and update the code to test the property CatalogItemId
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property Name (base name: "Name")', function() {
      // uncomment below and update the code to test the property Name
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property Description (base name: "Description")', function() {
      // uncomment below and update the code to test the property Description
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property SpicinessRating (base name: "SpicinessRating")', function() {
      // uncomment below and update the code to test the property SpicinessRating
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property Price (base name: "Price")', function() {
      // uncomment below and update the code to test the property Price
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property DepositReturnFee (base name: "DepositReturnFee")', function() {
      // uncomment below and update the code to test the property DepositReturnFee
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property DisplayOrder (base name: "DisplayOrder")', function() {
      // uncomment below and update the code to test the property DisplayOrder
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property Alcohol (base name: "Alcohol")', function() {
      // uncomment below and update the code to test the property Alcohol
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property IsAvailable (base name: "IsAvailable")', function() {
      // uncomment below and update the code to test the property IsAvailable
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property CellLayoutType (base name: "CellLayoutType")', function() {
      // uncomment below and update the code to test the property CellLayoutType
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property DisableVouchers (base name: "DisableVouchers")', function() {
      // uncomment below and update the code to test the property DisableVouchers
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property ImageName (base name: "ImageName")', function() {
      // uncomment below and update the code to test the property ImageName
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property ImageUrl (base name: "ImageUrl")', function() {
      // uncomment below and update the code to test the property ImageUrl
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemId (base name: "MenuItemId")', function() {
      // uncomment below and update the code to test the property MenuItemId
      //var instance = new Flipdish.MenuSectionItem();
      //expect(instance).to.be();
    });

  });

}));
