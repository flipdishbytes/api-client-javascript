/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.EventSearchResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventSearchResult', function() {
    it('should create an instance of EventSearchResult', function() {
      // uncomment below and update the code to test EventSearchResult
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be.a(Flipdish.EventSearchResult);
    });

    it('should have the property AppCreatedEvent (base name: "AppCreatedEvent")', function() {
      // uncomment below and update the code to test the property AppCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AppUpdatedEvent (base name: "AppUpdatedEvent")', function() {
      // uncomment below and update the code to test the property AppUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AnalyticsClientEvent (base name: "AnalyticsClientEvent")', function() {
      // uncomment below and update the code to test the property AnalyticsClientEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderAcceptedEvent (base name: "OrderAcceptedEvent")', function() {
      // uncomment below and update the code to test the property OrderAcceptedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderDispatchedEvent (base name: "OrderDispatchedEvent")', function() {
      // uncomment below and update the code to test the property OrderDispatchedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderCustomerTrackingCreatedEvent (base name: "OrderCustomerTrackingCreatedEvent")', function() {
      // uncomment below and update the code to test the property OrderCustomerTrackingCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderDeliveryTrackingStatusUpdatedEvent (base name: "OrderDeliveryTrackingStatusUpdatedEvent")', function() {
      // uncomment below and update the code to test the property OrderDeliveryTrackingStatusUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderBatchPublishedEvent (base name: "OrderBatchPublishedEvent")', function() {
      // uncomment below and update the code to test the property OrderBatchPublishedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderCreatedEvent (base name: "OrderCreatedEvent")', function() {
      // uncomment below and update the code to test the property OrderCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderRatingUpdatedEvent (base name: "OrderRatingUpdatedEvent")', function() {
      // uncomment below and update the code to test the property OrderRatingUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderRefundedEvent (base name: "OrderRefundedEvent")', function() {
      // uncomment below and update the code to test the property OrderRefundedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderRejectedEvent (base name: "OrderRejectedEvent")', function() {
      // uncomment below and update the code to test the property OrderRejectedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderTipUpdatedEvent (base name: "OrderTipUpdatedEvent")', function() {
      // uncomment below and update the code to test the property OrderTipUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderTerminalNotifications (base name: "OrderTerminalNotifications")', function() {
      // uncomment below and update the code to test the property OrderTerminalNotifications
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreCreatedEvent (base name: "StoreCreatedEvent")', function() {
      // uncomment below and update the code to test the property StoreCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreDeletedEvent (base name: "StoreDeletedEvent")', function() {
      // uncomment below and update the code to test the property StoreDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreAddressUpdatedEvent (base name: "StoreAddressUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreAddressUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreKioskSettingUpdatedEvent (base name: "StoreKioskSettingUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreKioskSettingUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryZoneCreatedEvent (base name: "DeliveryZoneCreatedEvent")', function() {
      // uncomment below and update the code to test the property DeliveryZoneCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryZoneUpdatedEvent (base name: "DeliveryZoneUpdatedEvent")', function() {
      // uncomment below and update the code to test the property DeliveryZoneUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryZoneDeletedEvent (base name: "DeliveryZoneDeletedEvent")', function() {
      // uncomment below and update the code to test the property DeliveryZoneDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreOpeningHoursUpdatedEvent (base name: "StoreOpeningHoursUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreOpeningHoursUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreMenuAssignedEvent (base name: "StoreMenuAssignedEvent")', function() {
      // uncomment below and update the code to test the property StoreMenuAssignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreBusinessHoursOverrideCreatedEvent (base name: "StoreBusinessHoursOverrideCreatedEvent")', function() {
      // uncomment below and update the code to test the property StoreBusinessHoursOverrideCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreBusinessHoursOverrideDeletedEvent (base name: "StoreBusinessHoursOverrideDeletedEvent")', function() {
      // uncomment below and update the code to test the property StoreBusinessHoursOverrideDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreArchivedEvent (base name: "StoreArchivedEvent")', function() {
      // uncomment below and update the code to test the property StoreArchivedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreUnarchivedEvent (base name: "StoreUnarchivedEvent")', function() {
      // uncomment below and update the code to test the property StoreUnarchivedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StorePublishedEvent (base name: "StorePublishedEvent")', function() {
      // uncomment below and update the code to test the property StorePublishedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreUnpublishedEvent (base name: "StoreUnpublishedEvent")', function() {
      // uncomment below and update the code to test the property StoreUnpublishedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreUpdatedEvent (base name: "StoreUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StorePreOrderConfigUpdatedEvent (base name: "StorePreOrderConfigUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StorePreOrderConfigUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreLogoCreatedEvent (base name: "StoreLogoCreatedEvent")', function() {
      // uncomment below and update the code to test the property StoreLogoCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreLogoUpdatedEvent (base name: "StoreLogoUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreLogoUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreLogoDeletedEvent (base name: "StoreLogoDeletedEvent")', function() {
      // uncomment below and update the code to test the property StoreLogoDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuCreatedEvent (base name: "MenuCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuAsyncCreationCompletedEvent (base name: "MenuAsyncCreationCompletedEvent")', function() {
      // uncomment below and update the code to test the property MenuAsyncCreationCompletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuUpdatedEvent (base name: "MenuUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MenuUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuUploadedEvent (base name: "MenuUploadedEvent")', function() {
      // uncomment below and update the code to test the property MenuUploadedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuBulkEditEvent (base name: "MenuBulkEditEvent")', function() {
      // uncomment below and update the code to test the property MenuBulkEditEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionCreatedEvent (base name: "MenuSectionCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionUpdatedEvent (base name: "MenuSectionUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionDeletedEvent (base name: "MenuSectionDeletedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionItemCreatedEvent (base name: "MenuSectionItemCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionItemCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionItemUpdatedEvent (base name: "MenuSectionItemUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionItemUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuSectionItemDeletedEvent (base name: "MenuSectionItemDeletedEvent")', function() {
      // uncomment below and update the code to test the property MenuSectionItemDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetCreatedEvent (base name: "MenuItemOptionSetCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetUpdatedEvent (base name: "MenuItemOptionSetUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetDeletedEvent (base name: "MenuItemOptionSetDeletedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetItemCreatedEvent (base name: "MenuItemOptionSetItemCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetItemCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetItemUpdatedEvent (base name: "MenuItemOptionSetItemUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetItemUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuItemOptionSetItemDeletedEvent (base name: "MenuItemOptionSetItemDeletedEvent")', function() {
      // uncomment below and update the code to test the property MenuItemOptionSetItemDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MenuCheckpointCreatedEvent (base name: "MenuCheckpointCreatedEvent")', function() {
      // uncomment below and update the code to test the property MenuCheckpointCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreGroupCreatedEvent (base name: "StoreGroupCreatedEvent")', function() {
      // uncomment below and update the code to test the property StoreGroupCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreGroupUpdatedEvent (base name: "StoreGroupUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreGroupUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreGroupDeletedEvent (base name: "StoreGroupDeletedEvent")', function() {
      // uncomment below and update the code to test the property StoreGroupDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CustomerCreatedEvent (base name: "CustomerCreatedEvent")', function() {
      // uncomment below and update the code to test the property CustomerCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CustomerUpdatedEvent (base name: "CustomerUpdatedEvent")', function() {
      // uncomment below and update the code to test the property CustomerUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CustomerConsentUpdatedEvent (base name: "CustomerConsentUpdatedEvent")', function() {
      // uncomment below and update the code to test the property CustomerConsentUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property WebhookSubscriptionCreatedEvent (base name: "WebhookSubscriptionCreatedEvent")', function() {
      // uncomment below and update the code to test the property WebhookSubscriptionCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property WebhookSubscriptionUpdatedEvent (base name: "WebhookSubscriptionUpdatedEvent")', function() {
      // uncomment below and update the code to test the property WebhookSubscriptionUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property WebhookSubscriptionDeletedEvent (base name: "WebhookSubscriptionDeletedEvent")', function() {
      // uncomment below and update the code to test the property WebhookSubscriptionDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PrinterTurnedOnEvent (base name: "PrinterTurnedOnEvent")', function() {
      // uncomment below and update the code to test the property PrinterTurnedOnEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PrinterTurnedOffEvent (base name: "PrinterTurnedOffEvent")', function() {
      // uncomment below and update the code to test the property PrinterTurnedOffEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PrinterAssignedToStoreEvent (base name: "PrinterAssignedToStoreEvent")', function() {
      // uncomment below and update the code to test the property PrinterAssignedToStoreEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PrinterUnassignedFromStoreEvent (base name: "PrinterUnassignedFromStoreEvent")', function() {
      // uncomment below and update the code to test the property PrinterUnassignedFromStoreEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PhoneCallStartedEvent (base name: "PhoneCallStartedEvent")', function() {
      // uncomment below and update the code to test the property PhoneCallStartedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PhoneCallEndedEvent (base name: "PhoneCallEndedEvent")', function() {
      // uncomment below and update the code to test the property PhoneCallEndedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property TelephonyConfigUpdatedEvent (base name: "TelephonyConfigUpdatedEvent")', function() {
      // uncomment below and update the code to test the property TelephonyConfigUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property ChannelStoresUpdatedEvent (base name: "ChannelStoresUpdatedEvent")', function() {
      // uncomment below and update the code to test the property ChannelStoresUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LoyaltyCampaignCreatedEvent (base name: "LoyaltyCampaignCreatedEvent")', function() {
      // uncomment below and update the code to test the property LoyaltyCampaignCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LoyaltyCampaignDeletedEvent (base name: "LoyaltyCampaignDeletedEvent")', function() {
      // uncomment below and update the code to test the property LoyaltyCampaignDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LoyaltyCampaignUpdatedEvent (base name: "LoyaltyCampaignUpdatedEvent")', function() {
      // uncomment below and update the code to test the property LoyaltyCampaignUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property RetentionCampaignCreatedEvent (base name: "RetentionCampaignCreatedEvent")', function() {
      // uncomment below and update the code to test the property RetentionCampaignCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property RetentionCampaignDeletedEvent (base name: "RetentionCampaignDeletedEvent")', function() {
      // uncomment below and update the code to test the property RetentionCampaignDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property RetentionCampaignUpdatedEvent (base name: "RetentionCampaignUpdatedEvent")', function() {
      // uncomment below and update the code to test the property RetentionCampaignUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property SmsReceivedEvent (base name: "SmsReceivedEvent")', function() {
      // uncomment below and update the code to test the property SmsReceivedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserLoginEvent (base name: "UserLoginEvent")', function() {
      // uncomment below and update the code to test the property UserLoginEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserCreatedEvent (base name: "UserCreatedEvent")', function() {
      // uncomment below and update the code to test the property UserCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserUpdatedEvent (base name: "UserUpdatedEvent")', function() {
      // uncomment below and update the code to test the property UserUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserDeletedEvent (base name: "UserDeletedEvent")', function() {
      // uncomment below and update the code to test the property UserDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserCreatedPasswordEvent (base name: "UserCreatedPasswordEvent")', function() {
      // uncomment below and update the code to test the property UserCreatedPasswordEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property UserAnsweredSignupQuestionsEvent (base name: "UserAnsweredSignupQuestionsEvent")', function() {
      // uncomment below and update the code to test the property UserAnsweredSignupQuestionsEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property VoucherCreatedEvent (base name: "VoucherCreatedEvent")', function() {
      // uncomment below and update the code to test the property VoucherCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property VoucherUpdatedEvent (base name: "VoucherUpdatedEvent")', function() {
      // uncomment below and update the code to test the property VoucherUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property VoucherDeletedEvent (base name: "VoucherDeletedEvent")', function() {
      // uncomment below and update the code to test the property VoucherDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property TeammateInviteSentEvent (base name: "TeammateInviteSentEvent")', function() {
      // uncomment below and update the code to test the property TeammateInviteSentEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property TeammateInviteAcceptedEvent (base name: "TeammateInviteAcceptedEvent")', function() {
      // uncomment below and update the code to test the property TeammateInviteAcceptedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property TeammateUpdatedEvent (base name: "TeammateUpdatedEvent")', function() {
      // uncomment below and update the code to test the property TeammateUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property TeammateDeletedEvent (base name: "TeammateDeletedEvent")', function() {
      // uncomment below and update the code to test the property TeammateDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property BankAccountCreatedEvent (base name: "BankAccountCreatedEvent")', function() {
      // uncomment below and update the code to test the property BankAccountCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property BankAccountUpdatedEvent (base name: "BankAccountUpdatedEvent")', function() {
      // uncomment below and update the code to test the property BankAccountUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property BankAccountDeletedEvent (base name: "BankAccountDeletedEvent")', function() {
      // uncomment below and update the code to test the property BankAccountDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property BankAccountAssignedEvent (base name: "BankAccountAssignedEvent")', function() {
      // uncomment below and update the code to test the property BankAccountAssignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraAssignedEvent (base name: "HydraAssignedEvent")', function() {
      // uncomment below and update the code to test the property HydraAssignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraRequestResetEvent (base name: "HydraRequestResetEvent")', function() {
      // uncomment below and update the code to test the property HydraRequestResetEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraStoreAssignedEvent (base name: "HydraStoreAssignedEvent")', function() {
      // uncomment below and update the code to test the property HydraStoreAssignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraStoreUnassignedEvent (base name: "HydraStoreUnassignedEvent")', function() {
      // uncomment below and update the code to test the property HydraStoreUnassignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraSettingChangedEvent (base name: "HydraSettingChangedEvent")', function() {
      // uncomment below and update the code to test the property HydraSettingChangedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraUnAssignedEvent (base name: "HydraUnAssignedEvent")', function() {
      // uncomment below and update the code to test the property HydraUnAssignedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property HydraConnectionStatusChangedEvent (base name: "HydraConnectionStatusChangedEvent")', function() {
      // uncomment below and update the code to test the property HydraConnectionStatusChangedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothPairingModeEvent (base name: "KioskBluetoothPairingModeEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothPairingModeEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothUnpairingModeEvent (base name: "KioskBluetoothUnpairingModeEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothUnpairingModeEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalUnpairedEvent (base name: "KioskBluetoothTerminalUnpairedEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalUnpairedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskTerminalActionStateChangedEvent (base name: "KioskTerminalActionStateChangedEvent")', function() {
      // uncomment below and update the code to test the property KioskTerminalActionStateChangedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalUpdatedEvent (base name: "KioskBluetoothTerminalUpdatedEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalInitiateUpdateCheckEvent (base name: "KioskBluetoothTerminalInitiateUpdateCheckEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalInitiateUpdateCheckEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothInstallUpdateInitiateEvent (base name: "KioskBluetoothInstallUpdateInitiateEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothInstallUpdateInitiateEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalCancelUpdateEvent (base name: "KioskBluetoothTerminalCancelUpdateEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalCancelUpdateEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalFirmwareVersionStatusEvent (base name: "KioskBluetoothTerminalFirmwareVersionStatusEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalFirmwareVersionStatusEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property KioskBluetoothTerminalInstallationStatusEvent (base name: "KioskBluetoothTerminalInstallationStatusEvent")', function() {
      // uncomment below and update the code to test the property KioskBluetoothTerminalInstallationStatusEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PushNotificationScheduledEvent (base name: "PushNotificationScheduledEvent")', function() {
      // uncomment below and update the code to test the property PushNotificationScheduledEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PushNotificationSentEvent (base name: "PushNotificationSentEvent")', function() {
      // uncomment below and update the code to test the property PushNotificationSentEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property PushNotificationDeletedEvent (base name: "PushNotificationDeletedEvent")', function() {
      // uncomment below and update the code to test the property PushNotificationDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property DnsVerifiedEvent (base name: "DnsVerifiedEvent")', function() {
      // uncomment below and update the code to test the property DnsVerifiedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CertificateCreatedEvent (base name: "CertificateCreatedEvent")', function() {
      // uncomment below and update the code to test the property CertificateCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CertificateRenewedEvent (base name: "CertificateRenewedEvent")', function() {
      // uncomment below and update the code to test the property CertificateRenewedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property WebsiteVanityUrlUpdatedEvent (base name: "WebsiteVanityUrlUpdatedEvent")', function() {
      // uncomment below and update the code to test the property WebsiteVanityUrlUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property WebsiteUpdatedEvent (base name: "WebsiteUpdatedEvent")', function() {
      // uncomment below and update the code to test the property WebsiteUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderCapacityUpdatedEvent (base name: "OrderCapacityUpdatedEvent")', function() {
      // uncomment below and update the code to test the property OrderCapacityUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property ExternalStoreEvent (base name: "ExternalStoreEvent")', function() {
      // uncomment below and update the code to test the property ExternalStoreEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property OrderFulfillmentStatusUpdatedEvent (base name: "OrderFulfillmentStatusUpdatedEvent")', function() {
      // uncomment below and update the code to test the property OrderFulfillmentStatusUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AppStoreConfigCreatedEvent (base name: "AppStoreConfigCreatedEvent")', function() {
      // uncomment below and update the code to test the property AppStoreConfigCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AppStoreConfigUpdatedEvent (base name: "AppStoreConfigUpdatedEvent")', function() {
      // uncomment below and update the code to test the property AppStoreConfigUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AppStoreConfigDeletedEvent (base name: "AppStoreConfigDeletedEvent")', function() {
      // uncomment below and update the code to test the property AppStoreConfigDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property AppStoreSubscriptionChangeJobUpdatedEvent (base name: "AppStoreSubscriptionChangeJobUpdatedEvent")', function() {
      // uncomment below and update the code to test the property AppStoreSubscriptionChangeJobUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogItemCreatedEvent (base name: "CatalogItemCreatedEvent")', function() {
      // uncomment below and update the code to test the property CatalogItemCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogItemUpdatedEvent (base name: "CatalogItemUpdatedEvent")', function() {
      // uncomment below and update the code to test the property CatalogItemUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogItemArchivedEvent (base name: "CatalogItemArchivedEvent")', function() {
      // uncomment below and update the code to test the property CatalogItemArchivedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogGroupCreatedEvent (base name: "CatalogGroupCreatedEvent")', function() {
      // uncomment below and update the code to test the property CatalogGroupCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogGroupUpdatedEvent (base name: "CatalogGroupUpdatedEvent")', function() {
      // uncomment below and update the code to test the property CatalogGroupUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property CatalogGroupArchivedEvent (base name: "CatalogGroupArchivedEvent")', function() {
      // uncomment below and update the code to test the property CatalogGroupArchivedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreTipUpdatedEvent (base name: "StoreTipUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreTipUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LocationAreaCreatedEvent (base name: "LocationAreaCreatedEvent")', function() {
      // uncomment below and update the code to test the property LocationAreaCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LocationAreaUpdatedEvent (base name: "LocationAreaUpdatedEvent")', function() {
      // uncomment below and update the code to test the property LocationAreaUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LocationCreatedEvent (base name: "LocationCreatedEvent")', function() {
      // uncomment below and update the code to test the property LocationCreatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property LocationDeletedEvent (base name: "LocationDeletedEvent")', function() {
      // uncomment below and update the code to test the property LocationDeletedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreServiceChargeUpdatedEvent (base name: "StoreServiceChargeUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreServiceChargeUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MobileAppsSubmissionStatusUpdatedEvent (base name: "MobileAppsSubmissionStatusUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MobileAppsSubmissionStatusUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property MobileAppsSubmissionUpdatedEvent (base name: "MobileAppsSubmissionUpdatedEvent")', function() {
      // uncomment below and update the code to test the property MobileAppsSubmissionUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property StoreFeeConfigUpdatedEvent (base name: "StoreFeeConfigUpdatedEvent")', function() {
      // uncomment below and update the code to test the property StoreFeeConfigUpdatedEvent
      //var instance = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

  });

}));
