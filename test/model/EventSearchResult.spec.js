/**
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.EventSearchResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventSearchResult', function() {
    it('should create an instance of EventSearchResult', function() {
      // uncomment below and update the code to test EventSearchResult
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be.a(Flipdish.EventSearchResult);
    });

    it('should have the property orderAcceptedEvent (base name: "OrderAcceptedEvent")', function() {
      // uncomment below and update the code to test the property orderAcceptedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property orderCreatedEvent (base name: "OrderCreatedEvent")', function() {
      // uncomment below and update the code to test the property orderCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property orderRatingUpdatedEvent (base name: "OrderRatingUpdatedEvent")', function() {
      // uncomment below and update the code to test the property orderRatingUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property orderRefundedEvent (base name: "OrderRefundedEvent")', function() {
      // uncomment below and update the code to test the property orderRefundedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property orderRejectedEvent (base name: "OrderRejectedEvent")', function() {
      // uncomment below and update the code to test the property orderRejectedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property orderTipUpdatedEvent (base name: "OrderTipUpdatedEvent")', function() {
      // uncomment below and update the code to test the property orderTipUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property storeCreatedEvent (base name: "StoreCreatedEvent")', function() {
      // uncomment below and update the code to test the property storeCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property storeDeletedEvent (base name: "StoreDeletedEvent")', function() {
      // uncomment below and update the code to test the property storeDeletedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property storeDeliveryZoneUpdatedEvent (base name: "StoreDeliveryZoneUpdatedEvent")', function() {
      // uncomment below and update the code to test the property storeDeliveryZoneUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property storeOpeningHoursUpdatedEvent (base name: "StoreOpeningHoursUpdatedEvent")', function() {
      // uncomment below and update the code to test the property storeOpeningHoursUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property storeUpdatedEvent (base name: "StoreUpdatedEvent")', function() {
      // uncomment below and update the code to test the property storeUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property menuCreatedEvent (base name: "MenuCreatedEvent")', function() {
      // uncomment below and update the code to test the property menuCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property menuUpdatedEvent (base name: "MenuUpdatedEvent")', function() {
      // uncomment below and update the code to test the property menuUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property customerCreatedEvent (base name: "CustomerCreatedEvent")', function() {
      // uncomment below and update the code to test the property customerCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property customerUpdatedEvent (base name: "CustomerUpdatedEvent")', function() {
      // uncomment below and update the code to test the property customerUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property customerConsentUpdatedEvent (base name: "CustomerConsentUpdatedEvent")', function() {
      // uncomment below and update the code to test the property customerConsentUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property campaignCreatedEvent (base name: "CampaignCreatedEvent")', function() {
      // uncomment below and update the code to test the property campaignCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property webhookSubscriptionCreatedEvent (base name: "WebhookSubscriptionCreatedEvent")', function() {
      // uncomment below and update the code to test the property webhookSubscriptionCreatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property webhookSubscriptionUpdatedEvent (base name: "WebhookSubscriptionUpdatedEvent")', function() {
      // uncomment below and update the code to test the property webhookSubscriptionUpdatedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

    it('should have the property webhookSubscriptionDeletedEvent (base name: "WebhookSubscriptionDeletedEvent")', function() {
      // uncomment below and update the code to test the property webhookSubscriptionDeletedEvent
      //var instane = new Flipdish.EventSearchResult();
      //expect(instance).to.be();
    });

  });

}));
