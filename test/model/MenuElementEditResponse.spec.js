/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MenuElementEditResponse', function() {
      beforeEach(function() {
        instance = new Flipdish.MenuElementEditResponse();
      });

      it('should create an instance of MenuElementEditResponse', function() {
        // TODO: update the code to test MenuElementEditResponse
        expect(instance).to.be.a(Flipdish.MenuElementEditResponse);
      });

      it('should have the property SectionName (base name: "SectionName")', function() {
        // TODO: update the code to test the property SectionName
        expect(instance).to.have.property('SectionName');
        // expect(instance.SectionName).to.be(expectedValueLiteral);
      });

      it('should have the property ItemName (base name: "ItemName")', function() {
        // TODO: update the code to test the property ItemName
        expect(instance).to.have.property('ItemName');
        // expect(instance.ItemName).to.be(expectedValueLiteral);
      });

      it('should have the property OptionSetName (base name: "OptionSetName")', function() {
        // TODO: update the code to test the property OptionSetName
        expect(instance).to.have.property('OptionSetName');
        // expect(instance.OptionSetName).to.be(expectedValueLiteral);
      });

      it('should have the property OptionSetItemName (base name: "OptionSetItemName")', function() {
        // TODO: update the code to test the property OptionSetItemName
        expect(instance).to.have.property('OptionSetItemName');
        // expect(instance.OptionSetItemName).to.be(expectedValueLiteral);
      });

      it('should have the property MenuElementId (base name: "MenuElementId")', function() {
        // TODO: update the code to test the property MenuElementId
        expect(instance).to.have.property('MenuElementId');
        // expect(instance.MenuElementId).to.be(expectedValueLiteral);
      });

      it('should have the property MenuElementType (base name: "MenuElementType")', function() {
        // TODO: update the code to test the property MenuElementType
        expect(instance).to.have.property('MenuElementType');
        // expect(instance.MenuElementType).to.be(expectedValueLiteral);
      });

      it('should have the property ValidationCode (base name: "ValidationCode")', function() {
        // TODO: update the code to test the property ValidationCode
        expect(instance).to.have.property('ValidationCode');
        // expect(instance.ValidationCode).to.be(expectedValueLiteral);
      });

    });
  });

}));
