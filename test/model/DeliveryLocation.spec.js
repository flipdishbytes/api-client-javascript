/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DeliveryLocation', function() {
      beforeEach(function() {
        instance = new Flipdish.DeliveryLocation();
      });

      it('should create an instance of DeliveryLocation', function() {
        // TODO: update the code to test DeliveryLocation
        expect(instance).to.be.a(Flipdish.DeliveryLocation);
      });

      it('should have the property Coordinates (base name: "Coordinates")', function() {
        // TODO: update the code to test the property Coordinates
        expect(instance).to.have.property('Coordinates');
        // expect(instance.Coordinates).to.be(expectedValueLiteral);
      });

      it('should have the property Building (base name: "Building")', function() {
        // TODO: update the code to test the property Building
        expect(instance).to.have.property('Building');
        // expect(instance.Building).to.be(expectedValueLiteral);
      });

      it('should have the property Street (base name: "Street")', function() {
        // TODO: update the code to test the property Street
        expect(instance).to.have.property('Street');
        // expect(instance.Street).to.be(expectedValueLiteral);
      });

      it('should have the property Town (base name: "Town")', function() {
        // TODO: update the code to test the property Town
        expect(instance).to.have.property('Town');
        // expect(instance.Town).to.be(expectedValueLiteral);
      });

      it('should have the property PostCode (base name: "PostCode")', function() {
        // TODO: update the code to test the property PostCode
        expect(instance).to.have.property('PostCode');
        // expect(instance.PostCode).to.be(expectedValueLiteral);
      });

      it('should have the property DeliveryInstructions (base name: "DeliveryInstructions")', function() {
        // TODO: update the code to test the property DeliveryInstructions
        expect(instance).to.have.property('DeliveryInstructions');
        // expect(instance.DeliveryInstructions).to.be(expectedValueLiteral);
      });

      it('should have the property PrettyAddressString (base name: "PrettyAddressString")', function() {
        // TODO: update the code to test the property PrettyAddressString
        expect(instance).to.have.property('PrettyAddressString');
        // expect(instance.PrettyAddressString).to.be(expectedValueLiteral);
      });

    });
  });

}));
