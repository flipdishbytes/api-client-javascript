/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PayoutReport3DetailsFlipdishFees', function() {
    it('should create an instance of PayoutReport3DetailsFlipdishFees', function() {
      // uncomment below and update the code to test PayoutReport3DetailsFlipdishFees
      //var instane = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be.a(Flipdish.PayoutReport3DetailsFlipdishFees);
    });

    it('should have the property WebAndAppCash (base name: "WebAndAppCash")', function() {
      // uncomment below and update the code to test the property WebAndAppCash
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property WebAndAppCashRevenueIncludingTips (base name: "WebAndAppCashRevenueIncludingTips")', function() {
      // uncomment below and update the code to test the property WebAndAppCashRevenueIncludingTips
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property WebAndAppCard (base name: "WebAndAppCard")', function() {
      // uncomment below and update the code to test the property WebAndAppCard
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property WebAndAppCardRevenueIncludingTips (base name: "WebAndAppCardRevenueIncludingTips")', function() {
      // uncomment below and update the code to test the property WebAndAppCardRevenueIncludingTips
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property KioskCash (base name: "KioskCash")', function() {
      // uncomment below and update the code to test the property KioskCash
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property KioskCashRevenue (base name: "KioskCashRevenue")', function() {
      // uncomment below and update the code to test the property KioskCashRevenue
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property KioskCard (base name: "KioskCard")', function() {
      // uncomment below and update the code to test the property KioskCard
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property KioskCardRevenue (base name: "KioskCardRevenue")', function() {
      // uncomment below and update the code to test the property KioskCardRevenue
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property QropCash (base name: "QropCash")', function() {
      // uncomment below and update the code to test the property QropCash
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property QropCard (base name: "QropCard")', function() {
      // uncomment below and update the code to test the property QropCard
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property PosCard (base name: "PosCard")', function() {
      // uncomment below and update the code to test the property PosCard
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property PosCardRevenue (base name: "PosCardRevenue")', function() {
      // uncomment below and update the code to test the property PosCardRevenue
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property PosCardOnFlipdishOrders (base name: "PosCardOnFlipdishOrders")', function() {
      // uncomment below and update the code to test the property PosCardOnFlipdishOrders
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property OtherIntegrationFees (base name: "OtherIntegrationFees")', function() {
      // uncomment below and update the code to test the property OtherIntegrationFees
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property OtherIntegrationTips (base name: "OtherIntegrationTips")', function() {
      // uncomment below and update the code to test the property OtherIntegrationTips
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property RefundedFeesOnRefundedSales (base name: "RefundedFeesOnRefundedSales")', function() {
      // uncomment below and update the code to test the property RefundedFeesOnRefundedSales
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property Vat (base name: "Vat")', function() {
      // uncomment below and update the code to test the property Vat
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property Total (base name: "Total")', function() {
      // uncomment below and update the code to test the property Total
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

    it('should have the property ThirdPartyIntegrationFeesAndTips (base name: "ThirdPartyIntegrationFeesAndTips")', function() {
      // uncomment below and update the code to test the property ThirdPartyIntegrationFeesAndTips
      //var instance = new Flipdish.PayoutReport3DetailsFlipdishFees();
      //expect(instance).to.be();
    });

  });

}));
