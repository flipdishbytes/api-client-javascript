/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.UserInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserInfo', function() {
    it('should create an instance of UserInfo', function() {
      // uncomment below and update the code to test UserInfo
      //var instane = new Flipdish.UserInfo();
      //expect(instance).to.be.a(Flipdish.UserInfo);
    });

    it('should have the property PhoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property PhoneNumber
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property Email (base name: "Email")', function() {
      // uncomment below and update the code to test the property Email
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property EmailConfirmed (base name: "EmailConfirmed")', function() {
      // uncomment below and update the code to test the property EmailConfirmed
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property PreventFromUsingCards (base name: "PreventFromUsingCards")', function() {
      // uncomment below and update the code to test the property PreventFromUsingCards
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property IsUserPhoneNumberBlocked (base name: "IsUserPhoneNumberBlocked")', function() {
      // uncomment below and update the code to test the property IsUserPhoneNumberBlocked
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property UserWhiteLabels (base name: "UserWhiteLabels")', function() {
      // uncomment below and update the code to test the property UserWhiteLabels
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property UserId (base name: "UserId")', function() {
      // uncomment below and update the code to test the property UserId
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property UserName (base name: "UserName")', function() {
      // uncomment below and update the code to test the property UserName
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property CustomerName (base name: "CustomerName")', function() {
      // uncomment below and update the code to test the property CustomerName
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property HasLoggedIn (base name: "HasLoggedIn")', function() {
      // uncomment below and update the code to test the property HasLoggedIn
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property DisableAppRatingControl (base name: "DisableAppRatingControl")', function() {
      // uncomment below and update the code to test the property DisableAppRatingControl
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property GloballyOptedOut (base name: "GloballyOptedOut")', function() {
      // uncomment below and update the code to test the property GloballyOptedOut
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property CompletedOrderCount (base name: "CompletedOrderCount")', function() {
      // uncomment below and update the code to test the property CompletedOrderCount
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property CancelledOrderCount (base name: "CancelledOrderCount")', function() {
      // uncomment below and update the code to test the property CancelledOrderCount
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property OrderTotalValue (base name: "OrderTotalValue")', function() {
      // uncomment below and update the code to test the property OrderTotalValue
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property TsMostRecentOrder (base name: "TsMostRecentOrder")', function() {
      // uncomment below and update the code to test the property TsMostRecentOrder
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property TsFirstOrder (base name: "TsFirstOrder")', function() {
      // uncomment below and update the code to test the property TsFirstOrder
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property IsRestaurantUser (base name: "IsRestaurantUser")', function() {
      // uncomment below and update the code to test the property IsRestaurantUser
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property Installs (base name: "Installs")', function() {
      // uncomment below and update the code to test the property Installs
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryLocations (base name: "DeliveryLocations")', function() {
      // uncomment below and update the code to test the property DeliveryLocations
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property PaymentAccounts (base name: "PaymentAccounts")', function() {
      // uncomment below and update the code to test the property PaymentAccounts
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property LanguageId (base name: "LanguageId")', function() {
      // uncomment below and update the code to test the property LanguageId
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property CurrentLanguageName (base name: "CurrentLanguageName")', function() {
      // uncomment below and update the code to test the property CurrentLanguageName
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property Languages (base name: "Languages")', function() {
      // uncomment below and update the code to test the property Languages
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property SalesForceContactId (base name: "SalesForceContactId")', function() {
      // uncomment below and update the code to test the property SalesForceContactId
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property StripeCustomerId (base name: "StripeCustomerId")', function() {
      // uncomment below and update the code to test the property StripeCustomerId
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

    it('should have the property UserMonthlyCommissions (base name: "UserMonthlyCommissions")', function() {
      // uncomment below and update the code to test the property UserMonthlyCommissions
      //var instance = new Flipdish.UserInfo();
      //expect(instance).to.be();
    });

  });

}));
