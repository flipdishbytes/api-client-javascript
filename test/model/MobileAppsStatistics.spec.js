/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MobileAppsStatistics', function() {
      beforeEach(function() {
        instance = new Flipdish.MobileAppsStatistics();
      });

      it('should create an instance of MobileAppsStatistics', function() {
        // TODO: update the code to test MobileAppsStatistics
        expect(instance).to.be.a(Flipdish.MobileAppsStatistics);
      });

      it('should have the property NumberDownload (base name: "NumberDownload")', function() {
        // TODO: update the code to test the property NumberDownload
        expect(instance).to.have.property('NumberDownload');
        // expect(instance.NumberDownload).to.be(expectedValueLiteral);
      });

      it('should have the property CurrentRate (base name: "CurrentRate")', function() {
        // TODO: update the code to test the property CurrentRate
        expect(instance).to.have.property('CurrentRate');
        // expect(instance.CurrentRate).to.be(expectedValueLiteral);
      });

      it('should have the property CurrentVersion (base name: "CurrentVersion")', function() {
        // TODO: update the code to test the property CurrentVersion
        expect(instance).to.have.property('CurrentVersion');
        // expect(instance.CurrentVersion).to.be(expectedValueLiteral);
      });

      it('should have the property PlayStoreLink (base name: "PlayStoreLink")', function() {
        // TODO: update the code to test the property PlayStoreLink
        expect(instance).to.have.property('PlayStoreLink');
        // expect(instance.PlayStoreLink).to.be(expectedValueLiteral);
      });

      it('should have the property AppBundleId (base name: "AppBundleId")', function() {
        // TODO: update the code to test the property AppBundleId
        expect(instance).to.have.property('AppBundleId');
        // expect(instance.AppBundleId).to.be(expectedValueLiteral);
      });

      it('should have the property LastUpdated (base name: "LastUpdated")', function() {
        // TODO: update the code to test the property LastUpdated
        expect(instance).to.have.property('LastUpdated');
        // expect(instance.LastUpdated).to.be(expectedValueLiteral);
      });

      it('should have the property Notes (base name: "Notes")', function() {
        // TODO: update the code to test the property Notes
        expect(instance).to.have.property('Notes');
        // expect(instance.Notes).to.be(expectedValueLiteral);
      });

      it('should have the property Published (base name: "Published")', function() {
        // TODO: update the code to test the property Published
        expect(instance).to.have.property('Published');
        // expect(instance.Published).to.be(expectedValueLiteral);
      });

      it('should have the property PlatformType (base name: "PlatformType")', function() {
        // TODO: update the code to test the property PlatformType
        expect(instance).to.have.property('PlatformType');
        // expect(instance.PlatformType).to.be(expectedValueLiteral);
      });

    });
  });

}));
