/**
 * Flipdish Open API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Flipdish);
  }
}(this, function(expect, Flipdish) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Flipdish.Payout();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Payout', function() {
    it('should create an instance of Payout', function() {
      // uncomment below and update the code to test Payout
      //var instane = new Flipdish.Payout();
      //expect(instance).to.be.a(Flipdish.Payout);
    });

    it('should have the property PayoutId (base name: "PayoutId")', function() {
      // uncomment below and update the code to test the property PayoutId
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PayeeBankAccountId (base name: "PayeeBankAccountId")', function() {
      // uncomment below and update the code to test the property PayeeBankAccountId
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property AccountName (base name: "AccountName")', function() {
      // uncomment below and update the code to test the property AccountName
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PayoutStatus (base name: "PayoutStatus")', function() {
      // uncomment below and update the code to test the property PayoutStatus
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property CreatedDate (base name: "CreatedDate")', function() {
      // uncomment below and update the code to test the property CreatedDate
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PeriodStartTime (base name: "PeriodStartTime")', function() {
      // uncomment below and update the code to test the property PeriodStartTime
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PeriodEndTime (base name: "PeriodEndTime")', function() {
      // uncomment below and update the code to test the property PeriodEndTime
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property DestinationBank (base name: "DestinationBank")', function() {
      // uncomment below and update the code to test the property DestinationBank
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property DestinationAccount (base name: "DestinationAccount")', function() {
      // uncomment below and update the code to test the property DestinationAccount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property Amount (base name: "Amount")', function() {
      // uncomment below and update the code to test the property Amount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PayoutType (base name: "PayoutType")', function() {
      // uncomment below and update the code to test the property PayoutType
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property Currency (base name: "Currency")', function() {
      // uncomment below and update the code to test the property Currency
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property CutoffDate (base name: "CutoffDate")', function() {
      // uncomment below and update the code to test the property CutoffDate
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesAmount (base name: "OnlineSalesAmount")', function() {
      // uncomment below and update the code to test the property OnlineSalesAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesDeliveryCharges (base name: "OnlineSalesDeliveryCharges")', function() {
      // uncomment below and update the code to test the property OnlineSalesDeliveryCharges
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesTips (base name: "OnlineSalesTips")', function() {
      // uncomment below and update the code to test the property OnlineSalesTips
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesServiceCharges (base name: "OnlineSalesServiceCharges")', function() {
      // uncomment below and update the code to test the property OnlineSalesServiceCharges
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesRefundedFees (base name: "OnlineSalesRefundedFees")', function() {
      // uncomment below and update the code to test the property OnlineSalesRefundedFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesFees (base name: "OnlineSalesFees")', function() {
      // uncomment below and update the code to test the property OnlineSalesFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PosSalesFees (base name: "PosSalesFees")', function() {
      // uncomment below and update the code to test the property PosSalesFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesRefundedAmount (base name: "OnlineSalesRefundedAmount")', function() {
      // uncomment below and update the code to test the property OnlineSalesRefundedAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PosSalesRefundedAmount (base name: "PosSalesRefundedAmount")', function() {
      // uncomment below and update the code to test the property PosSalesRefundedAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OnlineSalesTax (base name: "OnlineSalesTax")', function() {
      // uncomment below and update the code to test the property OnlineSalesTax
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalOnlineRevenue (base name: "TotalOnlineRevenue")', function() {
      // uncomment below and update the code to test the property TotalOnlineRevenue
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property CashSalesFees (base name: "CashSalesFees")', function() {
      // uncomment below and update the code to test the property CashSalesFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property CashSalesRefundedFees (base name: "CashSalesRefundedFees")', function() {
      // uncomment below and update the code to test the property CashSalesRefundedFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property CustomerCashFees (base name: "CustomerCashFees")', function() {
      // uncomment below and update the code to test the property CustomerCashFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property SalesFeesVat (base name: "SalesFeesVat")', function() {
      // uncomment below and update the code to test the property SalesFeesVat
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalFees (base name: "TotalFees")', function() {
      // uncomment below and update the code to test the property TotalFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalOnlineRevenueAdjustments (base name: "TotalOnlineRevenueAdjustments")', function() {
      // uncomment below and update the code to test the property TotalOnlineRevenueAdjustments
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property ChargebackAmount (base name: "ChargebackAmount")', function() {
      // uncomment below and update the code to test the property ChargebackAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PosSalesChargebackAmount (base name: "PosSalesChargebackAmount")', function() {
      // uncomment below and update the code to test the property PosSalesChargebackAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property ChargebackRefundedFees (base name: "ChargebackRefundedFees")', function() {
      // uncomment below and update the code to test the property ChargebackRefundedFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalChargebackCost (base name: "TotalChargebackCost")', function() {
      // uncomment below and update the code to test the property TotalChargebackCost
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalOtherCharges (base name: "TotalOtherCharges")', function() {
      // uncomment below and update the code to test the property TotalOtherCharges
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property OpeningBalance (base name: "OpeningBalance")', function() {
      // uncomment below and update the code to test the property OpeningBalance
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property ClosingBalance (base name: "ClosingBalance")', function() {
      // uncomment below and update the code to test the property ClosingBalance
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PayGreenSalesAmount (base name: "PayGreenSalesAmount")', function() {
      // uncomment below and update the code to test the property PayGreenSalesAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryIntegrationFee (base name: "DeliveryIntegrationFee")', function() {
      // uncomment below and update the code to test the property DeliveryIntegrationFee
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property DeliveryIntegrationTipFee (base name: "DeliveryIntegrationTipFee")', function() {
      // uncomment below and update the code to test the property DeliveryIntegrationTipFee
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TotalThirdPartyFees (base name: "TotalThirdPartyFees")', function() {
      // uncomment below and update the code to test the property TotalThirdPartyFees
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PosSalesAmount (base name: "PosSalesAmount")', function() {
      // uncomment below and update the code to test the property PosSalesAmount
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property PosSalesTax (base name: "PosSalesTax")', function() {
      // uncomment below and update the code to test the property PosSalesTax
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

    it('should have the property TipsOnPosSales (base name: "TipsOnPosSales")', function() {
      // uncomment below and update the code to test the property TipsOnPosSales
      //var instance = new Flipdish.Payout();
      //expect(instance).to.be();
    });

  });

}));
